<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://zhengstar94.github.io//feed.xml" rel="self" type="application/atom+xml"/><link href="https://zhengstar94.github.io//" rel="alternate" type="text/html" hreflang="en"/><updated>2024-06-21T07:33:23+00:00</updated><id>https://zhengstar94.github.io//feed.xml</id><title type="html">blank</title><subtitle>Welcome to Xingxing&apos;s blog, where I share my thoughts and experiences on various topics. </subtitle><entry><title type="html">A small guide to supplements: What you need to know</title><link href="https://zhengstar94.github.io//blog/2023/small-guide-to-supplements-what-you-need-to-know/" rel="alternate" type="text/html" title="A small guide to supplements: What you need to know"/><published>2023-11-12T00:00:00+00:00</published><updated>2023-11-12T00:00:00+00:00</updated><id>https://zhengstar94.github.io//blog/2023/small-guide-to-supplements-what%20you%20need%20to%20know</id><content type="html" xml:base="https://zhengstar94.github.io//blog/2023/small-guide-to-supplements-what-you-need-to-know/"><![CDATA[<ol> <li><a href="#disclaimer">Disclaimer</a></li> <li><a href="#motivation">Introduction: Motivaton of this blog</a></li> <li><a href="#anti-aging">Anti-aging Supplements</a> <ol> <li><a href="#Resveratrol">Resveratrol</a></li> <li><a href="#NMN">NMN</a></li> <li><a href="#Ubiquinol">Ubiquinol</a></li> <li><a href="#Astaxanthin">Astaxanthin</a></li> <li><a href="#grape_seed">Grape Seed Extract</a></li> </ol> </li> <li><a href="#enzyme">Enzyme</a> <ol> <li><a href="#Serratiopeptidase">Serratiopeptidase</a></li> </ol> </li> <li><a href="#other">Minerals, Vitamins &amp; Fatty Acids</a> <ol> <li><a href="#vd">Vitamin D</a></li> <li><a href="#vk2">Vitamin K</a></li> <li><a href="#magnesium">Magnesium</a></li> <li><a href="#Omega-3">Omega-3 Fatty Acids</a></li> </ol> </li> <li><a href="#summary_and_concerns">Suggest Doses, Summary and Concerns</a></li> </ol> <h3 id="disclaimer-">Disclaimer <a name="disclaimer"></a></h3> <p>The information presented on the blog is <strong>ONLY</strong> intended for knowledge sharing and understanding how supplements work, it is <strong>NOT</strong> intended as medical advice or as a substitute for medical treatment. You should always consult with your physician or other health care professional before taking any medication or nutritional, herbal or homeopathic supplement.</p> <h2 id="introduction-motivation-of-this-blog-">Introduction: Motivation of this blog <a name="motivation"></a></h2> <p>Last week, I had a thought-provoking discussion with my colleagues. The topic of our conversation? Supplements. What intrigued me was that, just like many of my peers, I too have ventured into the world of supplements because of David Sinclair and various of health-related podcasts like Huberman lab. While the reasons taking supplements is easy for me: looking to combat inflammation. For my colleague, this could be boost performance when working out.</p> <p>A pill that promises health improvements, anti-aging effects, but to be honest I had very limited knowledge of those small pills I’m taking, I yearn for comprehension.What exactly are these supplements composed of at a molecular level? How do these minuscule pills exert their influence within our bodies biologically? Moreover, is there an optimal approach to taking these supplements to maximize their potential benefits for our health and well-being?</p> <p>Over the past few days, I’ve immersed myself into articles, research papers, and scientific literature. My aim was clear: to understand these tiny capsules that promise health. In the sections to come, I included 10 different supplements and introduced them each from the very essence of these their chemical identities, their categorizations, their mechanisms of action with the academic evidence. In the end a suggest dose for those supplements was given.</p> <h2 id="anti-aging-supplements-">Anti-aging Supplements <a name="anti-aging"></a></h2> <h3 id="resveratrol-">Resveratrol <a name="Resveratrol"></a></h3> <p>Resveratrol (RV) is a potent polyphenolic compound found in a variety of fruits and vegetables, including grapes, skin of peanuts, mulberries, blueberries, bilberries, soybeans, pomegranates, cranberries, soy, dark chocolate, pistachios. It possesses a distinct chemical structure, primarily composed of two aromatic rings connected by a methylene bridge. Biologically when you take resveratorl, it is rapidly metabolized by phase II enzymes in the intestine and liver. The RV’s <strong>low solubility</strong>(&lt; 0.05mg/ml) in water is caused by its enzymatic structure, which might affect its consumption.<a href="#1">[1]</a></p> <p align="center"> <img src="/images/2023/11/2880px-Cis_and_trans_resveratrol_notext copy.svg.png" alt="Cis_and_trans_resveratrol" width="350" height="100"/> </p> <p>Resveratrol occurs naturally in two forms: trans and cis isomers, with the trans-isomer being the more commonly associated with health benefits. It is typically a white powder extracted using methanol, characterized by a melting point between 253°C and 255°C, and has a relatively low molecular weight of 228.25.<a href="#1">[1]</a> While trans-resveratrol is the form primarily studied for its potential health advantages, cis-resveratrol is less prevalent and is typically produced synthetically rather than being the predominant form found in natural sources. The variation in the spatial arrangement of atoms around the double bond results in differences in the chemical and biological properties of these two isomers. Trans-resveratrol is generally considered the more biologically active and bioavailable form, making it the focal point of most research on the potential health benefits of resveratrol.</p> <h4 id="mechanisms-of-action">Mechanisms of action</h4> <p>It has been discovered that RV has many potential health benefits like antioxidant , cardioprotective, neurological, anti-inflammatory, antiplatelet, blood glucose-lowering, and anticancer activities.<a href="#1">[1]</a> In another famous experiments in nonhuman primates carried out by Laboratory of Cardiovascular Science, resveratrol has been found to prevent high fat/sucrose (HFS) diet-induced central arterial wall inflammation and stiffening.<a href="#2">[2]</a> Below is a simplified summary of its actions:</p> <ol> <li> <p><strong>SIRT1/3 Activation:</strong> Resveratrol activates SIRT1 and SIRT3 enzymes (SIRT1 and SIRT3 is one of <a href="https://en.wikipedia.org/wiki/Sirtuin">Sirtuin</a>, which are types of proteins involved in metabolic regulation, inflammation), Sirt1 has been implicated in many vital processes, such as DNA repair, cell survival, gluconeogenesis, muscle cell differentiation, cell-cycle regulation, lipid metabolism, fat mobilization and insulin sensitivity. <a href="#3">[3]</a></p> </li> <li> <p><strong>Neuroprotective Effects:</strong> It reduces <a href="https://en.wikipedia.org/wiki/Endoplasmic_reticulum">endoplasmic reticulum</a> (ER) stress, inhibits carbonyl protein activity, and supports factors associated with brain health.</p> </li> <li> <p><strong>Cardiometabolic Benefits:</strong> Resveratrol improves mitochondrial (The mitochondria are like little workers in a factory. They take the food you eat, use the oxygen you breathe, and create energy for your body) respiratory activity in the heart, increases adenosine monophosphate kinase (p-<a href="https://en.wikipedia.org/wiki/AMP-activated_protein_kinase">AMPK</a>) levels (AMPK acts as a sensor of cellular energy status and helps regulate various metabolic processes to ensure the cell has enough energy to function), and boosts <a href="https://en.wikipedia.org/wiki/SOD2">SOD2</a> (a family of enzymes that play a crucial role in protecting cells from damage caused by free radicals) levels, promoting cardiovascular health.</p> </li> <li> <p><strong>Inflammation Regulation:</strong> Resveratrol reduces inflammatory parameters, including interleukin-6 <a href="https://en.wikipedia.org/wiki/Interleukin_6">IL-6</a> (IL-6 involved in promoting inflammation, regulating immune cell activity) and Tumor Necrosis Factor-Alpha <a href="https://en.wikipedia.org/wiki/Tumor_necrosis_factor">TNF-α</a>, which plays a significant role in managing oxidative stress.</p> </li> <li> <p><strong>Anti-Cancer Properties:</strong> Resveratrol inhibits the production of NADPH oxidase <a href="https://en.wikipedia.org/wiki/NADPH_oxidase">NOX</a> and <a href="https://en.wikipedia.org/wiki/Myeloperoxidase">myeloperoxidase</a>, showing potential anti-cancer effects.</p> </li> <li> <p><strong>Neurological Health:</strong> Resveratrol inhibits Nitric oxide synthase <a href="https://en.wikipedia.org/wiki/Nitric_oxide_synthase">iNOS</a> production, protects against lipid peroxidation, and has potential therapeutic effects for Alzheimer’s disease (AD) by promoting amyloid precursor protein cleavage and overcoming oxidative stress.</p> </li> <li> <p><strong>Reproductive System Benefits:</strong> Resveratrol improves sperm mobility, increases zinc concentration, and counteracts prooxidative effects in the reproductive system.</p> </li> <li> <p><strong>Intestinal Health:</strong> Resveratrol reduces markers like <a href="https://en.wikipedia.org/wiki/Interleukin_8">IL-8</a>, Vascular Endothelial Growth Factor <a href="https://en.wikipedia.org/wiki/Vascular_endothelial_growth_factor">VEGF</a> (VEGF’s normal function is to create new blood vessels, but overexpression of VEGF can cause vascular disease), and Reactive oxygen species <a href="https://en.wikipedia.org/wiki/Reactive_oxygen_species">ROS</a> (ROS are like energetic troublemakers in your body that, when there are too many of them, can create a bit of chaos and cause damage to your cells), indicating a role in managing intestinal disorders. <a href="#4">[4]</a></p> </li> </ol> <p>The figure below shows the general benefits of resveratrol.</p> <p align="center"> <img src="/images/2023/11/Screenshot 2023-11-17 at 10.56.54.png" alt="resveratrol_benifit" width="90%" height="auto"/> </p> <h3 id="nmn-">NMN <a name="NMN"></a></h3> <p>Nicotinamide Mononucleotide (<a href="https://en.wikipedia.org/wiki/Nicotinamide_mononucleotide">NMN</a>). In humans, several enzymes use NMN to generate nicotinamide adenine dinucleotide (<a href="https://en.wikipedia.org/wiki/Nicotinamide_adenine_dinucleotide">NADH</a>). (NAD+ (Nicotinamide Adenine Dinucleotide) is a crucial coenzyme in cells that plays a fundamental role in various biological processes, you can think of it as coal for energy production, NAD+ was found gradually declining during aging.<a href="#6">[6]</a>) NMN can be found in fruits and vegetables such as broccoli, cabbage, cucumber and avocado at a concentration of about 1 mg per 100g. In mammals most NMN is synthesized from vitamin B3 in the form of nicotinamide. <a href="#5">[5]</a></p> <p align="center"> <img src="/images/2023/11/Screenshot 2023-11-18 at 15.57.20.png" alt="nmn" width="50%" height="auto"/> </p> <p>NMN consists of three main components: a nicotinamide group, a ribose sugar, and a phosphate group. The nicotinamide group is connected to the ribose unit, and the phosphate group is attached to the ribose, forming the complete NMN molecule. In the human body, it can be found in placenta tissue and body fluids such as blood and urine. <a href="#7">[7]</a></p> <h4 id="mechanisms-of-action-1">Mechanisms of action</h4> <p><strong>NAD+ Decline During Aging:</strong></p> <p>Aging is naturally associated with a decline in NAD+ levels. Enzymes like <a href="https://en.wikipedia.org/wiki/Sirtuin">sirtuins</a>,<a href="https://en.wikipedia.org/wiki/CD38">CD38</a>/CD157, <a href="https://en.wikipedia.org/wiki/Procyclin">PARP</a>, <a href="https://en.wikipedia.org/wiki/Tankyrase">TNKS</a>, and <a href="https://en.wikipedia.org/wiki/BST1">BST</a> contribute to NAD+ consumption during aging. <a href="#7">[7]</a> Chronic inflammation and oxidative stress hinder NAD+ biosynthesis. Reduced NAD+ levels lead to interruptions in cellular communication and mitochondrial dysfunction, contributing to age-related complications.</p> <p><strong>Why NMN Could Work as a Solution:</strong></p> <p>NMN (Nicotinamide Mononucleotide) is an intermediate compound in the NAD+ <a href="https://en.wikipedia.org/wiki/Biosynthesis">biosynthesis</a> (simple compounds are modified, converted into other compounds) pathway. Administering NMN can compensate for the decline in NAD+ levels during aging. NMN supplementation may activate SIRT1, a protein associated with anti-aging effects. Studies suggest NMN as a potential solution to restore NAD+ levels and counteract aging effects. The effect could be summarized by the figure <a href="#7">[7]</a> shown below</p> <p align="center"> <img src="/images/2023/11/Screenshot 2023-11-18 at 16.01.41.png" alt="nmn" width="80%" height="auto"/> </p> <h4 id="ubiquinol-">Ubiquinol <a name="Ubiquinol"></a></h4> <p>The term “ubiquinol” derives from “ubiquitous,” signifying its widespread presence. Ubiquinol is an electron-rich (reduced) form of coenzyme Q (ubiquinone), aka CoQ10. In 1957, Professor Frederick Crane and colleagues discovered CoQ10 from beef heart mitochondria at the University of Wisconsin-Madison Enzyme Institute.6 R.A. Morton, from the United Kingdom, isolated the compound in rat liver just after Dr. Crane’s discovery. It was Morton who named the compound ubiquinone, meaning ubiquitous quinone or one that “exists everywhere.”. In 1962, Peter D. Mitchell, PhD from University of Edinburgh determined how CoQ10 produces energy at the cellular level and in 1978 he was awarded the Nobel Prize for chemistry based on his discovery. Q10 normally could be found in Fish, Calf’s Liver (and other organ meats), Germ portion of whole grains in nature. <a href="#8">[8]</a></p> <p>CoQ10, also known as ubiquinone, is a necessary component of cell respiration and ATP production. Ubiquinone is a fat soluble substance used to form ubiquinol, the fully reduced form of ubiquinone and potent antioxidant. <a href="#8">[8]</a></p> <p><strong>Chemical Structure of CoQ10</strong>: The most common form in humans is Coenzyme Q10 (CoQ10 or ubiquinone-10). CoQ10 is a 1,4-benzoquinone, where the “Q” refers to the quinone chemical group, and “10” signifies the number of isoprenyl chemical subunits in its tail. (Ubiquinone Tail Variability: In natural ubiquinones, there can be from six to ten subunits in the tail. The specific variant, ubiquinone-10, is predominantly found in humans.)</p> <p align="center"> <img src="/images/2023/11/1600px-Ubiquinol.png" alt="ubiquinone" width="90%" height="auto"/> </p> <h4 id="mechanisms-of-action-2">Mechanisms of action</h4> <p>Role in Energy Production: CoQ10 is a family of fat-soluble substances, resembling vitamins, and is present in all respiring eukaryotic cells, primarily in the mitochondria.</p> <p>Mitochondrial Function: As a vital component of the electron transport chain, CoQ10 participates in aerobic cellular respiration, a process that generates energy in the form of ATP.</p> <p>Energy Generation: A substantial 95% of the human body’s energy is generated through aerobic cellular respiration, highlighting the significance of CoQ10.</p> <p>Organ-Specific Concentrations: Organs with high energy demands, such as the heart, liver, and kidney, exhibit the highest concentrations of CoQ10, emphasizing its critical role in meeting the energy requirements of these vital organs.</p> <p>The effect of Ubiquinol is much better than that of ordinary Q10 (ubiquinone), and currently the only supplier of Ubiquinol on the market is <strong>Kaneka</strong> from Japan. <a href="#8">[8]</a></p> <p>Moreover, CoQ10 can increase the production of key antioxidants such as <a href="https://en.wikipedia.org/wiki/Superoxide_dismutase">superoxide dismutase</a>, an enzyme capable of reducing vascular oxidative stress in hypertensive patients. <a href="#9">[9]</a> CoQ10 reduces levels of <a href="https://en.wikipedia.org/wiki/Lipid_peroxidation">lipid peroxidation</a> via the reduction of pro-oxidative compounds. <a href="#10">[10]</a> So peroxidation is a chain reaction commonly found in polyunsaturated fatty acids, and its products may be carcinogenic and mutagenic. Since lipids are components of cell membranes, lipid peroxidation may have disastrous consequences if it’s out of control inside body.</p> <h4 id="astaxanthin-">Astaxanthin <a name="Astaxanthin"></a></h4> <p>Astaxanthin (ASX) is a <a href="https://en.wikipedia.org/wiki/Xanthophyll">xanthophyll</a> carotenoid, chemically known as 3,3′-dihydroxyβ,β-carotene-4,4′-dione, It is a <a href="https://en.wikipedia.org/wiki/Lipid">lipid</a>-soluble pigment with red coloring properties. It was originally isolated from lobster by Kuhn in 1938. <a href="#11">[11]</a> ASX is primarily biosynthesised by various algae, bacteria and fungi and is consumed by marine animals, such as salmon, trout, crab, lobster and shrimp. <a href="#12">[12]</a></p> <p align="center"> <img src="/images/2023/11/Astaxanthin.svg.png" alt="astaxanthin" width="80%" height="auto"/> </p> <p>Haematococcus pluvialis, is reported to accumulate the highest levels of ASX in nature.</p> <p align="center"> <img src="/images/2023/11/Mikrofoto.de-Blutregenalgen_3.jpg" alt="mikrofoto" width="300" height="200"/> </p> <h4 id="mechanisms-of-action-3">Mechanisms of action</h4> <p>The skin comprises epidermis, dermis and hypodermis, which form the protectively outermost barrier against external environmental stresses such as repeated sun UV ray exposure. <a href="https://en.wikipedia.org/wiki/Ultraviolet">UV</a> radiation comprises three types: UVA(Long-wave UV, Passes largely through glass and clothing), UVB(Medium-wave UV, mostly absorbed by the ozone layer, Does not pass through ‘normal’ glass. but does pass through quartz glass, Causes other forms of skin cancer.) and UVC(Short-wave UV, germicidal UV, ionizing radiation at shorter wavelengths, completely absorbed by the ozone layer and atmosphere: hard UV..s very destructive to skin cells). UVC is filtered out by atmospheric ozone for the most part, while both UVA and UVB can cause a biological change in the skin. The overview could be found from the Figure <a href="#11">[11]</a> below.</p> <p align="center"> <img src="/images/2023/11/Screenshot 2023-11-26 at 12.41.17.png" alt="mikrofoto" width="80%" height="auto"/> </p> <p>The mechanism of action of Astaxanthin (ASX) involves its multifaceted impact on cellular and molecular processes, particularly in mitigating skin aging.</p> <ol> <li><strong>Antioxidant and Anti-Inflammatory Properties:</strong> <ul> <li>ASX acts as a potent antioxidant, capturing <a href="https://en.wikipedia.org/wiki/Singlet_oxygen">singlet oxygen</a> <a href="https://en.wikipedia.org/wiki/Radical_(chemistry)">radicals</a> in the <a href="https://en.wikipedia.org/wiki/Epidermis">epidermis</a> and <a href="https://en.wikipedia.org/wiki/Dermis">dermis</a>.</li> <li>This scavenging ability contributes to the restoration of skin elasticity and a reduction in wrinkle depth.</li> </ul> </li> <li><strong>Inhibition of Reactive Oxygen Species (ROS):</strong> <ul> <li>Excessive accumulation of ROS from repeated UV exposures and intrinsic aging can lead to inflammatory responses. ASX helps suppress the activation of ROS-producing enzymes and xanthine oxidase (an enzyme found in many species, including humans, and primarily functions in the catabolism of purine nucleic acids) in UV-irradiated cells.</li> </ul> </li> <li><strong>Regulation of Inflammatory Cytokines and MMPs:</strong> <ul> <li>ASX helps modulate inflammatory cytokines (e.g., IL-1, IL-6, IL-8, TNF-α) (same as resveratrol mentioned before) released due to UV exposure and intrinsic aging.</li> <li>This modulation helps inhibit the upregulation of <a href="https://en.wikipedia.org/wiki/Matrix_metalloproteinase">matrix metalloproteinases</a> (MMPs: MMPs, can degrade collagen and elastic fibers, leading to wrinkles and loss of skin elasticity.), including MMP-1, MMP-3, and MMP-9.</li> </ul> </li> <li><strong>Maintenance of Skin Barrier Integrity:</strong> <ul> <li>ASX supports skin barrier integrity by inhibiting excessive <a href="https://en.wikipedia.org/wiki/Corneocyte">corneocyte</a> desquamation, maintaining the epidermal barrier functions.</li> <li>It decreases plasma oxidation-related <a href="https://en.wikipedia.org/wiki/Malondialdehyde">malondialdehyde</a> (MDA) concentration, contributing to overall skin health.</li> </ul> </li> <li><strong>DNA Protection and Inflammation Reduction:</strong> <ul> <li>Dietary ASX supplementation reduces DNA oxidative damage biomarkers and lowers concentrations of inflammatory markers. <a href="#11">[11]</a></li> </ul> </li> </ol> <h3 id="grape-seed-extract-">Grape Seed Extract <a name="grape_seed"></a></h3> <p>Through different and various studies, it was proved that the <a href="https://en.wikipedia.org/wiki/Proanthocyanidin">proanthocyanidin</a> rich grape seed extract provides benefits against many diseases i.e. inflammation, cardiovascular disease, hypertension, diabetes, cancer, peptic ulcer, microbial infections, etc.</p> <p>The chemical composition of Grape Seed Extract (GSE) is rich and diverse, encompassing various components obtained through specific extraction processes. Grape seeds are manually separated from grapes, air-dried, and ground to a fine powder.The powdered grape seed is macerated in 70% ethanol, filtered, and the filtrate is dried to obtain powdered GSE. Dried grape seeds contain approximately 35% fiber, 29% extractable components, including phenolic compounds, proteins (11%), minerals (3%), and water (7%). <a href="#13">[13]</a></p> <h4 id="mechanisms-of-action-4">Mechanisms of action</h4> <p>The mechanisms of action of Grape Seed Extract (GSE) are diverse and involve a range of bioactive compounds present in the extract.</p> <ol> <li><strong>Polyphenols and Flavonoids, anti-oxidant:</strong> <ul> <li>GSE is an abundant source of polyphenols and flavonoids, known for their antioxidant properties and free radical scavenging abilities. The polyphenols in GSE act as effective free radical scavengers, protecting cells from damage caused by reactive oxygen species (ROS).</li> <li>Grape seed polyphenols exhibit higher antioxidant activity compared to well-known antioxidants such as vitamin C, vitamin E, and β-carotene.</li> </ul> </li> <li><strong>Enzymes with Dual Properties for Anti-Inflammatory:</strong> <ul> <li>GSE contains enzymes that not only exhibit antioxidant properties but also catalyze the release of histamine during inflammation and allergies.</li> </ul> </li> <li><strong>Fatty Acid Composition beneficial for CVD:</strong> <ul> <li>GSE’s fatty acid composition, particularly linoleic acid, is crucial for lipid metabolism.</li> <li>Grape seed oil, extracted from the seeds, contains a high amount of unsaturated fatty acids (85-90%), including α-linolenic acid (ω-3) and γ-linolenic acid (ω-6). <a href="#13">[13]</a> (These fatty acids are associated with reducing the risk of cardiovascular disease, cancer, hypertension, and autoimmune disorders.)</li> <li>The application of grape seed oil is linked to positive effects in reducing arteriosclerosis by lowering total blood cholesterol and LDL cholesterol. <a href="#13">[13]</a></li> </ul> </li> <li><strong>Dietary Fiber Content:</strong> <ul> <li>Grape seeds and peels contain a significant amount of dietary fiber, contributing to a lower risk of colon cancer, heart disease, diabetes, and obesity.</li> </ul> </li> </ol> <h2 id="enzyme-">Enzyme <a name="enzyme"></a></h2> <h4 id="serratiopeptidase-">Serratiopeptidase <a name="Serratiopeptidase"></a></h4> <p>Serratiopeptidase is a zinc containing <a href="https://en.wikipedia.org/wiki/Metalloproteinase#:~:text=A%20metalloproteinase%2C%20or%20metalloprotease%2C%20is,Identifiers">metalloprotease</a> of molecular weight 45–60 kDa. ($1Da = 1.66053906660(50) \times 10^{-27}kg$). It is originally obtained from <a href="https://en.wikipedia.org/wiki/Serratia_marcescens">Serratia marcescens</a> isolated from the intestine of the silkworm <a href="https://en.wikipedia.org/wiki/Bombyx_mori">Bombyx mori</a>. <a href="#14">[14]</a></p> <p>The graph below is Serratia marcescens:</p> <p align="center"> <img src="/images/2023/11/Screenshot 2023-12-03 at 21.55.16.png" alt="Serratia" width="50%" height="auto"/> </p> <p>While errapeptase and other proteolytic enzymes break down proteins by <a href="https://en.wikipedia.org/wiki/Hydrolysis">hydrolyzing</a> them, breaking the <a href="https://en.wikipedia.org/wiki/Peptide">peptide</a> bonds between amino acids (the building blocks of proteins). It is well documented that oral administration of proteolytic enzymes, including serrapeptase, is fully absorbed into the bloodstream and exerts effects throughout the body.</p> <h4 id="mechanisms-of-action-5">Mechanisms of action</h4> <ol> <li><strong>Reduce pain and inflammation:</strong> <ul> <li>Hydrolyses <a href="https://en.wikipedia.org/wiki/Bradykinin">bradykinin</a>, <a href="histamine">histamine</a>, and <a href="serotonin">serotonin</a> which helps to decrease pain and swelling and improve microcirculation, which in turn supports the wound healing process. <a href="#15">[15]</a></li> <li>Break down non-living protein tisse (<a href="https://en.wikipedia.org/wiki/Fibrin">fibrin</a> that can clog artness)</li> <li>Binds to the macroblobulin inside the blood plasma IT protects itself from immune system.</li> <li>Geo target, site specific</li> </ul> </li> <li><strong>Cardiovascular Disease:</strong> <ul> <li>Plaque: Fat cholesterol, fibre, other protein</li> <li>Break down non-living protein tisse (fibrin) -&gt; blood flow</li> </ul> </li> <li><strong>Ear Nose Throat Infections:</strong> <ul> <li>Geo target inflammation</li> </ul> </li> <li><strong>Antibiofilm</strong> <ul> <li>The anti-biofilm ability of serratiopeptidase is accredited to its capability of modulating the expression of adhesion molecules and reduces cell surface proteins of bacteria. <a href="#14">[14]</a></li> </ul> </li> </ol> <h2 id="minerals-vitamins--other-">Minerals, Vitamins &amp; Other <a name="other"></a></h2> <h3 id="vitamin-d-">Vitamin D <a name="vd"></a></h3> <p>Vitamin D is a lipid-soluble <a href="https://en.wikipedia.org/wiki/Prohormone">prohormone</a> that is vital for the maintenance of bone and muscle health by promoting the absorption and metabolism of calcium and <a href="https://en.wikipedia.org/wiki/Phosphate">phosphate</a>. <a href="#16">[16]</a> In addition to food sources such as fatty fish, eggs, fortified milk and cod liver oil, the human body uses ultraviolet B (UVB) radiation from sunlight to synthesise a significant portion of vitamin D requirements.</p> <p>The figure below is from <a href="https://www.youtube.com/watch?v=DP9RHWgNZ2U&amp;ab_channel=CatalystUniversity">Catalyst University</a>, which shows the process of biosynthesis of Vitamin D.</p> <p align="center"> <img src="/images/2023/11/Screenshot 2023-12-04 at 10.11.11.png" alt="vitd" width="90%" height="auto"/> </p> <p>Starting from the up-left of the graph above, the synthesis of vitamin D starts with the oxidation of cholesterol to <a href="https://en.wikipedia.org/wiki/7-Dehydrocholesterol">7-dehydrocholesterol</a> (7-DHC). (7-dehydrocholesterol is part of the metabolic pathway that controls the synthesis of cholesterol in human cells.) 7-DHC is then transported to the skin and is stored in the cell membranes of <a href="https://en.wikipedia.org/wiki/Keratinocyte">keratinocytes</a> and <a href="https://en.wikipedia.org/wiki/Fibroblast">fibroblasts</a> in the epidermis of skin. <a href="#16">[16]</a> In the skin, 7-DHC is <a href="https://en.wikipedia.org/wiki/Photodissociation">photolysed</a> by UVB (290–315 nm) to previtamin $D_3$, which is converted to <strong>inactive</strong> vitamin D (<a href="https://en.wikipedia.org/wiki/Cholecalciferol">Cholecalciferol</a>) by photolysis-mediated thermo-isomerisation. (<a href="https://chemistry.stackexchange.com/questions/107505/what-is-thermal-isomerization">What is thermal isomerization?</a>)</p> <p>To become biologically <strong>active</strong>, the vitamin D originating from dermal production or dietary sources undergoes a series of enzymatic conversions in the liver and kidney. Vitamin D is transported to the <strong>liver</strong> by vitamin D binding protein (DBP), together they are transported to the liver where the <a href="https://en.wikipedia.org/wiki/Cytochrome_P450">cytochrome P450</a> enzyme 25-hydroxylase ([CYP2R1]) adds a hydroxylgroup on carbon 25 to produce a major circulating form of vitamin D (25-(OH)D), aka <a href="https://en.wikipedia.org/wiki/Calcifediol">Calcifediol</a>, this process on the chemical level can be seen from the graph below:</p> <p align="center"> <img src="/images/2023/11/Reaction_-_cholecalciferol_to_calcidiol_(vertical).png" alt="CYP2R1" width="50%" height="auto"/> </p> <p>The Calcifediol then circulates in the bloodstream bound to DBP and it must be further hydroxylated at a different site in the <strong>kidney</strong> tubules to gain hormonal bioactivity. Hydroxylation at position $1\alpha$ by the mitochondrial cytochrome P450 enzyme 25-hydroxyvitamin D-$1\alpha$-hydroxylase (CYP27B1) of kidney converts Calcifediol to 1α,25-dihydroxyvitamin D (aka calcitriol, is the most active form of Vitamin D, ‘trio’ because it has 3 hydroxl groups), the <em>active form</em> of vitamin D that plays an essential role in mineral <a href="https://en.wikipedia.org/wiki/Homeostasis">homeostasis</a>.</p> <p align="center"> <img src="/images/2023/11/Screenshot 2023-12-04 at 22.33.00.png" alt="vitdgene" width="90%" height="auto"/> </p> <p>As the graph (from <a href="https://www.youtube.com/watch?v=DP9RHWgNZ2U&amp;ab_channel=CatalystUniversity">Catalyst University</a>) shown above, the receptor of Calcifediol is not existed in the plasma membrane since it is hydrophobic, instead it is inside nucleus. Calcifediol is bound with <a href="https://en.wikipedia.org/wiki/Vitamin_D_receptor">Vitamin D receptor</a> (VDR) VDR thens binds to DNA as VDR/VDR homodimers or VDR/RXR <a href="https://en.wikipedia.org/wiki/Protein_dimer">heterodimers</a> in order to regulate gene expression. <a href="#16">[16]</a>. The dimers subsequently recognise and bind with transcription factor IIB (TFIIB) to a <a href="https://en.wikipedia.org/wiki/VDRE">vitamin D response element</a> (VDRE) located in the promoter region of target genes and leads to transcriptional suppression or activation of vitamin D response genes.</p> <h4 id="mechanisms-of-action-6">Mechanisms of action</h4> <ol> <li><strong>Calcium Absorption &amp; Bone Health::</strong> <ul> <li>The association of low vitamin D and bone diseases such as rickets and osteoporosis is well known. <a href="#16">[16]</a></li> <li>Vitamin D is essential for the development and maintenance of healthy bones. It works in conjunction with calcium to support bone mineralization and prevent conditions like rickets in children and osteomalacia in adults.</li> </ul> </li> <li><strong>Immune System Modulation:</strong> <ul> <li>Vitamin D has immunomodulatory effects, influencing both the innate and adaptive immune systems. It plays a role in the regulation of immune cell functions and the production of antimicrobial peptides.</li> <li>The ability to combat infections, in particular, tuberculosis, viral infections and influenza. <a href="#17">[17]</a></li> </ul> </li> <li><strong>Anti-Inflammatory Properties:</strong> <ul> <li>Vitamin D has anti-inflammatory effects and may help modulate inflammatory responses. e.g. inflammatory bowel disease. <a href="#16">[16]</a></li> </ul> </li> </ol> <h3 id="vitamin-k-">Vitamin K <a name="vk2"></a></h3> <p>Vitamin K is a family of structurally similar, fat-soluble vitamers found in foods and marketed as dietary supplements. Vitamin K is important for the function of numerous proteins within the body, such as the <a href="https://en.wikipedia.org/wiki/Coagulation">coagulation factors</a>. <a href="#18">[18]</a></p> <p>Vitamin K exists naturally as vitamin K1 (<a href="https://en.wikipedia.org/wiki/Phytomenadione">phylloquinone</a>) and vitamin K2 (<a href="https://en.wikipedia.org/wiki/Vitamin_K2">menaquinone</a>(), MK-4 through MK-10). Vitamin K1 is mainly found in green leafy vegetables as well as olive oil and soyabean oil, whereas vitamin K2 (menaquinone) is found in small amounts in chicken, butter, egg yolks, cheese and fermented soyabeans (better known as natto).</p> <p>Vitamin K1 is involved in the activation of other clotting factors, including Factors VII, IX, and X. These factors play roles in the coagulation process, preventing excessive bleeding. The absorption rate of vitamin K1 from kale and spinach – foods identified as having a high vitamin K content – are on the order of <a href="https://en.wikipedia.org/wiki/Vitamin_K">4% to 17%</a> regardless of whether raw or cooked. Vitamin K2 is synthesized by bacteria in the human gut. Some of the vitamin K1 from dietary sources is converted into vitamin K2 by these gut bacteria.</p> <h4 id="mechanisms-of-action-7">Mechanisms of action</h4> <ol> <li><strong>Bone Health:</strong> <ul> <li><a href="https://en.wikipedia.org/wiki/Osteoporosis">Osteoporosis</a> is a leading contributor of fractures worldwide. Vitamin K is required for the gamma-carboxylation of osteocalcin in bone. A broad amount of data seems to indicate substantial potential for supplementary vitamin K. vitamin K1 on its own has already been shown to reduce fractures and cancer in a clinical trial. <a href="#19">[19]</a></li> </ul> </li> <li><strong>Vascular Calcufications:</strong> <ul> <li>Some vitamin-K dependent proteins are dependent on vitamin-K carboxylation for functionality. <a href="#20">[20]</a> Vitamin K acts as a cofactor in the conversion of <a href="https://en.wikipedia.org/wiki/Glutamate_(neurotransmitter)">glutamate</a> into <a href="https://en.wikipedia.org/wiki/Matrix_Gla_protein">Matrix Gla Protein</a> (MGP). MGP regulate many anticalcification and bone-forming processes in the body, which are dependent on vitamin K in order to be produced. <a href="#18">[18]</a></li> </ul> </li> </ol> <h3 id="magnesium-">Magnesium <a name="magnesium"></a></h3> <p>Electrolytes such as sodium, potassium, calcium, and magnesium are physiologically important due to their integral roles in metabolic and biologic processes. <a href="#21">[21]</a> Magnesium (${Mg}^{2+}$) possesses two <a href="https://en.wikipedia.org/wiki/Solvation_shell">hydration shells</a>, making its hydrated radius larger than that of other cations (${Na}^+$, $K^+$, and ${Ca}^{2+}$).</p> <p>The ‘hydrated radius’ is the effective size of the ion when surrounded by water molecules. In the case of magnesium, it has two layers or shells of water molecules around it. Because magnesium has two hydration shells, the presence of these water layers makes the effective size or radius of the hydrated magnesium ion larger compared to other cations (positively charged ions).</p> <p>Magnesium is an essential mineral which is a cofactor in over 300 enzymatic reactions for protein synthesis such as muscle contraction, nerve function, blood pressure and hormone binding. <a href="#22">[22]</a>. Magnesium is required for energy production, oxidative phosphorylation, and glycolysis. It contributes to the structural development of bone and is required for the synthesis of DNA, RNA, and the antioxidant glutathione. Magnesium also plays a role in the active transport of calcium and potassium ions across cell membranes, a process that is important to nerve impulse conduction, muscle contraction, and normal heart rhythm. <a href="#23">[23]</a></p> <p>As we discussed in the Vitamin D section, vitamin D can’t work without first being converted into a form your body can absorb. The level to which a vitamin or mineral can be absorbed is known as its “bioavailability.” Vitamin D’s bioavailability depends on magnesium. The enzymes (in the liver and kidneys) that enable vitamin D metabolism—converting it into its active form, calcitriol — can’t work without sufficient amounts of magnesium to draw upon.</p> <p>Early signs of magnesium deficiency include loss of appetite, nausea, vomiting, fatigue, and weakness. Therefore proper intake of magnesium from food or supplements is important. Magnesium supplements are available in a variety of forms. The following information comes from Dr. Jin W. Sung. ‘s YouTube Channel <a href="#23">[23]</a>.</p> <ol> <li><strong>Magnesium Citrate:</strong> <ul> <li>Absorption Rate: 30%</li> <li>Benefits: Good for constipation.</li> <li>Additional Info: More completely absorbed in the gut; considered more bioavailable.</li> </ul> </li> <li><strong>Magnesium Aspartate:</strong> <ul> <li>Absorption Rate: 42%</li> <li>Benefits: Excites neural transmitter activity.</li> <li>Additional Info: May enhance neural functions; higher absorption rate.</li> </ul> </li> <li><strong>Magnesium Glycinate:</strong> <ul> <li>Absorption Rate: 24%</li> <li>Benefits: Glycine is a precursor to GABA (inhibitory neurotransmitter), useful for calming effects.</li> <li>Additional Info: Supports <a href="https://en.wikipedia.org/wiki/%CE%93-Aminobutyric_acid">GABA</a> production; suitable for relaxation.</li> </ul> </li> <li><strong>Magnesium Chloride:</strong> <ul> <li>Absorption Rate: 20%</li> <li>Benefits: Suitable for individuals with low stomach acid issues.</li> <li>Additional Info: May be helpful for those with digestive concerns.</li> </ul> </li> <li><strong>Magnesium Sulfate:</strong> <ul> <li>Absorption Rate: 4%-7%</li> <li>Benefits: Limited information provided.</li> <li>Additional Info: Slightly lower absorption rate compared to other forms.</li> </ul> </li> <li><strong>Magnesium Oxide:</strong> <ul> <li>Absorption Rate: 4%</li> <li>Benefits: Limited information provided.</li> <li>Additional Info: One of the less soluble forms; lower absorption rate.</li> </ul> </li> <li><strong>Magnesium Theonate:</strong> <ul> <li>Absorption Rate: High</li> <li>Benefits: Suggested for sleep.</li> <li>Additional Info: May have specific benefits for sleep support.</li> </ul> </li> </ol> <h3 id="omega-3-fatty-acids-">Omega-3 Fatty Acids <a name="Omega-3"></a></h3> <p><strong>Fish Oil:</strong> Fish oil is a dietary supplement derived from the tissues of fatty fish, such as salmon, mackerel, and sardines. It is rich in omega-3 fatty acids, which are essential for various physiological functions in the body.</p> <p><strong>Omega-3 Fatty Acids:</strong> Omega-3 fatty acids are a type of <a href="https://en.wikipedia.org/wiki/Polyunsaturated_fat">polyunsaturated</a> fat that includes three main types: eicosapentaenoic acid (<a href="https://en.wikipedia.org/wiki/Eicosapentaenoic_acid">EPA</a>), docosahexaenoic acid (<a href="https://en.wikipedia.org/wiki/Docosahexaenoic_acid">DHA</a>), and alpha-linolenic acid (<a href="https://en.wikipedia.org/wiki/%CE%91-Linolenic_acid">ALA</a>). EPA and DHA are commonly found in fish oil, while ALA is present in plant-based sources like flaxseeds and walnuts.</p> <p><strong>Omega-6 Fatty Acids:</strong> Omega-6 fatty acids are another group of polyunsaturated fats that include linoleic acid (<a href="https://en.wikipedia.org/wiki/Linoleic_acid">LA</a>) and arachidonic acid (<a href="https://en.wikipedia.org/wiki/Arachidonic_acid">AA</a>). These fats are found in various vegetable oils and nuts.</p> <h3 id="mechanism-of-action">Mechanism of Action:</h3> <ol> <li><strong>Anti-Inflammatory Properties:</strong> <ul> <li><strong>Omega-3s:</strong> EPA and DHA from fish oil have anti-inflammatory effects. They can compete with omega-6 fatty acids for the same enzymes, leading to the production of less inflammatory molecules.</li> </ul> </li> <li><strong>Cardiovascular Health:</strong> <ul> <li><strong>Omega-3s:</strong> EPA and DHA contribute to cardiovascular health by reducing triglycerides, lowering blood pressure, and preventing the formation of blood clots. They also have a positive impact on heart rhythm.</li> </ul> </li> <li><strong>Brain Health:</strong> <ul> <li><strong>Omega-3s:</strong> DHA, in particular, is crucial for brain health and development. It makes up a significant portion of the brain’s structure and plays a role in cognitive function.</li> </ul> </li> <li><strong>Joint Health:</strong> <ul> <li><strong>Omega-3s:</strong> Fish oil’s anti-inflammatory properties may benefit joint health, reducing symptoms in conditions like rheumatoid arthritis.</li> </ul> </li> <li><strong>Immune System Support:</strong> <ul> <li><strong>Omega-3s:</strong> EPA and DHA support the immune system by promoting the activity of immune cells.</li> </ul> </li> <li><strong>Cellular Function:</strong> <ul> <li><strong>Balancing Omega-3 and Omega-6:</strong> Maintaining a balance between omega-3 and omega-6 fatty acids is essential. An imbalance, often seen in Western diets, may contribute to chronic inflammation and various health issues.</li> </ul> </li> <li><strong>Neuroprotective Effects:</strong> <ul> <li><strong>DHA:</strong> DHA has neuroprotective effects and is crucial for the development and function of the nervous system.</li> </ul> </li> <li><strong>ALA Conversion:</strong> <ul> <li><strong>ALA:</strong> ALA, found in plant-based sources, can be converted into EPA and DHA in the body, although the conversion rate is relatively low.</li> </ul> </li> </ol> <h2 id="suggest-doses-summary-and-concerns-">Suggest Doses, Summary and Concerns <a name="summary_and_concerns"></a></h2> <p>Supplements come in various forms, and understanding their safe levels is crucial. The following is a brief corresponding supplement suggested dosage based on Observed Safe Level (OSL) of human body.</p> <ol> <li><strong>NMN (Nicotinamide Mononucleotide):</strong> <ul> <li>NMN products, popular for anti-aging, are available in high doses (e.g., 500 mg).</li> <li>Safety is uncertain; rigorous scientific studies are essential for establishing long-term administration levels. <a href="#7">[7]</a></li> </ul> </li> <li><strong>Astaxanthin:</strong> <ul> <li>This fat-soluble carotenoid is best absorbed with fat-containing meals.</li> <li>Dosages range from 4 mg to 12 mg daily, with the ideal amount tailored to age, health, and individual conditions.</li> <li>Always follow product label dosages or consult a healthcare professional.</li> </ul> </li> <li><strong>Serratiopeptidase:</strong> <ul> <li>Recommended dosage is 60 mg/day on an empty stomach in the morning.</li> </ul> </li> <li><strong>Vitamin K:</strong> <ul> <li>Adequate intake (AI) is suggested at 90 μg/day for women and 120 μg/day for men. <a href="#18">[18]</a></li> </ul> </li> <li><strong>Vitamin D:</strong> <ul> <li>The recommended daily amount of vitamin D is 400 international units (IU) for children up to age 12 months, 600 IU for people ages 1 to 70 years, and 800 IU for people over 70 years.</li> </ul> </li> <li><strong>Magnesium:</strong> <ul> <li>The average requirement is 300–400 mg/day, varying based on factors like gender, age, and individual needs.</li> </ul> </li> </ol> <p>Understanding the motivation behind exploring supplements is essential. However, it’s equally important to approach these substances with caution. Many supplements listed here are best absorbed when taken with a fatty meal. This enhances their bioavailability, ensuring your body can make the most of their benefits.</p> <p>Remember, the decision to supplement should not be taken lightly. Always consult with a healthcare professional before introducing any new supplements into your meal. In such cases, seeking guidance from a doctor or checking a reliable drug interaction website (e.g. https://reference.medscape.com/drug-interactionchecker) is advisable to ensure compatibility and prevent any potential adverse effects.</p> <h2 id="useful-links">Useful links</h2> <ol> <li>Drug interation: https://reference.medscape.com/drug-interactionchecker</li> </ol> <h2 id="references">References</h2> <p><a id="1">[1]</a> Zhang, Li-Xue, Chang-Xing Li, Mohib Ullah Kakar, Muhammad Sajjad Khan, Pei-Feng Wu, Rai Muhammad Amir, Dong-Fang Dai, et al. ‘Resveratrol (RV): A Pharmacological Review and Call for Further Research’. Biomedicine &amp; Pharmacotherapy 143 (November 2021): 112164. https://doi.org/10.1016/j.biopha.2021.112164.</p> <p><a id="2">[2]</a> Mattison, Julie A., Mingyi Wang, Michel Bernier, Jing Zhang, Sung-Soo Park, Stuart Maudsley, Steven S. An, et al. ‘Resveratrol Prevents High Fat/Sucrose Diet-Induced Central Arterial Wall Inflammation and Stiffening in Nonhuman Primates’. Cell Metabolism 20, no. 1 (July 2014): 183–90. https://doi.org/10.1016/j.cmet.2014.04.018.</p> <p><a id="3">[3]</a> Marques, Francine Z., M. Andrea Markus, and Brian J. Morris. ‘Resveratrol: Cellular Actions of a Potent Natural Chemical That Confers a Diversity of Health Benefits’. The International Journal of Biochemistry &amp; Cell Biology 41, no. 11 (November 2009): 2125–28. https://doi.org/10.1016/j.biocel.2009.06.003.</p> <p><a id="4">[4]</a> Y. Bai, H. Yang, G. Zhang, L. Hu, Y. Lei, Y. Qin, Y. Yang, Q. Wang, R. Li, Q. Mao, Inhibitory effects of resveratrol on the adhesion, migration and invasion of human bladder cancer cells, Mol. Med. Rep. 15 (2) (2017) 885–889.</p> <p><a id="5">[5]</a> Shade C. The Science Behind NMN-A Stable, Reliable NAD+Activator and Anti-Aging Molecule. Integr Med (Encinitas). 2020 Feb;19(1):12-14. PMID: 32549859; PMCID: PMC7238909.</p> <p><a id="6">[6]</a> Schultz MB et al. Why NAD+ Declines during Aging: It’s Destroyed. Cell Metab. 2016 June 14; 23(6): 965–966</p> <p><a id="7">[7]</a> Nadeeshani, H., Li, J., Ying, T., Zhang, B., &amp; Lu, J. (2021). Nicotinamide mononucleotide (NMN) as an anti-aging health product – Promises and safety concerns. Journal of Advanced Research. doi:10.1016/j.jare.2021.08.003</p> <p><a id="8">[8]</a> Dyer, Andrew R. ‘CoQ10: A Literature Review’ 40, no. 1 (n.d.).</p> <p><a id="9">[9]</a> Kędziora-Kornatowska K, Czuczejko J, Motyl J, Szewczyk-Golec K, Kozakiewicz M, Pawluk H, Kędziora J, Błaszczak R, Banach M, Rysz J. Effects of coenzyme Q10 supplementation on activities of selected antioxidative enzymes and lipid peroxidation in hypertensive patients treated with indapamide. A pilot study. Arch Med Sci. 2010 Aug 30;6(4):513-8.</p> <p><a id="10">[10]</a> Cordero MD, Cano-García FJ, Alcocer-Gómez E, De Miguel M, Sánchez-Alcázar JA. Oxidative stress correlates with headache symptoms in fibromyalgia: coenzyme Q₁₀ effect on clinical improvement. PLoS One. 2012;7(4):e35677.</p> <p><a id="11">[11]</a> Zhou, Xiangyu, Qingming Cao, Caroline Orfila, Jian Zhao, and Lin Zhang. ‘Systematic Review and Meta-Analysis on the Effects of Astaxanthin on Human Skin Ageing’. Nutrients 13, no. 9 (24 August 2021): 2917. https://doi.org/10.3390/nu13092917.</p> <p><a id="12">[12]</a> Higuera-Ciapara, I.; Felix-Valenzuela, L.; Goycoolea, F. Astaxanthin: A review of its chemistry and applications. Crit. Rev. Food Sci. Nutr. 2006, 46, 185–196.</p> <p><a id="13">[13]</a> Gupta, Madhavi, Sanjay Dey, Daphisha Marbaniang, Paulami Pal, Subhabrata Ray, and Bhaskar Mazumder. ‘Grape Seed Extract: Having a Potential Health Benefits’. Journal of Food Science and Technology 57, no. 4 (April 2020): 1205–15. https://doi.org/10.1007/s13197-019-04113-w.</p> <p><a id="14">[14]</a> Jadhav, Swati B., Neha Shah, Ankit Rathi, Vic Rathi, and Abhijit Rathi. ‘Serratiopeptidase: Insights into the Therapeutic Applications’. Biotechnology Reports 28 (December 2020): e00544. https://doi.org/10.1016/j.btre.2020.e00544.</p> <p><a id="15">[15]</a> L. Desser, A. Rehberger, E. Kokron, W. Paukovits, Cytokine synthesis in human peripheral blood mononuclear cells after oral administration of polyenzyme preparations, Oncology. 50 (1993) 403–407.</p> <p><a id="16">[16]</a> Basit, S. ‘Vitamin D in Health and Disease: A Literature Review’. British Journal of Biomedical Science 70, no. 4 (1 January 2013): 161–72. https://doi.org/10.1080/09674845.2013.11669951.</p> <p><a id="17">[17]</a> Ginde AA, Mansbach JM, Camargo CA Jr. Association between serum 25-hydroxyvitamin D level and upper respiratory tract infection in the Third National Health and Nutrition Examination Survey. Arch Intern Med 2009; 169: 384–90.</p> <p><a id="18">[18]</a> DiNicolantonio, James J, Jaikrit Bhutani, and James H O’Keefe. ‘The Health Benefits of Vitamin K’. Open Heart 2, no. 1 (October 2015): e000300. https://doi.org/10.1136/openhrt-2015-000300.</p> <p><a id="19">[19]</a> Cockayne S, Adamson J, Lanham-New S, et al. Vitamin K and the prevention of fractures: systematic review and meta-analysis of randomized controlled trials. Arch Intern Med 2006;166:1256–61.</p> <p><a id="20">[20]</a> Berkner KL. The vitamin K-dependent carboxylase. Annu Rev Nutr 2005;25:127–49.</p> <p><a id="21">[21]</a> L.L. Yu, W.C. Davis, Y. Nuevo Ordonez, S.E. Long, Fast and accurate determination of K, Ca, and Mg in human serum by sector field ICP-MS, Anal. Bioanal. Chem. 405 (27) (2013) 8761–8768.</p> <p><a id="22">[22]</a> Author Dr. Jin W. Sung. “Magnesium—-Comprehensive Guide. Forms of magnesium, benefits, dosages, impact on Vitamin D.” YouTube, uploaded by Dr. Jin W. Sung, June 2023,https://www.youtube.com/watch?v=Z4ohSzChgII&amp;ab_channel=Dr.JinW.Sung</p> <p><a id="23">[23]</a> Rude RK. Magnesium. In: Ross AC, Caballero B, Cousins RJ, Tucker KL, Ziegler TR, eds. Modern Nutrition in Health and Disease. 11th ed. Baltimore, Mass: Lippincott Williams &amp; Wilkins; 2012:159-75.</p> <p><a id="24">[24]</a> Simopoulos, Ap. ‘Omega-3 Fatty Acids in Health and Disease and in Growth and Development’. The American Journal of Clinical Nutrition 54, no. 3 (September 1991): 438–63. https://doi.org/10.1093/ajcn/54.3.438.</p>]]></content><author><name></name></author><category term="general science"/><summary type="html"><![CDATA[Disclaimer Introduction: Motivaton of this blog Anti-aging Supplements Resveratrol NMN Ubiquinol Astaxanthin Grape Seed Extract Enzyme Serratiopeptidase Minerals, Vitamins &amp; Fatty Acids Vitamin D Vitamin K Magnesium Omega-3 Fatty Acids Suggest Doses, Summary and Concerns]]></summary></entry><entry><title type="html">混乱与秩序</title><link href="https://zhengstar94.github.io//blog/2022/%E6%B7%B7%E4%B9%B1%E4%B8%8E%E7%A7%A9%E5%BA%8F/" rel="alternate" type="text/html" title="混乱与秩序"/><published>2022-12-31T00:00:00+00:00</published><updated>2022-12-31T00:00:00+00:00</updated><id>https://zhengstar94.github.io//blog/2022/%E6%B7%B7%E4%B9%B1%E4%B8%8E%E7%A7%A9%E5%BA%8F</id><content type="html" xml:base="https://zhengstar94.github.io//blog/2022/%E6%B7%B7%E4%B9%B1%E4%B8%8E%E7%A7%A9%E5%BA%8F/"><![CDATA[<p>刚搬了新家，花了七小时把新买的床架从头到尾安装好，拧螺丝拧到怀疑人生，我感叹自己的坚持，但是到最后还是腰酸背痛，觉得自己有点老了。7个小时的时间，两只手徒增几道老茧。回望这一年，无论空间和时间如何变化，它始终是混乱与秩序交织的一年。</p> <p>人生的秩序性来自于安排好的一顿饭，一个和朋友的见面，一场旅行，我的2022开始于波罗的海三小国的一次旅行: 在拉脱维亚一家参观喝南瓜汤，吃了随便点的一道菜，随机性给人惊喜。在爱沙尼亚，我在火车上仔细端详一位在报纸上读读写写的老奶奶，拍着窗外徐徐向后行走的雪地。下了火车，在路边看蜷缩在河边的鸭子和天鹅，一父子在旁边逗白天鹅，还喊着白天鹅和他们回家。后来，搭上去芬兰的轮渡，再一次到赫尔辛基，已然是冰天雪地，寒风凛冽，想起上一次夏天来的时候，这种冷峻的气息悄然隐藏了，可能夏天是芬兰的保护色，行人还是一如既往得冷漠。最后在瑞典看完瓦萨博物馆和斯德哥尔摩的地铁，一天之内瑞典这个国家的美把我的审美上限提升了一个级别。</p> <p>而人生的混乱来自于各种不确定性，可以是吃饭噎到，也可以是飞机误点，或者是一个离谱政策的落地，甚至是一场战争。劳东燕在一月写的《直面真实的世界》遭到封禁，我那一段时间每天晚上睡前都要拿出来读一下，那一句 “疫情之下，岁月静好的想象终于难以维续，因为兵荒马乱的日子，距离每个人都几乎只有一步之遥。”，而这兵荒马乱的来源，不是病毒，更多的是这个刻舟求剑的清零政策，一个不以人为中心的冷酷冰冷政策下，剩下的只有荒谬和无情，人性的丑恶，在这个时间里像弱者伸出援助之手的人，一定会被一直记住。世界的另外一端，普京宣布进攻乌克兰，我难以想象2021年我在乌克兰基辅的地铁下，还和同学开玩笑说这地铁这么深，打战了肯定全部逃进地铁。随着乌克兰东部逐渐沦陷，战争的影响远超蝴蝶效应的速度，很快欧洲陷入了供应链的危机，能源危机接踵而来，超市里的食用油供不应求，能源账单指数上升，物价上升，肉眼可见超市的所有产品涨价，为了抑制全球性的通货膨胀，美联储加息的步伐宛如车轮战，导致美股暴跌，比特币暴跌，硅谷科技公司开始裁员，全球金融萧条近在咫尺。到今天为止，这场战争还在继续，这个世界上从来没有所谓正义的战争，发起战争的人，比如普金，希特勒之流，成为众矢之的是第一步，而血债血偿是所有被殃及的乌克兰人的心声。</p> <p>最让人无力的是，这些混乱和恐怖，还来自遥远的哭声，他们是丰县铁链女八孩妈妈，唐山烧烤店打人事件，四月的上海，东航坠机，贵州深夜转移放舱的大巴上的乘客，乌鲁木齐火灾，还有更多因为疫情而待业失业或者失去生命的普通人。如果我们对遥远的逝去的生命都没有一点难过，那我们如何面对自己的丧亲之痛？那一段时间，我每天都听不合时宜《在远方与日常的割裂中，人该如何自处》，这期podcast我今年估计听了100次，就在这无数次的回放中，好像我和主播一起在分担这份痛苦，不断轮回每一份沉甸甸的社会问题，像针扎一样让自己时刻保持清醒。年初的时候，官方总有一些媒体会去教育民众，让民众非必要不出行，但与此同时，这一片土地一直在上演具体的事情不重要，重要的事情不具体的诡异现象。没有什么事是非必要的，身边的一切都是必要的，一张白纸的内容，一次和朋友的聚会，一次旅程，一次呐喊，一场精彩的世界杯球赛，人的尊严人的价值，所有人都应该被当做人看待，勇敢，公平，正义，自由，这些都是必要的。</p> <p>我是一个特别容易共情的人，每次在微博上看到一些类似唐山烧烤店打人事件的视频，我有时候会有难以呼吸的窒息感，之后转化为长达好几天的抑郁。或者听到一个白人朋友说去泰国能任意让亚洲人挥之即来，招之即去，好像在种族的优越感面前，屈从意味着常态，他们的存在是可以随时dispensable的，这一切不论是互联网的，还是现实世界的东西都让我反胃和恶心，可能是一个人待久了，今年这种状态尤为强烈。为了适当管理调整自己的多巴胺分泌，我做了许多医学的笔记，还买了几盒补剂，后来自己一个人背上书包，去了一趟葡萄牙，轻装上阵，我只是去放松心情，感受花怎么开，水怎么流。走到距离里斯本几公里外的Sintra, 石碑上写着“陆止于此”，这种尽头感给人一种重获新生的力量感，在海边看海浪拍打礁石，自然的一切都是如此随机但恒定，驻足不久，就坐上回城的巴士，仿佛从那之后人生开始了新的篇章。多巴胺释放的时刻当然还有很多，我去看了Ed Sheeran, Coldplay, AJR的演唱会。我去了一趟纽约，因为时间有限没有逗留很久，但是短暂的时间里，我去了百老汇看音乐剧，在时代广场休憩，在纽约排列整齐的高层建筑之间穿梭，猎奇地在博物馆里拍陈列的古董，在中央公园漫步，我十分享受这种青春感，我真的全情投入，热爱这一切。</p> <p>几个月前，我辞职了，我很感谢我第一份工作的所有同事，最后一天的午餐，我尴尬于自己无法周全预定饭馆的慌乱和好像沉浸在刚毕业的小心翼翼里，但又感受到同事加倍的暖意，好像有点无罪释放的不安。这两年的工作我获得了很多技术上的成长，但内心里我也想着“打一枪换一个地方”，我需要换一碗水测试自己的能力。至此之后我个人的工作生活从布鲁塞尔转移到了阿姆斯特丹，感觉又一次站在人生的路口, 每一次做出选择，我都想起风雨哈佛路里面的一幕: 女主角在经历人生家庭各种混乱之后回到社区学校，在地铁上的独白“我的人生终于有了一些秩序感”。我一直在给我人生做一些维持秩序感的盘算，等我真的到了荷兰，发现一些更加拥有约束感的秩序性让我有点难以适应，比如更加高冷的邻居，条款更加细致和严肃的外籍事务办公室和市政厅，上下公交都需要刷卡，谈话更sharp的同事。有一天坐在公交车上，阴雨绵绵，我看着外面草原上的牛马，有一股想回到布鲁塞尔那种相对“混乱”社会的冲动和对当下的悔恨，我第一次如此迅速地后悔，虽然布鲁塞尔有不太干净的街道，尿骚味的地铁，夜里撒酒疯的醉汉，但这种少了条条框框的布鲁塞尔更加兜得住各种各样的人，它不缺乏温度，好像从某种程度上提供了适度的安全感。</p> <p>尽管我有时在抱怨，但我还是成功得到了我想去的地方。我愈发觉得，只要你一直聚焦，聚焦所有的细节，往对的方向跑下去，一直跑，你能到达你想到达的任何地方，我一直很感激我一直有往前走的动力，因为我相信 Your strength will equal your days. 但是前几天我在微博上写道“享受当下的每一个时刻，看乾坤大，草木青，无穷无尽地往所谓更高更更纸醉金迷的世界前进未必是人生唯一的答案，人应该有更高的追求”。人生还有许多其他更精彩的事情，去电影院看《瞬息全宇宙》，在酒店里熬夜看《风骚律师》，写一个脚本去刷美签slot，写一篇技术博客，看《送你一颗子弹》，《叫魂》，写一封感谢信，第一次当舅舅，去感谢别人的善意，去和朋友吃一餐散伙饭，或者……去争取谈一场恋爱。</p> <p>世界的分崩离析仍然在继续，生活还是要继续，就在几个小时前我坐在地上弯腰拧螺丝的时候，门铃突然响了，打开门一看，原来是隔壁邻居的老爷爷，年过60，戴着个精致的草帽，过来打招呼互相认识，握手后他就回去了。几分钟后，门铃又响了，还是这位老爷爷，他手上端着一碟荷兰人跨年会吃的两个油球，说送给我吃，还问我食物够不够，需不需要帮忙，走之前很真挚地和我说“you’re young and live alone, if you need anything, don’t hesitate and come to us”. 我内心感激无比，我会一直记得这份善意，这是我混沌或稳定的人生轨迹中的时刻，它与我漫长人生中的其他闪闪发光的琐碎一样，细碎却无比重要。</p>]]></content><author><name></name></author><category term="未分类"/><summary type="html"><![CDATA[刚搬了新家，花了七小时把新买的床架从头到尾安装好，拧螺丝拧到怀疑人生，我感叹自己的坚持，但是到最后还是腰酸背痛，觉得自己有点老了。7个小时的时间，两只手徒增几道老茧。回望这一年，无论空间和时间如何变化，它始终是混乱与秩序交织的一年。]]></summary></entry><entry><title type="html">Podcast Notes: Huberman Lab Dopomine</title><link href="https://zhengstar94.github.io//blog/2022/podcast-notes-huberman-lab-dopomine/" rel="alternate" type="text/html" title="Podcast Notes: Huberman Lab Dopomine"/><published>2022-05-29T00:00:00+00:00</published><updated>2022-05-29T00:00:00+00:00</updated><id>https://zhengstar94.github.io//blog/2022/podcast-notes-huberman-lab-dopomine</id><content type="html" xml:base="https://zhengstar94.github.io//blog/2022/podcast-notes-huberman-lab-dopomine/"><![CDATA[<p><strong>Huberman Lab: Controlling Your Dopamine For Motivation, Focus &amp; Satisfaction</strong></p> <p>Dopamine (DA, a contraction of 3,4-dihydroxyphenethylamine) is a neuromodulatory molecule that plays several important roles in cells. Dopamine is the substance that curculating in your system, it is <strong>responsible for motivation, craving thing, and also for time perception</strong>. The depletion of dopamine will lead to diseases, for example, Parkinson’s disease, a degenerative condition causing tremor and motor impairment, is caused by a loss of dopamine-secreting neurons in an area of the midbrain called the substantia nigra. Tonic and Phasic refers to the low and peaks level of your dopamin baseline.</p> <p><strong>Two main circuits for dopamine</strong></p> <ul> <li>The mesolimbic pathway: sometimes referred to as the reward pathway, is a dopaminergic pathway in the brain. The pathway connects the ventral tegmental area in the midbrain to the ventral striatum of the basal ganglia in the forebrain. The ventral striatum includes the nucleus accumbens and the olfactory tubercle. The release of dopamine from the mesolimbic pathway into the nucleus accumbens regulates incentive salience (e.g. motivation and desire for rewarding stimuli) and <strong>facilitates reinforcement and reward-related motor function learning.</strong></li> <li>The nigrostriatal pathway is a bilateral dopaminergic pathway in the brain that connects the substantia nigra pars compacta (SNc) in the midbrain with the dorsal striatum (i.e., the caudate nucleus and putamen) in the forebrain. <strong>This is the path that generates movements.</strong></li> </ul> <p><strong>How dopamine communicate?</strong></p> <p>There are two ways for dopamine to communicate, one is what we called local synapse release, basically it is a way where 2 neurons are communicating through the electric signal. And the other is a broader way, the volumetric release, this is like a broader way to release high density or much more neurons at the same time (Because dopamine is a neuron <strong>neuromodulator</strong>).</p> <p>We all have our own baseline to feel happy and pleasure, if you are taking drug, the kind of pleasure will instantly leads you the a very peak of dopamine, of course higher than your baseline, but if you’re experiencing this type of peak pleasure in a long period of time, your baseline will be higher too. It is very intuitive because you won’t be happier like when you’re kid when you received candies. Therefore controlling relativity gap between your baseline and peak is important.</p> <p><strong>Dopamine hit</strong></p> <p>Your behaviour can somehow depict your dopamine state, if you have no motivation to do things, you’re in a low dopamine state, when you try your first skydive and you feel scared or you are about to do a public speaking, you’re in a high dopamine state. And every time you enter into the high dopamine state, or you have a dopamine difference compared to the last state, you’re experiencing a dopamine hit, this could be when you eat a chocolate, you’re scrolling Instagram or Tiktok. But when you repeated engaged in things you are doing, your dopamine threshold hold will be higher.</p> <p><strong>Parkingson and Drugs</strong></p> <p>Andrew talked about a story about some young people who were addicted to heroine trying to get some drug called MPPP but mistakenly bought MPTP somewhere in california, what ended up is that the they couldn’t speak and have no movement to do things. It turns out the MPTP kills the nigrostriatal pathway where it generates the movement.</p> <p><strong>Control dopamine peaks &amp; baseline</strong></p> <p>All people have different levels of dopamine baseline because of several reasons. (e.g. Gene) Dopamine and epinephrine (aka adrenaline) are cousins. The release of epinephrine depends on the release of dopamine</p> <p>The list of things that affect your baseline:</p> <ul> <li>Chocolate: increase 1.5 higher times of your dopamine, but transient.</li> <li>Sex: increase 2 times higher of your dopamine baseline. transient.</li> <li>Nicotine: 2.5 times higher of your dopamine baseline. Very short-lived.</li> <li>Cocane: 2.2 times of your higher dopamine</li> <li>Amphetamine: 10 times of your baseline.</li> <li>Exercise (Running): 2 times in general, for people who don’t like, maybe no or less dopamine.</li> <li>caffeine: Pretty modest amount of increase in dopamine. But interesting fact is that <strong>caffeine increase the number of receptors when you release your dopamine. (Means the effect/performance will be better when you’re releasing dopamine)</strong></li> </ul> <p><strong>Dopamine Setpoint</strong></p> <p>Dopamine is the universal currency of all the mammals, this substance allows us seeking, motivating us to do things. But counter intuitively is that when you reach the peak of your dopamine, after a while, you might feel low, it is because your dopamine drop to the lower level than before. An example is that postpartum depression aka PPD, when you had a greater reward, after that your dopamine will be back to a lower level. Same as when you finished your graduation or a long trip, you might experience sometime of de-motivation or ‘depression’. It always takes some time for the dopamine to come back to stability from the ‘setpoint’.</p> <p>And one thing to keep in mind is that you only have <strong>certain amount of dopamine</strong> what we called pool of dopamine and only those are in readily releasable pool that could be ‘deployed’ or say released in a certain amount of time.</p> <p>Another thing is that for those ‘play hard and party hard’ type of person, they could do multi-tasking and feel energetic through the week, at some point, they will experience the low level of dopamine in there lives, which is not caused by aging or slow metabolism, it is because for all of the ‘hard’ mode things in their life, it all consumes dopamine and it might all reach to a peak to some extends, and gradually, the baseline of your dopamine will drop. Then you will feel much harder to feel pleasure of doing things as before.</p> <p><strong>Ensure the Best Evoking Dopamine Release</strong></p> <p>How do we maintain a good level of our dopamine baseline while reaching our peaks? The key thing is <strong>not to a expect or chase high levels of dopamine release every time we’re engaging in certain things.</strong> What you need is a random intermittent reinforcement schedules. Things you could do is to start by observing the things that gives you high pleasure or motivation, and randomly modified the ‘factor’ that enhancing this activity. For example, when you’re doing exercise, you’re also drinking your energetic drinks beforehand and listening to your favorite music when you’re running, what you can do is to cut one of those things, only focus on one thing that give your relatively high but not peak dopamine release activity. You could do a flip coin before to decide whether to take those <strong>dopamine supportive elements</strong> with you into the gym.</p> <p>Smart phone (social media) is a very usual dopamine supportive element in our modern daily life and it alters the way our dopamine baseline changes. A good practice is to remove the smart phone element in our activity as much as possible, e.g. When working out or doing other things.</p> <p><strong>Activities that increase our dopamine baseline</strong></p> <p>Activities that increase our dopamine baseline: <strong>Cold exposure</strong> (shower with cold water). Another interesting fact is that when you’re getting reward as you finish something, you’re actually demotivating throughout the engagement the task. The key thing is having the <strong>growth mindset</strong>, which is only focusing the effort and the process you’re doing, and at the same time removing other things that gives you dopamine, only focus on the effort part and remind yourself that this thing could bring the release of dopamine and you will love it in the end. In summary, <strong>don’t spike your dopamine prior or after your activity, spike your dopamine in the effort when you’re doint it</strong>.</p> <p><strong>Intermittent fasting</strong> could also help because of the fact that when we’re eating, we’re releasing dopamine. Quitting sugar and palatable food and instead eat whole foods. Same as preventing constantly spending time and receive pleasure through watching the pornography.</p> <p><strong>Supplement that increase our dopamine baseline</strong></p> <p>Some supplement that could increase the dopamine baseline, one is <strong>Macuna Pruiens</strong>, this could also help manage stress, which also helps improve sexual health. <strong>L-tyrosine</strong>: Tyrosine is a nonessential amino acid the body makes from another amino acid called phenylalanine. It is an essential component for the production of several important brain chemicals called neurotransmitters, including epinephrine, norepinephrine, and dopamine. Those are supplement and <strong>not meant to use it regularly, could use it once or twice a week.</strong> <strong>Phenylethylamine, PEA</strong> is also good for releasing dopamine (the host take it from time to time for work focus, 500ml PEA and 300ml of <strong>Alpha-GPC</strong>). One compound called <strong>Huperzine A</strong> also gained some popularity recently. For Molatonin, there is a study in 2001 about reducing dopamine, so this is something we might need to avoid.</p>]]></content><author><name></name></author><category term="other"/><category term="podcast"/><summary type="html"><![CDATA[Huberman Lab: Controlling Your Dopamine For Motivation, Focus &amp; Satisfaction]]></summary></entry><entry><title type="html">Displaying External Posts on Your al-folio Blog</title><link href="https://zhengstar94.github.io//blog/2022/displaying-external-posts-on-your-al-folio-blog/" rel="alternate" type="text/html" title="Displaying External Posts on Your al-folio Blog"/><published>2022-04-23T23:20:09+00:00</published><updated>2022-04-23T23:20:09+00:00</updated><id>https://zhengstar94.github.io//blog/2022/displaying-external-posts-on-your-al-folio-blog</id><content type="html" xml:base="https://zhengstar94.github.io//blog/2022/displaying-external-posts-on-your-al-folio-blog/"><![CDATA[]]></content><author><name></name></author></entry><entry><title type="html">ERC 721</title><link href="https://zhengstar94.github.io//blog/2022/erc-721/" rel="alternate" type="text/html" title="ERC 721"/><published>2022-03-20T00:00:00+00:00</published><updated>2022-03-20T00:00:00+00:00</updated><id>https://zhengstar94.github.io//blog/2022/erc-721</id><content type="html" xml:base="https://zhengstar94.github.io//blog/2022/erc-721/"><![CDATA[<p><strong>Token</strong></p> <ul> <li>Token (A token on Ethereum is basically just a smart contract that follows some common rules — namely it implements a standard set of functions that all other token contracts share) ERC: Ethereum Request for Comments;</li> <li>ERC 20: An ERC20 token is a standard used for creating and issuing smart contracts on the Ethereum blockchain. Smart contracts can then be used to create smart property or tokenized assets that people can invest in, could act as currencies because the it has divisible and exchangeable properties. Fungible token (Bitcoin, ETH)</li> <li>ERC 721: ERC721 tokens are not interchangeable since each one is assumed to be unique, and are not divisible. for example NFT (Non Fungible Token)</li> </ul> <p>contract ERC721 { event Transfer(address indexed _from, address indexed _to, uint256 indexed _tokenId); event Approval(address indexed _owner, address indexed _approved, uint256 indexed _tokenId);</p> <p>function balanceOf(address _owner) external view returns (uint256); function ownerOf(uint256 _tokenId) external view returns (address); function transferFrom(address _from, address _to, uint256 _tokenId) external payable; function approve(address _approved, uint256 _tokenId) external payable; }</p> <p><strong>balanceOf</strong></p> <p>This function simply takes an address, and returns how many tokens that address owns.</p> <p>Note: Remember, uint256 is equivalent to uint. We’ve been using uint in our code up until now, but we’re using uint256 here because we copy/pasted from the spec.</p> <p><strong>ownerOf</strong></p> <p>This function takes a token ID , and returns the address of the person who owns it.</p> <p><strong>transferFrom</strong></p> <p>Note that the ERC721 spec has 2 different ways to transfer tokens:</p> <ul> <li>The first way is the token’s owner calls transferFrom with his address as the _from parameter, the address he wants to transfer to as the _to parameter, and the _tokenId of the token he wants to transfer.</li> <li>The second way is the token’s owner first calls approve with the address he wants to transfer to, and the _tokenID . The contract then stores who is approved to take a token, usually in a mapping (uint256 \(latex {=&gt;}&amp;fg=000000\) address). Then, when the owner or the approved address calls transferFrom, the contract checks if that msg.sender is the owner or is approved by the owner to take the token, and if so it transfers the token to him.</li> </ul>]]></content><author><name></name></author><category term="未分类"/><summary type="html"><![CDATA[Token]]></summary></entry><entry><title type="html">Cost Functions and its properties in Deep Learning (TBC)</title><link href="https://zhengstar94.github.io//blog/2022/cost-functions-and-its-properties-in-deep-learning-tbc/" rel="alternate" type="text/html" title="Cost Functions and its properties in Deep Learning (TBC)"/><published>2022-01-08T00:00:00+00:00</published><updated>2022-01-08T00:00:00+00:00</updated><id>https://zhengstar94.github.io//blog/2022/cost-functions-and-its-properties-in-deep-learning-tbc</id><content type="html" xml:base="https://zhengstar94.github.io//blog/2022/cost-functions-and-its-properties-in-deep-learning-tbc/"><![CDATA[<p><strong>Loss Function and Cost Function</strong></p> <p>In supervised learning, concretely we’re learning from given training set \(\left(x_i, y_i\right)\) and formulate our hypotheses \(h_\theta(x)\). Here, the \(\theta_i\) ‘s are the parameters (also called weights) parameterizing the space of linear functions mapping from \(\mathcal{X}\) to \(\mathcal{Y}\). When there is no risk of confusion, we will drop the \(\theta\) subscript in \(h_\theta(x)\), and write it more simply as \(h(x)\).</p> <p>The goal of our learning is to minimize the distance between hypotheses and the real y, and Loss function is a function to measure such distance.</p> <p><strong>The difference between Loss Function and Cost Function</strong></p> <ul> <li>Loss function always appear when we are talking about 1 single training sample, given a prediction and calculate the loss between the prediction and real value.</li> <li>Cost function refers to the whole loss when we are talking about set of training sets (e.g. in mini-batch gradient descent)</li> <li>Hypothesis (objective function) is the function that needs to be optimized.</li> </ul> <p><strong>Mean Squared Error (MSE) L2 Loss</strong></p> <p>Mean Squared Error is the most common cost function used in regression problems, also called L2 loss, the formula is as followed:</p> \[\left.J(\theta)=\frac{1}{n} \sum_{i=1}^n\left(y^{(i)}-\hat{y}^{(i)}\right)\right)^2\] <p>We could see from the graph below, the square error is increased in a quadratic way, the lowest loss is 0 and and highest loss could be infinite.</p> <p><img src="https://zhengliangliang.files.wordpress.com/2022/01/screenshot-2022-01-08-at-18.45.40.png" alt=""/></p> <p>The MSE is very useful in regression problem, from the perspective of bias and variance perspective, we could do a bias and variance decomposition from MSE function.</p> <ul> <li><strong>Bias</strong> indicates the distance between the expectation of predicted value and real value. Geometrically speaking, if bias is big, then predicted deviates further from the real value. It is the relationship between predicted value and real value, denotes as \(=\mathbb{E}(\hat{\theta})-\theta\)</li> <li><strong>Variance</strong> describes the variation range of the predicted value, the degree of dispersion, that is, the distance from its own expectation. The larger the variance, the more spread out the distribution of the data. It is the relationship within the predicted values, denote as \(\operatorname{Var}=\mathbb{E}\left[(\hat{\theta}-\mathbb{E}(\hat{\theta}))^2\right]\)</li> </ul> <p>By using the decomposition trick in MSE equation shown in <a href="#eqdecompositionmse">2</a>. We could get that MSE is actually the addition of variance and the square of bias.</p> \[\begin{aligned} M S E(\hat{\theta}) &amp; =\mathbb{E}\left[(\hat{\theta}-\mathbb{E}(\hat{\theta})+\mathbb{E}(\hat{\theta})-\theta)^2\right] \\ &amp; =\mathbb{E}\left[(\hat{\theta}-\mathbb{E}(\hat{\theta}))^2+2((\hat{\theta}-\mathbb{E}(\hat{\theta}))(\mathbb{E}(\hat{\theta})-\theta))+(\mathbb{E}(\hat{\theta})-\theta)^2\right] \\ &amp; =\mathbb{E}\left[(\hat{\theta}-\mathbb{E}(\hat{\theta}))^2\right]+2 \mathbb{E}[(\hat{\theta}-\mathbb{E}(\hat{\theta}))(\mathbb{E}(\hat{\theta})-\theta)]+\mathbb{E}\left[(\mathbb{E}(\hat{\theta})-\theta)^2\right] \\ &amp; =\mathbb{E}\left[(\hat{\theta}-\mathbb{E}(\hat{\theta}))^2\right]+2(\mathbb{E}(\hat{\theta})-\theta) \mathbb{E}(\hat{\theta}-\mathbb{E}(\hat{\theta}))^2+\mathbb{E}\left[(\mathbb{E}(\hat{\theta})-\theta)^2\right] \\ &amp; =\mathbb{E}\left[(\hat{\theta}-\mathbb{E}(\hat{\theta}))^2\right]+\mathbb{E}\left[(\mathbb{E}(\hat{\theta})-\theta)^2\right] \\ &amp; =\operatorname{Var}(\hat{\theta})+\operatorname{Bias}(\hat{\theta}, \theta)^2\end{aligned}\] <p><strong>Probabilistic interpretation of MSE</strong></p> <p>A better explanation for using the MSE could be derived from a probabilistic interpretation. The relationship of the target hypothesis and real value y could be formed as</p> \[y^{(i)}=\theta^T x^{(i)}+\epsilon^{(i)}\] <p>where \(\epsilon^{(i)}\) is an error term that captures either unmodeled effects, or random noise. Let us further assume that the \(\epsilon^{(i)}\) are distributed IID (independently and identically distributed) according to a Gaussian distribution (also called a Normal distribution) with mean zero and some variance \(\sigma^2\). We can write this assumption as ‘ \(\epsilon{ }^{(i)} \sim \mathcal{N}\left(0, \sigma^2\right)\).’ l.e., the density of \(\epsilon^{(i)}\) is given by</p> \[p\left(\epsilon^{(i)}\right)=\frac{1}{\sqrt{2 \pi} \sigma} \exp \left(-\frac{\left(\epsilon^{(i)}\right)^2}{2 \sigma^2}\right)\] <p>This implies that</p> \[p\left(y^{(i)} \mid x^{(i)} ; \theta\right)=\frac{1}{\sqrt{2 \pi} \sigma} \exp \left(-\frac{\left(y^{(i)}-\theta^T x^{(i)}\right)^2}{2 \sigma^2}\right)\] <p>When we wish to explicitly view this as a function of \(\theta\), we will instead call it the likelihood function:</p> \[L(\theta)=L(\theta ; X, \vec{y})=p(\vec{y} \mid X ; \theta)\] <p>The MLE (Maximization of Likelihood Estimation) is a method we used to do the parameter estimation, here we have the parameter theta to be estimated, in order to maximize the likelihood, normally we took the log of this likelihood function (because likelihood function involves tons of probability products, using log form to transform it to summation form), so we have:</p> \[\begin{aligned} L(\theta) &amp; =\prod_{i=1}^n p\left(y^{(i)} \mid x^{(i)} ; \theta\right) \\ &amp; =\prod_{i=1}^n \frac{1}{\sqrt{2 \pi} \sigma} \exp \left(-\frac{\left(y^{(i)}-\theta^T x^{(i)}\right)^2}{2 \sigma^2}\right)\end{aligned}\] \[\begin{aligned} \ell(\theta) &amp; =\log L(\theta) \\ &amp; =\log \prod_{i=1}^n \frac{1}{\sqrt{2 \pi} \sigma} \exp \left(-\frac{\left(y^{(i)}-\theta^T x^{(i)}\right)^2}{2 \sigma^2}\right) \\ &amp; =\sum_{i=1}^n \log \frac{1}{\sqrt{2 \pi} \sigma} \exp \left(-\frac{\left(y^{(i)}-\theta^T x^{(i)}\right)^2}{2 \sigma^2}\right) \\ &amp; =n \log \frac{1}{\sqrt{2 \pi} \sigma}-\frac{1}{\sigma^2} \cdot \frac{1}{2} \sum_{i=1}^n\left(y^{(i)}-\theta^T x^{(i)}\right)^2 .\end{aligned}\] <p>Hence, maximizing \(\ell\left(\theta\right)\) gives the same answer as minimizing</p> <p>\(\frac{1}{2} \sum_{i=1}^n\left(y^{(i)}-\theta^T x^{(i)}\right)^2\) The equation <a href="#eqols">9</a> is also known as ordinary least square. When linear regression model is built, you would usually use the least square error (LSE) method that is minimizing the total euclidean distance between a line and the data points.</p> <p>Once the model is built, in order to evaluate its performances. A metric is introduced to evaluate ‘how far’ is your model to the actual real data points in average. The MSE is a good estimate function.</p> <p>Therefore, LSE is a method that builds a model and MSE is a metric that evaluate your model’s performances, but this 2 have a lot in common in the probabilistic perspective, that is the reason I used hypothesis in the derivation, so you could see the same but in 2 different context.</p> <p><strong>Mean Absolute Error (MAE) L1 Loss</strong></p> <p>Mean Absolute Error (MAE) is another class of loss function used in regression problem, also known as L1 loss, the cost function is shown in equation <a href="#eqmae">10</a>.</p> \[J_{\theta}={\frac{1}{n}}\sum_{i=1}^{n}|y_{i}-{\hat{y}}_{i}|\] <p>The loss of mae when assumed y real is 0 could be plotted below. We could tell from the graph that the biggest loss could be infinite and the lowest is 0, and the loss increased linearly.</p> <p><img src="https://zhengliangliang.files.wordpress.com/2022/01/screenshot-2022-01-10-at-21.47.47.png" alt=""/></p> <p><strong>Probabilistic interpretation of MAE</strong></p> <p>Same as the derivation of MSE, when we’re considering the loss of MAE, we assumed that the error is distributed as Laplace distribution \((\mu=0, b=1)\), the error \(\epsilon\) distribution of could be written as <a href="#eqlaplace">11</a></p> \[p\left(y_{i}\mid x_{i}\right)=\frac{1}{2}\exp\left(-\left|y_{i}-\hat{y}_{i}\right|\right)\] <p>Using the Maximum Likelihood Estimation (MLE) as in mean square error example, we could have the following derivation</p> \[L(x,y)=\prod_{i=1}^{n}\frac{1}{2}\exp\left(-\left|y_{i}-\hat{y}_{i}\right|\right)\] \[L L(x,y)=-n\log2-\sum_{i=1}^{n}|y_{i}-\hat{y_{i}}|\] \[N L L(x,y)=\sum_{i=1}^{n}|y_{i}-\hat{y}_{i}|\] <p>As we can see after that we could get the form of MAE, by maximize the LL is the same as minimize NLL.</p> <p><strong>Difference between MSE and MAE</strong></p> <p>The MSE loss (L2) generally converges faster than the MAE loss (L1), but the MAE loss is more robust to outliers.</p> <p>MSE generally converges faster than MAE. When using the gradient descent algorithm, and the gradient of MAE loss is \(-\hat{y_{i}}\), that is, the scale of the gradient of MSE will change with the size of the error, while the scale of the gradient of MAE will always remain 1 , Even when the absolute error is very small, the gradient scale of MAE is also 1, which is actually very unfavorable for model training. This is also the reason why MSE is more popular.</p> <p>MAE is more robust to outliers. We can understand this from the 2 perspectives:</p> <p>Firstly, the following figure shows the MAE and MSE losses drawn into the same picture. Since the MAE loss and the absolute error are linear, the MSE loss and the error have a quadratic relationship. When the error is very large, The MSE loss will be much larger than the MAE loss. Therefore, when there is an outlier with a very large error in the data, MSE will generate a very large loss, which will have a greater impact on the training of the model.</p> <p><img src="https://zhengliangliang.files.wordpress.com/2022/01/screenshot-2022-01-10-at-21.21.18.png" alt=""/></p> <p>Secondly, when we look at the assumption of the two loss functions. MSE assumes that the error is distributed as a Gaussian distribution, and MAE assumes that the error is distributed as a Laplace distribution. The Laplace distribution by itself is more robust to outliers. when outliers appear on the right side of the right figure, the Laplace distribution is much less affected than the Gaussian distribution. Graph is from <a href="https://doc.lagout.org/science/Artificial%20Intelligence/Machine%20learning/Machine%20Learning_%20A%20Probabilistic%20Perspective%20%5BMurphy%202012-08-24%5D.pdf">Machine Learning A Probabilistic Perspective</a></p> <p><img src="https://zhengliangliang.files.wordpress.com/2022/01/screenshot-2022-01-10-at-21.30.28.png" alt=""/></p> <p><strong>Code</strong></p> <p>Graph could be found in my <a href="https://github.com/ZhengLiangliang1996/Loss-Function/blob/main/Cost%20Function.ipynb">github</a></p> <p><strong>Reference</strong></p> <ul> <li><a href="https://doc.lagout.org/science/Artificial%20Intelligence/Machine%20learning/Machine%20Learning_%20A%20Probabilistic%20Perspective%20%5BMurphy%202012-08-24%5D.pdf">Machine Learning A Probabilistic Perspective</a></li> </ul>]]></content><author><name></name></author><category term="dl-ml-python"/><summary type="html"><![CDATA[Loss Function and Cost Function]]></summary></entry><entry><title type="html">CV: Modifying</title><link href="https://zhengstar94.github.io//blog/2022/cv-modifying/" rel="alternate" type="text/html" title="CV: Modifying"/><published>2022-01-07T00:00:00+00:00</published><updated>2022-01-07T00:00:00+00:00</updated><id>https://zhengstar94.github.io//blog/2022/cv-modifying</id><content type="html" xml:base="https://zhengstar94.github.io//blog/2022/cv-modifying/"><![CDATA[<p><a href="https://zhengliangliang.files.wordpress.com/2022/01/curriculum_vitae.pdf">curriculum_vitae</a><a href="https://zhengliangliang.files.wordpress.com/2022/01/curriculum_vitae.pdf">Download</a></p>]]></content><author><name></name></author><category term="未分类"/><summary type="html"><![CDATA[curriculum_vitaeDownload]]></summary></entry><entry><title type="html">ElasticSearch部署</title><link href="https://zhengstar94.github.io//blog/2021/ElasticSearch%E9%83%A8%E7%BD%B2/" rel="alternate" type="text/html" title="ElasticSearch部署"/><published>2021-11-03T00:00:00+00:00</published><updated>2021-11-03T00:00:00+00:00</updated><id>https://zhengstar94.github.io//blog/2021/ElasticSearch%E9%83%A8%E7%BD%B2</id><content type="html" xml:base="https://zhengstar94.github.io//blog/2021/ElasticSearch%E9%83%A8%E7%BD%B2/"><![CDATA[<h1 id="1-windows集群">1. Windows集群</h1> <h2 id="部署集群">部署集群</h2> <p>1.创建elasticsearch-cluster文件夹，在内部复制三个elasticsearch服务</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-9eaba4fba80649b9bd94065cb732cdfb-480.webp 480w,/assets/img/2021/11/image-9eaba4fba80649b9bd94065cb732cdfb-800.webp 800w,/assets/img/2021/11/image-9eaba4fba80649b9bd94065cb732cdfb-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-9eaba4fba80649b9bd94065cb732cdfb.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>2.修改集群文件目录中每个节点的 <code class="language-plaintext highlighter-rouge">config/elasticsearch.yml</code> 配置文件</p> <ul> <li><code class="language-plaintext highlighter-rouge">node-1001</code>节点</li> </ul> <div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#节点 1 的配置信息：</span>
<span class="c1">#集群名称，节点之间要保持一致</span>
<span class="na">cluster.name</span><span class="pi">:</span> <span class="s">my-elasticsearch</span>
<span class="c1">#节点名称，集群内要唯一</span>
<span class="na">node.name</span><span class="pi">:</span> <span class="s">node-1001</span>
<span class="na">node.master</span><span class="pi">:</span> <span class="kc">true</span>
<span class="na">node.data</span><span class="pi">:</span> <span class="kc">true</span>
<span class="c1">#ip 地址</span>
<span class="na">network.host</span><span class="pi">:</span> <span class="s">localhost</span>
<span class="c1">#http 端口</span>
<span class="na">http.port</span><span class="pi">:</span> <span class="m">1001</span>
<span class="c1">#tcp 监听端口</span>
<span class="na">transport.tcp.port</span><span class="pi">:</span> <span class="m">9301</span>
<span class="c1">#discovery.seed_hosts: ["localhost:9301", "localhost:9302","localhost:9303"]</span>
<span class="c1">#discovery.zen.fd.ping_timeout: 1m</span>
<span class="c1">#discovery.zen.fd.ping_retries: 5</span>
<span class="c1">#集群内的可以被选为主节点的节点列表</span>
<span class="c1">#cluster.initial_master_nodes: ["node-1", "node-2","node-3"]</span>
<span class="c1">#跨域配置</span>
<span class="c1">#action.destructive_requires_name: true</span>
<span class="na">http.cors.enabled</span><span class="pi">:</span> <span class="kc">true</span>
<span class="na">http.cors.allow-origin</span><span class="pi">:</span> <span class="s2">"</span><span class="s">*"</span>
</code></pre></div></div> <ul> <li><code class="language-plaintext highlighter-rouge">node-1002</code>节点</li> </ul> <div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#节点 2 的配置信息：</span>
<span class="c1">#集群名称，节点之间要保持一致</span>
<span class="na">cluster.name</span><span class="pi">:</span> <span class="s">my-elasticsearch</span>
<span class="c1">#节点名称，集群内要唯一</span>
<span class="na">node.name</span><span class="pi">:</span> <span class="s">node-1002</span>
<span class="na">node.master</span><span class="pi">:</span> <span class="kc">true</span>
<span class="na">node.data</span><span class="pi">:</span> <span class="kc">true</span>
<span class="c1">#ip 地址</span>
<span class="na">network.host</span><span class="pi">:</span> <span class="s">localhost</span>
<span class="c1">#http 端口</span>
<span class="na">http.port</span><span class="pi">:</span> <span class="m">1002</span>
<span class="c1">#tcp 监听端口</span>
<span class="na">transport.tcp.port</span><span class="pi">:</span> <span class="m">9302</span>
<span class="na">discovery.seed_hosts</span><span class="pi">:</span> <span class="pi">[</span><span class="s2">"</span><span class="s">localhost:9301"</span><span class="pi">]</span>
<span class="na">discovery.zen.fd.ping_timeout</span><span class="pi">:</span> <span class="s">1m</span>
<span class="na">discovery.zen.fd.ping_retries</span><span class="pi">:</span> <span class="m">5</span>
<span class="c1">#集群内的可以被选为主节点的节点列表</span>
<span class="c1">#cluster.initial_master_nodes: ["node-1", "node-2","node-3"]</span>
<span class="c1">#跨域配置</span>
<span class="c1">#action.destructive_requires_name: true</span>
<span class="na">http.cors.enabled</span><span class="pi">:</span> <span class="kc">true</span>
<span class="na">http.cors.allow-origin</span><span class="pi">:</span> <span class="s2">"</span><span class="s">*"</span>
</code></pre></div></div> <ul> <li><code class="language-plaintext highlighter-rouge">node-1003</code>节点</li> </ul> <div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#节点 3 的配置信息：</span>
<span class="c1">#集群名称，节点之间要保持一致</span>
<span class="na">cluster.name</span><span class="pi">:</span> <span class="s">my-elasticsearch</span>
<span class="c1">#节点名称，集群内要唯一</span>
<span class="na">node.name</span><span class="pi">:</span> <span class="s">node-1003</span>
<span class="na">node.master</span><span class="pi">:</span> <span class="kc">true</span>
<span class="na">node.data</span><span class="pi">:</span> <span class="kc">true</span>
<span class="c1">#ip 地址</span>
<span class="na">network.host</span><span class="pi">:</span> <span class="s">localhost</span>
<span class="c1">#http 端口</span>
<span class="na">http.port</span><span class="pi">:</span> <span class="m">1003</span>
<span class="c1">#tcp 监听端口</span>
<span class="na">transport.tcp.port</span><span class="pi">:</span> <span class="m">9303</span>
<span class="c1">#候选主节点的地址，在开启服务后可以被选为主节点</span>
<span class="na">discovery.seed_hosts</span><span class="pi">:</span> <span class="pi">[</span><span class="s2">"</span><span class="s">localhost:9301"</span><span class="pi">,</span> <span class="s2">"</span><span class="s">localhost:9302"</span><span class="pi">]</span>
<span class="na">discovery.zen.fd.ping_timeout</span><span class="pi">:</span> <span class="s">1m</span>
<span class="na">discovery.zen.fd.ping_retries</span><span class="pi">:</span> <span class="m">5</span>
<span class="c1">#集群内的可以被选为主节点的节点列表</span>
<span class="c1">#cluster.initial_master_nodes: ["node-1", "node-2","node-3"]</span>
<span class="c1">#跨域配置</span>
<span class="c1">#action.destructive_requires_name: true</span>
<span class="na">http.cors.enabled</span><span class="pi">:</span> <span class="kc">true</span>
<span class="na">http.cors.allow-origin</span><span class="pi">:</span> <span class="s2">"</span><span class="s">*"</span>
</code></pre></div></div> <h2 id="启动集群">启动集群</h2> <p>1.启动前先删除每个节点中的 data 目录中所有内容（如果存在）</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-0739aa0e074548cda220affc6e3e44d4-480.webp 480w,/assets/img/2021/11/image-0739aa0e074548cda220affc6e3e44d4-800.webp 800w,/assets/img/2021/11/image-0739aa0e074548cda220affc6e3e44d4-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-0739aa0e074548cda220affc6e3e44d4.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>2.分别双击执行 bin/elasticsearch.bat, 启动节点服务器，启动后，会自动加入指定名称的集群</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-983536d47da24321a04e6c21b631da71-480.webp 480w,/assets/img/2021/11/image-983536d47da24321a04e6c21b631da71-800.webp 800w,/assets/img/2021/11/image-983536d47da24321a04e6c21b631da71-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-983536d47da24321a04e6c21b631da71.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h2 id="测试集群">测试集群</h2> <p>1.使用 Postman 测试，查看集群状态</p> <ul> <li>node-1001 节点：http://127.0.0.1:1001/_cluster/health</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-bc61e9384f8944fd94cc5e2ed9e8ca99-480.webp 480w,/assets/img/2021/11/image-bc61e9384f8944fd94cc5e2ed9e8ca99-800.webp 800w,/assets/img/2021/11/image-bc61e9384f8944fd94cc5e2ed9e8ca99-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-bc61e9384f8944fd94cc5e2ed9e8ca99.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>node-1002 节点: http://127.0.0.1:1002/_cluster/health</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-e16896b7a459475eb71178dfd5d213dc-480.webp 480w,/assets/img/2021/11/image-e16896b7a459475eb71178dfd5d213dc-800.webp 800w,/assets/img/2021/11/image-e16896b7a459475eb71178dfd5d213dc-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-e16896b7a459475eb71178dfd5d213dc.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>node-1003 节点: http://127.0.0.1:1003/_cluster/health</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-bf2f6b58abe143a28ee05f2e243f56b6-480.webp 480w,/assets/img/2021/11/image-bf2f6b58abe143a28ee05f2e243f56b6-800.webp 800w,/assets/img/2021/11/image-bf2f6b58abe143a28ee05f2e243f56b6-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-bf2f6b58abe143a28ee05f2e243f56b6.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>其中： <blockquote> <ul> <li>status ：字段指示看当前集群在总体上是否工作正常。它的三种颜色含义如下:</li> <li>green ：所有的主分片和副本分片都正常运行。</li> <li>yellow ： 所有的主分片都正常运行，但不是所有的副本分片都正常运行。</li> <li>red ： 有主分片没能正常运行。</li> </ul> </blockquote> </li> </ul> <p>2.向集群中的 node-1001 节点增加索引</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-52133bbab10b4357ae8051305527f5c0-480.webp 480w,/assets/img/2021/11/image-52133bbab10b4357ae8051305527f5c0-800.webp 800w,/assets/img/2021/11/image-52133bbab10b4357ae8051305527f5c0-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-52133bbab10b4357ae8051305527f5c0.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>3.向集群中的 node-1002 节点查询索引</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-7658f57a801c4f1a99927e8c0097c95f-480.webp 480w,/assets/img/2021/11/image-7658f57a801c4f1a99927e8c0097c95f-800.webp 800w,/assets/img/2021/11/image-7658f57a801c4f1a99927e8c0097c95f-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-7658f57a801c4f1a99927e8c0097c95f.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h1 id="2-linux-单机">2. Linux 单机</h1> <h2 id="软件下载">软件下载</h2> <ul> <li><a href="https://www.elastic.co/cn/downloads/past-releases/elasticsearch-7-8-0">软件下载地址</a></li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-a2bf3649e7434536971b11d5d09929f1-480.webp 480w,/assets/img/2021/11/image-a2bf3649e7434536971b11d5d09929f1-800.webp 800w,/assets/img/2021/11/image-a2bf3649e7434536971b11d5d09929f1-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-a2bf3649e7434536971b11d5d09929f1.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h2 id="软件安装">软件安装</h2> <p>1.解压软件，将下载的软件解压缩</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 解压缩</span>
<span class="nb">tar</span> <span class="nt">-zxvf</span> elasticsearch-7.8.0-linux-x86_64.tar.gz <span class="nt">-C</span> /opt/module
<span class="c"># 改名</span>
<span class="nb">mv </span>elasticsearch-7.8.0 es
</code></pre></div></div> <p>2.创建用户 因为安全问题，Elasticsearch 不允许 root 用户直接运行，所以要创建新用户 在 root 用户中创建新用户</p> <pre><code class="language-linxu">useradd es #新增 es 用户
passwd es #为 es 用户设置密码
userdel -r es #如果错了，可以删除再加
chown -R es:es /opt/module/es #文件夹所有者
</code></pre> <p>3.修改配置文件</p> <ul> <li>修改 <code class="language-plaintext highlighter-rouge">/opt/module/es/config/elasticsearch.yml</code> 文件</li> </ul> <pre><code class="language-linxu"># 加入如下配置
cluster.name: elasticsearch
node.name: node-1
network.host: 0.0.0.0
http.port: 9200
cluster.initial_master_nodes: ["node-1"]
</code></pre> <ul> <li>修改 <code class="language-plaintext highlighter-rouge">/etc/security/limits.conf</code></li> </ul> <pre><code class="language-linxu"># 在文件末尾中增加下面内容
# 每个进程可以打开的文件数的限制
es soft nofile 65536
es hard nofile 65536
</code></pre> <ul> <li>修改 <code class="language-plaintext highlighter-rouge">/etc/security/limits.d/20-nproc.conf</code></li> </ul> <pre><code class="language-linxu"># 在文件末尾中增加下面内容
# 每个进程可以打开的文件数的限制
es soft nofile 65536
es hard nofile 65536
# 操作系统级别对每个用户创建的进程数的限制
* hard nproc 4096
# 注：* 带表 Linux 所有用户名称
</code></pre> <ul> <li>修改 <code class="language-plaintext highlighter-rouge">/etc/sysctl.conf</code></li> </ul> <pre><code class="language-linxu"># 在文件中增加下面内容
# 一个进程可以拥有的 VMA(虚拟内存区域)的数量,默认值为 65536
vm.max_map_count=655360
</code></pre> <ul> <li>重新加载</li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sysctl <span class="nt">-p</span>
</code></pre></div></div> <p>4.启动软件，使用ES用户启动</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd</span> /opt/module/es/
<span class="c">#启动</span>
bin/elasticsearch
<span class="c">#后台启动</span>
bin/elasticsearch <span class="nt">-d</span>
</code></pre></div></div> <ul> <li>启动后，会动态生成文件，如果文件所属用户不匹配，会发生错误，需要重新进行修改用户和用户组</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-58c0e97e39fe4c8198a8bdab03e659df-480.webp 480w,/assets/img/2021/11/image-58c0e97e39fe4c8198a8bdab03e659df-800.webp 800w,/assets/img/2021/11/image-58c0e97e39fe4c8198a8bdab03e659df-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-58c0e97e39fe4c8198a8bdab03e659df.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>关闭防火墙</li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#暂时关闭防火墙</span>
systemctl stop firewalld
<span class="c">#永久关闭防火墙</span>
systemctl <span class="nb">enable </span>firewalld.service <span class="c">#打开放货抢永久性生效，重启后不会复原</span>
systemctl disable firewalld.service <span class="c">#关闭防火墙，永久性生效，重启后不会复原</span>
</code></pre></div></div> <h2 id="测试软件">测试软件</h2> <ul> <li>浏览器中输入地址：http://linux1:9200/</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-e6f758310595468e974792308293fda9-480.webp 480w,/assets/img/2021/11/image-e6f758310595468e974792308293fda9-800.webp 800w,/assets/img/2021/11/image-e6f758310595468e974792308293fda9-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-e6f758310595468e974792308293fda9.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h1 id="3-linux集群">3. Linux集群</h1> <h2 id="软件下载-1">软件下载</h2> <ul> <li><a href="https://www.elastic.co/cn/downloads/past-releases/elasticsearch-7-8-0">软件下载地址</a></li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-764cc3f0088c45d68a57252eec6fdb12-480.webp 480w,/assets/img/2021/11/image-764cc3f0088c45d68a57252eec6fdb12-800.webp 800w,/assets/img/2021/11/image-764cc3f0088c45d68a57252eec6fdb12-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-764cc3f0088c45d68a57252eec6fdb12.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h2 id="软件安装-1">软件安装</h2> <p>1.解压软件，将下载的软件解压缩</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 解压缩</span>
<span class="nb">tar</span> <span class="nt">-zxvf</span> elasticsearch-7.8.0-linux-x86_64.tar.gz <span class="nt">-C</span> /opt/module
<span class="c"># 改名</span>
<span class="nb">mv </span>elasticsearch-7.8.0 es-cluster
</code></pre></div></div> <p>将软件分发到其他节点：linux2, linux3</p> <p>2.创建用户</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>useradd es <span class="c">#新增 es 用户</span>
passwd es <span class="c">#为 es 用户设置密码</span>
userdel <span class="nt">-r</span> es <span class="c">#如果错了，可以删除再加</span>
<span class="nb">chown</span> <span class="nt">-R</span> es:es /opt/module/es-cluster <span class="c">#文件夹所有者</span>
</code></pre></div></div> <p>3.修改配置文件，修改<code class="language-plaintext highlighter-rouge">/opt/module/es/config/elasticsearch.yml</code> 文件，分发文件</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 加入如下配置</span>
<span class="c">#集群名称</span>
cluster.name: cluster-es
<span class="c">#节点名称，每个节点的名称不能重复</span>
node.name: node-1
<span class="c">#ip 地址，每个节点的地址不能重复</span>
network.host: linux1
<span class="c">#是不是有资格主节点</span>
node.master: <span class="nb">true
</span>node.data: <span class="nb">true
</span>http.port: 9200
<span class="c"># head 插件需要这打开这两个配置</span>
http.cors.allow-origin: <span class="s2">"*"</span>
http.cors.enabled: <span class="nb">true
</span>http.max_content_length: 200mb
<span class="c">#es7.x 之后新增的配置，初始化一个新的集群时需要此配置来选举 master</span>
cluster.initial_master_nodes: <span class="o">[</span><span class="s2">"node-1"</span><span class="o">]</span>
<span class="c">#es7.x 之后新增的配置，节点发现</span>
discovery.seed_hosts: <span class="o">[</span><span class="s2">"linux1:9300"</span>,<span class="s2">"linux2:9300"</span>,<span class="s2">"linux3:9300"</span><span class="o">]</span>
gateway.recover_after_nodes: 2
network.tcp.keep_alive: <span class="nb">true
</span>network.tcp.no_delay: <span class="nb">true
</span>transport.tcp.compress: <span class="nb">true</span>
<span class="c">#集群内同时启动的数据任务个数，默认是 2 个</span>
cluster.routing.allocation.cluster_concurrent_rebalance: 16
<span class="c">#添加或删除节点及负载均衡时并发恢复的线程个数，默认 4 个</span>
cluster.routing.allocation.node_concurrent_recoveries: 16
<span class="c">#初始化数据恢复时，并发恢复线程的个数，默认 4 个</span>
cluster.routing.allocation.node_initial_primaries_recoveries: 16
</code></pre></div></div> <ul> <li>修改 <code class="language-plaintext highlighter-rouge">/etc/security/limits.conf</code> ，分发文件</li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 在文件末尾中增加下面内容</span>
es soft nofile 65536
es hard nofile 65536
</code></pre></div></div> <ul> <li>修改 <code class="language-plaintext highlighter-rouge">/etc/security/limits.d/20-nproc.conf</code>，分发文件、</li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 在文件末尾中增加下面内容</span>
es soft nofile 65536
es hard nofile 65536
<span class="k">*</span> hard <span class="nb">nproc </span>4096
<span class="c"># 注：* 带表 Linux 所有用户名称</span>
</code></pre></div></div> <ul> <li>修改 <code class="language-plaintext highlighter-rouge">/etc/sysctl.conf</code></li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 在文件中增加下面内容</span>
vm.max_map_count<span class="o">=</span>655360
</code></pre></div></div> <ul> <li>重新加载</li> </ul> <pre><code class="language-linxu">sysctl -p
</code></pre> <p>4.启动软件，分别在不同的节点上启动ES软件</p> <pre><code class="language-linxu">cd /opt/module/es-cluster
#启动
bin/elasticsearch
#后台启动
bin/elasticsearch -d
</code></pre> <p>5.测试集群</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-93f53bea47884010bea2db9d76828b19-480.webp 480w,/assets/img/2021/11/image-93f53bea47884010bea2db9d76828b19-800.webp 800w,/assets/img/2021/11/image-93f53bea47884010bea2db9d76828b19-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-93f53bea47884010bea2db9d76828b19.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure>]]></content><author><name></name></author><category term="Backend ElasticSearch"/><summary type="html"><![CDATA[1. Windows集群]]></summary></entry><entry><title type="html">ElasticSearch基础</title><link href="https://zhengstar94.github.io//blog/2021/ElasticSearch%E5%9F%BA%E7%A1%80/" rel="alternate" type="text/html" title="ElasticSearch基础"/><published>2021-11-01T00:00:00+00:00</published><updated>2021-11-01T00:00:00+00:00</updated><id>https://zhengstar94.github.io//blog/2021/ElasticSearch%E5%9F%BA%E7%A1%80</id><content type="html" xml:base="https://zhengstar94.github.io//blog/2021/ElasticSearch%E5%9F%BA%E7%A1%80/"><![CDATA[<h1 id="简介">简介</h1> <p>ElasticSearch，简称ES，是一个开源的高扩展的分布式全文搜索引擎。它可以近乎实时的存储、检索数据；本身扩展性很好，可以扩展到上百台服务器，处理PB级别的数据。</p> <h1 id="优缺点">优缺点</h1> <ul> <li>优点 <ol> <li>Elasticsearch是分布式的。不需要其他组件，分发是实时的，被叫做”Push replication”。</li> <li>Elasticsearch 完全支持 Apache Lucene 的接近实时的搜索。</li> <li>处理多租户不需要特殊配置，而Solr则需要更多的高级设置。</li> <li>Elasticsearch 采用 Gateway 的概念，使得完备份更加简单。</li> <li>各节点组成对等的网络结构，某些节点出现故障时会自动分配其他节点代替其进行工作。</li> </ol> </li> <li>缺点 <ol> <li>提交者来自单个公司。</li> <li>还不够自动（不适合当前新的Index Warmup API）</li> </ol> </li> </ul> <h1 id="安装">安装</h1> <h2 id="1-下载软件">1. 下载软件</h2> <ul> <li><a href="https://www.elastic.co/cn/">Elasticsearch 的官方地址</a></li> <li><a href="https://www.elastic.co/cn/downloads/past-releases#elasticsearch">下载地址</a></li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-ee67614e87c4461391e6beb9a0f61139-480.webp 480w,/assets/img/2021/11/image-ee67614e87c4461391e6beb9a0f61139-800.webp 800w,/assets/img/2021/11/image-ee67614e87c4461391e6beb9a0f61139-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-ee67614e87c4461391e6beb9a0f61139.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>Elasticsearch 分为 Linux 和 Windows 版本，这里先下载 Windows 版本的进行学习，后面会有用到 Linux 版的。</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-2702065f656f4997a23c5914e75568d3-480.webp 480w,/assets/img/2021/11/image-2702065f656f4997a23c5914e75568d3-800.webp 800w,/assets/img/2021/11/image-2702065f656f4997a23c5914e75568d3-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-2702065f656f4997a23c5914e75568d3.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h2 id="2-安装软件">2. 安装软件</h2> <ul> <li>Windows 版的 Elasticsearch 的安装很简单，解压即安装完毕，解压后的 Elasticsearch 的目录结构如下</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-686274f895cf448c825011cf5cb7c18d-480.webp 480w,/assets/img/2021/11/image-686274f895cf448c825011cf5cb7c18d-800.webp 800w,/assets/img/2021/11/image-686274f895cf448c825011cf5cb7c18d-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-686274f895cf448c825011cf5cb7c18d.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>解压后，进入 bin 文件目录，点击 elasticsearch.bat 文件启动 ES 服务</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-4fe8c35995de4e3db60184bbf5b7e4cd-480.webp 480w,/assets/img/2021/11/image-4fe8c35995de4e3db60184bbf5b7e4cd-800.webp 800w,/assets/img/2021/11/image-4fe8c35995de4e3db60184bbf5b7e4cd-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-4fe8c35995de4e3db60184bbf5b7e4cd.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p><strong>注意：9300端口为ElasticSearch集群间组件的通信端口，9200端口为浏览器访问的http协议Restful端口</strong></p> <ul> <li>启动后在浏览器中输入地址：http://localhost:9200</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-cddb12a3151a4e21b16d85ed313c4960-480.webp 480w,/assets/img/2021/11/image-cddb12a3151a4e21b16d85ed313c4960-800.webp 800w,/assets/img/2021/11/image-cddb12a3151a4e21b16d85ed313c4960-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-cddb12a3151a4e21b16d85ed313c4960.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h2 id="3-问题解决">3. 问题解决</h2> <ol> <li>ElasticSearch是使用java开发的，且 7.8 版本的 ES 需要 JDK 版本 1.8 以上，默认安装包带有 jdk 环境，如果系统配置 JAVA_HOME，那么使用系统默认的 JDK，如果没有配置使用自带的 JDK，一般建议使用系统配置的 JDK。</li> <li>双击启动窗口闪退，通过路径访问追踪错误，如果是“空间不足”，请修改config/jvm.options 配置文件</li> </ol> <pre><code class="language-option"># 设置 JVM 初始内存为 1G。此值可以设置与-Xmx 相同，以避免每次垃圾回收完成后 JVM 重新分配内存
# Xms represents the initial size of total heap space
# 设置 JVM 最大可用内存为 1G
# Xmx represents the maximum size of total heap space
-Xms1g
-Xmx1g
</code></pre> <h2 id="4-postman安装">4. PostMan安装</h2> <ul> <li>在对 Elasticsearch 进行测试的过程中会使用到很多 HTTP 请求，而 HTTP 的大部分特性且仅支持 GET 和 POST 方法。所以为了能方便地进行客户端的访问，可以使用 Postman 软件。</li> <li>Postman 是一款强大的网页调试工具，提供功能强大的 Web API 和 HTTP 请求调试。软件功能强大，界面简洁明晰、操作方便快捷，设计得很人性化。Postman 中文版能够发送任何类型的 HTTP 请求 (GET, HEAD, POST, PUT…)，不仅能够表单提交，且可以附带任意类型请求体。</li> <li><a href="https://www.getpostman.com">Postman 安装</a></li> <li><a href="https://www.getpostman.com/apps">Postman 下载</a></li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-3da18181158048feaed7d12ce3051938-480.webp 480w,/assets/img/2021/11/image-3da18181158048feaed7d12ce3051938-800.webp 800w,/assets/img/2021/11/image-3da18181158048feaed7d12ce3051938-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-3da18181158048feaed7d12ce3051938.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h1 id="数据格式">数据格式</h1> <ul> <li>Elasticsearch 是面向文档型数据库，一条数据在这里就是一个文档。为了方便大家理解，我们将 Elasticsearch 里存储文档数据和关系型数据库 MySQL 存储数据的概念进行一个类比。</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-57a86a68da1f42f2a78383948b1f164c-480.webp 480w,/assets/img/2021/11/image-57a86a68da1f42f2a78383948b1f164c-800.webp 800w,/assets/img/2021/11/image-57a86a68da1f42f2a78383948b1f164c-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-57a86a68da1f42f2a78383948b1f164c.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>ES 里的 Index 可以看做一个库，而 Types 相当于表，Documents 则相当于表的行。</li> <li>这里 Types 的概念已经被逐渐弱化，Elasticsearch 6.X 中，一个 index 下已经只能包含一个 type，Elasticsearch 7.X 中, Type 的概念已经被删除了。</li> </ul> <h1 id="http操作">HTTP操作</h1> <h2 id="索引操作index">索引操作(Index)</h2> <h3 id="创建索引">创建索引</h3> <ul> <li>对比关系型数据库，创建索引就等同于创建数据库在 Postman 中，向 ES 服务器发 PUT 请求 ：http://127.0.0.1:9200/shopping</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-01a484bed60e4ecfb1337d62dd98a0a6-480.webp 480w,/assets/img/2021/11/image-01a484bed60e4ecfb1337d62dd98a0a6-800.webp 800w,/assets/img/2021/11/image-01a484bed60e4ecfb1337d62dd98a0a6-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-01a484bed60e4ecfb1337d62dd98a0a6.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>请求后，服务器返回响应</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-e164c86ab29c455592376061dc3f157b-480.webp 480w,/assets/img/2021/11/image-e164c86ab29c455592376061dc3f157b-800.webp 800w,/assets/img/2021/11/image-e164c86ab29c455592376061dc3f157b-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-e164c86ab29c455592376061dc3f157b.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>其中 <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
 </span><span class="s2">"acknowledged"</span><span class="err">【响应结果】:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w"> </span><span class="err">#</span><span class="w"> </span><span class="kc">true</span><span class="w"> </span><span class="err">操作成功</span><span class="w">
 </span><span class="s2">"shards_acknowledged"</span><span class="err">【分片结果】:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w"> </span><span class="err">#</span><span class="w"> </span><span class="err">分片操作成功</span><span class="w">
 </span><span class="s2">"index"</span><span class="err">【索引名称】:</span><span class="w"> </span><span class="s2">"shopping"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div> </div> <blockquote> <p>注意：<br/></p> <ol> <li>创建索引库的分片数默认1片，在7.0以前，默认5片<br/></li> <li>如果重复添加索引，会返回错误信息</li> </ol> </blockquote> </li> <li>再发送一个相同请求进行测试</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-d957963d134c4feba673a02521d24fc1-480.webp 480w,/assets/img/2021/11/image-d957963d134c4feba673a02521d24fc1-800.webp 800w,/assets/img/2021/11/image-d957963d134c4feba673a02521d24fc1-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-d957963d134c4feba673a02521d24fc1.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="查看所有的索引">查看所有的索引</h3> <ul> <li>在 Postman 中，向 ES 服务器发 <code class="language-plaintext highlighter-rouge">GET</code> 请求 ：http://127.0.0.1:9200/_cat/indices?v</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-20b984266e6a44118899caabec2911e2-480.webp 480w,/assets/img/2021/11/image-20b984266e6a44118899caabec2911e2-800.webp 800w,/assets/img/2021/11/image-20b984266e6a44118899caabec2911e2-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-20b984266e6a44118899caabec2911e2.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <blockquote> <ul> <li>这里请求路径中的_cat 表示查看的意思<br/></li> <li>indices 表示索引<br/></li> <li>所以整体含义就是查看当前 ES 服务器中的所有索引，就好像 MySQL 中的 show tables 的感觉，</li> </ul> </blockquote> <ul> <li>服务器响应结果如下</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-f61209901c7849c99dbdb19ddf5d43d4-480.webp 480w,/assets/img/2021/11/image-f61209901c7849c99dbdb19ddf5d43d4-800.webp 800w,/assets/img/2021/11/image-f61209901c7849c99dbdb19ddf5d43d4-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-f61209901c7849c99dbdb19ddf5d43d4.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-216e5311f6aa4e88a41554c56d6ef632-480.webp 480w,/assets/img/2021/11/image-216e5311f6aa4e88a41554c56d6ef632-800.webp 800w,/assets/img/2021/11/image-216e5311f6aa4e88a41554c56d6ef632-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-216e5311f6aa4e88a41554c56d6ef632.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="查看单个索引">查看单个索引</h3> <ul> <li>在 Postman 中，向 ES 服务器发 <code class="language-plaintext highlighter-rouge">GET</code> 请求 ：http://127.0.0.1:9200/shopping</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-fae9e63c9b954464b3e426a6afe608f8-480.webp 480w,/assets/img/2021/11/image-fae9e63c9b954464b3e426a6afe608f8-800.webp 800w,/assets/img/2021/11/image-fae9e63c9b954464b3e426a6afe608f8-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-fae9e63c9b954464b3e426a6afe608f8.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p><strong>查看索引向 ES 服务器发送的请求路径和创建索引是一致的。但是 HTTP 方法不一致。</strong></p> <ul> <li>请求后，服务器响应结果如下</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-dd8ee136506a4c8f82b3d16d2ac9c2ac-480.webp 480w,/assets/img/2021/11/image-dd8ee136506a4c8f82b3d16d2ac9c2ac-800.webp 800w,/assets/img/2021/11/image-dd8ee136506a4c8f82b3d16d2ac9c2ac-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-dd8ee136506a4c8f82b3d16d2ac9c2ac.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="删除索引">删除索引</h3> <ul> <li>在 Postman 中，向 ES 服务器发 <code class="language-plaintext highlighter-rouge">DELETE</code> 请求 ：http://127.0.0.1:9200/shopping</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-88e73f3cd597487f85b4af8a769c050e-480.webp 480w,/assets/img/2021/11/image-88e73f3cd597487f85b4af8a769c050e-800.webp 800w,/assets/img/2021/11/image-88e73f3cd597487f85b4af8a769c050e-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-88e73f3cd597487f85b4af8a769c050e.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-5578f60da5584699b7a92210145b7293-480.webp 480w,/assets/img/2021/11/image-5578f60da5584699b7a92210145b7293-800.webp 800w,/assets/img/2021/11/image-5578f60da5584699b7a92210145b7293-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-5578f60da5584699b7a92210145b7293.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>重新访问索引时，服务器返回响应：索引不存在</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-36fe1c1eada048b882511eb65471c179-480.webp 480w,/assets/img/2021/11/image-36fe1c1eada048b882511eb65471c179-800.webp 800w,/assets/img/2021/11/image-36fe1c1eada048b882511eb65471c179-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-36fe1c1eada048b882511eb65471c179.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h2 id="文档操作">文档操作</h2> <h3 id="创建文档">创建文档</h3> <ul> <li> <p>索引已经创建好了，接下来我们来创建文档，并添加数据。这里的文档可以类比为关系型数据库中的表数据，添加的数据格式为 JSON 格式</p> </li> <li> <p>在 Postman 中，向 ES 服务器发 <code class="language-plaintext highlighter-rouge">POST</code> 请求 ：http://127.0.0.1:9200/shopping/phone</p> </li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-564b9ee73711492a9a1aa1583a4f7678-480.webp 480w,/assets/img/2021/11/image-564b9ee73711492a9a1aa1583a4f7678-800.webp 800w,/assets/img/2021/11/image-564b9ee73711492a9a1aa1583a4f7678-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-564b9ee73711492a9a1aa1583a4f7678.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>此处发送请求的方式必须为 POST，不能是 PUT，否则会发生错误，错误的返回结果为：</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-351ebde1e01c402788db6f743340e80d-480.webp 480w,/assets/img/2021/11/image-351ebde1e01c402788db6f743340e80d-800.webp 800w,/assets/img/2021/11/image-351ebde1e01c402788db6f743340e80d-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-351ebde1e01c402788db6f743340e80d.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>正确响应结果如下</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-28c4c4375f4941bfb8174a142675a2cd-480.webp 480w,/assets/img/2021/11/image-28c4c4375f4941bfb8174a142675a2cd-800.webp 800w,/assets/img/2021/11/image-28c4c4375f4941bfb8174a142675a2cd-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-28c4c4375f4941bfb8174a142675a2cd.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li> <p>上面的数据创建后，由于没有指定数据唯一性标识（ID），默认情况下，ES 服务器会随机生成一个。</p> </li> <li> <p>如果想要自定义唯一性标识，需要在创建时指定：http://127.0.0.1:9200/shopping/phone/1</p> </li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-39cf173a93a64755a46975e81f28be9f-480.webp 480w,/assets/img/2021/11/image-39cf173a93a64755a46975e81f28be9f-800.webp 800w,/assets/img/2021/11/image-39cf173a93a64755a46975e81f28be9f-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-39cf173a93a64755a46975e81f28be9f.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-7b19b9388aa246e0b659250f3c0cde8d-480.webp 480w,/assets/img/2021/11/image-7b19b9388aa246e0b659250f3c0cde8d-800.webp 800w,/assets/img/2021/11/image-7b19b9388aa246e0b659250f3c0cde8d-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-7b19b9388aa246e0b659250f3c0cde8d.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>此处需要注意：如果增加数据时明确数据主键，那么请求方式可以为PUT</li> </ul> <h3 id="查看文档">查看文档</h3> <ul> <li>查看文档时，需要指明文档的唯一性标识，类似于 MySQL 中数据的主键查询</li> <li>在 Postman 中，向 ES 服务器发 <code class="language-plaintext highlighter-rouge">GET</code> 请求 ：http://127.0.0.1:9200/shopping/phone/1</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-63fa7f6e3e754242b4b01b7143ec1e3e-480.webp 480w,/assets/img/2021/11/image-63fa7f6e3e754242b4b01b7143ec1e3e-800.webp 800w,/assets/img/2021/11/image-63fa7f6e3e754242b4b01b7143ec1e3e-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-63fa7f6e3e754242b4b01b7143ec1e3e.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>查询成功后，服务器响应结果：</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-4a3ba0cad8cf40d283cea5d9e0f7af79-480.webp 480w,/assets/img/2021/11/image-4a3ba0cad8cf40d283cea5d9e0f7af79-800.webp 800w,/assets/img/2021/11/image-4a3ba0cad8cf40d283cea5d9e0f7af79-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-4a3ba0cad8cf40d283cea5d9e0f7af79.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="修改文档">修改文档</h3> <ul> <li> <p>和新增文档一样，输入相同的 URL 地址请求，如果请求体变化，会将原有的数据内容覆盖</p> </li> <li> <p>在 Postman 中，向 ES 服务器发 <code class="language-plaintext highlighter-rouge">POST</code> 请求 ：http://127.0.0.1:9200/shopping/phone/1</p> </li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-e28a4aa7528b43b98a399f6d4d22d41e-480.webp 480w,/assets/img/2021/11/image-e28a4aa7528b43b98a399f6d4d22d41e-800.webp 800w,/assets/img/2021/11/image-e28a4aa7528b43b98a399f6d4d22d41e-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-e28a4aa7528b43b98a399f6d4d22d41e.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
 </span><span class="nl">"title"</span><span class="p">:</span><span class="s2">"华为手机"</span><span class="p">,</span><span class="w">
 </span><span class="nl">"category"</span><span class="p">:</span><span class="s2">"华为"</span><span class="p">,</span><span class="w">
 </span><span class="nl">"images"</span><span class="p">:</span><span class="s2">"http://www.gulixueyuan.com/hw.jpg"</span><span class="p">,</span><span class="w">
 </span><span class="nl">"price"</span><span class="p">:</span><span class="mf">4999.00</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div> <ul> <li>修改成功后，服务器响应结果：</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-8e2a888b3ce54ff688aa424204a3107f-480.webp 480w,/assets/img/2021/11/image-8e2a888b3ce54ff688aa424204a3107f-800.webp 800w,/assets/img/2021/11/image-8e2a888b3ce54ff688aa424204a3107f-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-8e2a888b3ce54ff688aa424204a3107f.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="修改字段">修改字段</h3> <ul> <li> <p>修改数据时，也可以只修改某一给条数据的局部信息</p> </li> <li> <p>在 Postman 中，向 ES 服务器发 POST 请求 ：http://127.0.0.1:9200/shopping/_update/1</p> </li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-eb954da73f45448db6d4f656fef4569a-480.webp 480w,/assets/img/2021/11/image-eb954da73f45448db6d4f656fef4569a-800.webp 800w,/assets/img/2021/11/image-eb954da73f45448db6d4f656fef4569a-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-eb954da73f45448db6d4f656fef4569a.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>修改成功后，服务器响应结果</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-0e491f6944984b7a95ff571f0a7cbe4a-480.webp 480w,/assets/img/2021/11/image-0e491f6944984b7a95ff571f0a7cbe4a-800.webp 800w,/assets/img/2021/11/image-0e491f6944984b7a95ff571f0a7cbe4a-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-0e491f6944984b7a95ff571f0a7cbe4a.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>根据唯一性标识，查询文档数据，文档数据已经更新</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-da2c826e1f3f452e90ae9658d9102e38-480.webp 480w,/assets/img/2021/11/image-da2c826e1f3f452e90ae9658d9102e38-800.webp 800w,/assets/img/2021/11/image-da2c826e1f3f452e90ae9658d9102e38-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-da2c826e1f3f452e90ae9658d9102e38.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="按照编号删除文档">按照编号删除文档</h3> <ul> <li> <p>删除一个文档不会立即从磁盘上移除，它只是被标记成已删除（逻辑删除）。</p> </li> <li> <p>在 Postman 中，向 ES 服务器发 <code class="language-plaintext highlighter-rouge">DELETE</code> 请求 ：http://127.0.0.1:9200/shopping/phone/1</p> </li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-4989378ad8e744fd8f5190f4b800e445-480.webp 480w,/assets/img/2021/11/image-4989378ad8e744fd8f5190f4b800e445-800.webp 800w,/assets/img/2021/11/image-4989378ad8e744fd8f5190f4b800e445-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-4989378ad8e744fd8f5190f4b800e445.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>删除成功，服务器响应结果：</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-f5e38712725142e891b00bb5ef775e19-480.webp 480w,/assets/img/2021/11/image-f5e38712725142e891b00bb5ef775e19-800.webp 800w,/assets/img/2021/11/image-f5e38712725142e891b00bb5ef775e19-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-f5e38712725142e891b00bb5ef775e19.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>删除后再查看当前文档信息</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-04efa21c5ced414eb1b35ff94881ce16-480.webp 480w,/assets/img/2021/11/image-04efa21c5ced414eb1b35ff94881ce16-800.webp 800w,/assets/img/2021/11/image-04efa21c5ced414eb1b35ff94881ce16-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-04efa21c5ced414eb1b35ff94881ce16.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>如果删除一个不存在的文档</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-789bce4b84ec4c108fb30595e9ff17c3-480.webp 480w,/assets/img/2021/11/image-789bce4b84ec4c108fb30595e9ff17c3-800.webp 800w,/assets/img/2021/11/image-789bce4b84ec4c108fb30595e9ff17c3-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-789bce4b84ec4c108fb30595e9ff17c3.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="条件删除文档">条件删除文档</h3> <ul> <li> <p>一般删除数据都是根据文档的唯一性标识进行删除，实际操作时，也可以根据条件对多条数据进行删除</p> </li> <li> <p>首先分别增加多条数据:</p> </li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-8827bcdc288f4ff1ac64c3e7c080c381-480.webp 480w,/assets/img/2021/11/image-8827bcdc288f4ff1ac64c3e7c080c381-800.webp 800w,/assets/img/2021/11/image-8827bcdc288f4ff1ac64c3e7c080c381-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-8827bcdc288f4ff1ac64c3e7c080c381.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>开始条件删除，向 ES 服务器发 <code class="language-plaintext highlighter-rouge">POST</code>请求 ：http://127.0.0.1:9200/shopping/_delete_by_query</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-d1030f5732844333b9403d4d96c59ef6-480.webp 480w,/assets/img/2021/11/image-d1030f5732844333b9403d4d96c59ef6-800.webp 800w,/assets/img/2021/11/image-d1030f5732844333b9403d4d96c59ef6-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-d1030f5732844333b9403d4d96c59ef6.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>删除成功后，服务器响应结果</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-547f77d276f14aa4be640e868be88cd7-480.webp 480w,/assets/img/2021/11/image-547f77d276f14aa4be640e868be88cd7-800.webp 800w,/assets/img/2021/11/image-547f77d276f14aa4be640e868be88cd7-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-547f77d276f14aa4be640e868be88cd7.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h2 id="映射操作">映射操作</h2> <ul> <li>有了索引库，等于有了数据库中的 database。</li> <li>接下来就需要建索引库(index)中的映射了，类似于数据库(database)中的表结构(table)。创建数据库表需要设置字段名称，类型，长度，约束等；索引库也一样，需要知道这个类型下有哪些字段，每个字段有哪些约束信息，这就叫做映射(mapping)</li> </ul> <h3 id="创建映射">创建映射</h3> <p>在 Postman 中，向 ES 服务器发 <code class="language-plaintext highlighter-rouge">PUT</code> 请求 ：http://127.0.0.1:9200/student/_mapping</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-1ed994aadffe4be18a6c2597e70679c9-480.webp 480w,/assets/img/2021/11/image-1ed994aadffe4be18a6c2597e70679c9-800.webp 800w,/assets/img/2021/11/image-1ed994aadffe4be18a6c2597e70679c9-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-1ed994aadffe4be18a6c2597e70679c9.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
	 </span><span class="nl">"properties"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
		 </span><span class="nl">"name"</span><span class="p">:{</span><span class="w">
			 </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"text"</span><span class="p">,</span><span class="w">
			 </span><span class="nl">"index"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
		 </span><span class="p">},</span><span class="w">
		 </span><span class="nl">"sex"</span><span class="p">:{</span><span class="w">
			 </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"text"</span><span class="p">,</span><span class="w">
			 </span><span class="nl">"index"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
		 </span><span class="p">},</span><span class="w">
		 </span><span class="nl">"age"</span><span class="p">:{</span><span class="w">
			 </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"long"</span><span class="p">,</span><span class="w">
			 </span><span class="nl">"index"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
		 </span><span class="p">}</span><span class="w">
	 </span><span class="p">}</span><span class="w"> 
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div> <ul> <li>服务器响应结果如下</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-630af19b9cca468dbb6bdc5754808881-480.webp 480w,/assets/img/2021/11/image-630af19b9cca468dbb6bdc5754808881-800.webp 800w,/assets/img/2021/11/image-630af19b9cca468dbb6bdc5754808881-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-630af19b9cca468dbb6bdc5754808881.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>映射数据说明</li> </ul> <blockquote> <p>字段名：任意填写，下面指定许多属性，例如：title、subtitle、images、price</p> <ul> <li>type：类型，Elasticsearch 中支持的数据类型非常丰富，说几个关键的： <ul> <li>String 类型，又分两种：</li> <li>text：可分词</li> <li>keyword：不可分词，数据会作为完整字段进行匹配</li> <li>Numerical：数值类型，分两类</li> <li>基本数据类型：long、integer、short、byte、double、float、half_float</li> <li>浮点数的高精度类型：scaled_float</li> <li>Date：日期类型</li> <li>Array：数组类型</li> <li>Object：对象</li> </ul> </li> <li>index：是否索引，默认为 true，也就是说你不进行任何配置，所有字段都会被索引。 <ul> <li>true：字段会被索引，则可以用来进行搜索</li> <li>false：字段不会被索引，不能用来搜索</li> </ul> </li> <li>store：是否将数据进行独立存储，默认为 false <ul> <li>原始的文本会存储在_source 里面，默认情况下其他提取出来的字段都不是独立存储的，是从_source 里面提取出来的。当然你也可以独立的存储某个字段，只要设置”store”: true 即可，获取独立存储的字段要比从_source 中解析快得多，但是也会占用更多的空间，所以要根据实际业务需求来设置。</li> </ul> </li> <li>analyzer：分词器，这里的 ik_max_word 即使用 ik 分词器,后面会有专门的章节学习</li> </ul> </blockquote> <h3 id="查看映射">查看映射</h3> <ul> <li>在 Postman 中，向 ES 服务器发 <code class="language-plaintext highlighter-rouge">GET</code> 请求 ：http://127.0.0.1:9200/shopping/_mapping</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-1e51ee10d2654a6cbebc75fd849e7b99-480.webp 480w,/assets/img/2021/11/image-1e51ee10d2654a6cbebc75fd849e7b99-800.webp 800w,/assets/img/2021/11/image-1e51ee10d2654a6cbebc75fd849e7b99-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-1e51ee10d2654a6cbebc75fd849e7b99.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>服务器响应结果如下</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-6ba19f24b10648b385318b87b0f8791c-480.webp 480w,/assets/img/2021/11/image-6ba19f24b10648b385318b87b0f8791c-800.webp 800w,/assets/img/2021/11/image-6ba19f24b10648b385318b87b0f8791c-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-6ba19f24b10648b385318b87b0f8791c.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="索引映射关联">索引映射关联</h3> <ul> <li>在 Postman 中，向 ES 服务器发 PUT 请求 ：http://127.0.0.1:9200/student1</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-f443e3d54ea34007aa59f491795d9b2f-480.webp 480w,/assets/img/2021/11/image-f443e3d54ea34007aa59f491795d9b2f-800.webp 800w,/assets/img/2021/11/image-f443e3d54ea34007aa59f491795d9b2f-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-f443e3d54ea34007aa59f491795d9b2f.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>服务器响应结果如下</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-16c2bc1bca0b42eb82056519314bd86b-480.webp 480w,/assets/img/2021/11/image-16c2bc1bca0b42eb82056519314bd86b-800.webp 800w,/assets/img/2021/11/image-16c2bc1bca0b42eb82056519314bd86b-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-16c2bc1bca0b42eb82056519314bd86b.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h2 id="高级查询">高级查询</h2> <ul> <li> <p>Elasticsearch 提供了基于 JSON 提供完整的查询 DSL 来定义查询</p> </li> <li> <p>定义数据 :</p> </li> </ul> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">#</span><span class="w"> </span><span class="err">POST</span><span class="w"> </span><span class="err">/student/_doc/</span><span class="mi">1001</span><span class="w">
</span><span class="p">{</span><span class="w">
	</span><span class="nl">"name"</span><span class="p">:</span><span class="s2">"zhangsan"</span><span class="p">,</span><span class="w">
	</span><span class="nl">"nickname"</span><span class="p">:</span><span class="s2">"zhangsan"</span><span class="p">,</span><span class="w">
	</span><span class="nl">"sex"</span><span class="p">:</span><span class="s2">"男"</span><span class="p">,</span><span class="w">
	</span><span class="nl">"age"</span><span class="p">:</span><span class="mi">30</span><span class="w">
</span><span class="p">}</span><span class="w">
</span><span class="err">#</span><span class="w"> </span><span class="err">POST</span><span class="w"> </span><span class="err">/student/_doc/</span><span class="mi">1002</span><span class="w">
</span><span class="p">{</span><span class="w">
	</span><span class="nl">"name"</span><span class="p">:</span><span class="s2">"lisi"</span><span class="p">,</span><span class="w">
	</span><span class="nl">"nickname"</span><span class="p">:</span><span class="s2">"lisi"</span><span class="p">,</span><span class="w">
	</span><span class="nl">"sex"</span><span class="p">:</span><span class="s2">"男"</span><span class="p">,</span><span class="w">
	</span><span class="nl">"age"</span><span class="p">:</span><span class="mi">20</span><span class="w"> 
</span><span class="p">}</span><span class="w">
</span><span class="err">#</span><span class="w"> </span><span class="err">POST</span><span class="w"> </span><span class="err">/student/_doc/</span><span class="mi">1003</span><span class="w">
</span><span class="p">{</span><span class="w">
	</span><span class="nl">"name"</span><span class="p">:</span><span class="s2">"wangwu"</span><span class="p">,</span><span class="w">
	</span><span class="nl">"nickname"</span><span class="p">:</span><span class="s2">"wangwu"</span><span class="p">,</span><span class="w">
	</span><span class="nl">"sex"</span><span class="p">:</span><span class="s2">"女"</span><span class="p">,</span><span class="w">
	</span><span class="nl">"age"</span><span class="p">:</span><span class="mi">40</span><span class="w"> 
</span><span class="p">}</span><span class="w">
</span><span class="err">#</span><span class="w"> </span><span class="err">POST</span><span class="w"> </span><span class="err">/student/_doc/</span><span class="mi">1004</span><span class="w">
</span><span class="p">{</span><span class="w">
	</span><span class="nl">"name"</span><span class="p">:</span><span class="s2">"zhangsan1"</span><span class="p">,</span><span class="w">
	</span><span class="nl">"nickname"</span><span class="p">:</span><span class="s2">"zhangsan1"</span><span class="p">,</span><span class="w">
	</span><span class="nl">"sex"</span><span class="p">:</span><span class="s2">"女"</span><span class="p">,</span><span class="w">
	</span><span class="nl">"age"</span><span class="p">:</span><span class="mi">50</span><span class="w"> 
</span><span class="p">}</span><span class="w">
</span><span class="err">#</span><span class="w"> </span><span class="err">POST</span><span class="w"> </span><span class="err">/student/_doc/</span><span class="mi">1005</span><span class="w">
</span><span class="p">{</span><span class="w">
	</span><span class="nl">"name"</span><span class="p">:</span><span class="s2">"zhangsan2"</span><span class="p">,</span><span class="w">
	</span><span class="nl">"nickname"</span><span class="p">:</span><span class="s2">"zhangsan2"</span><span class="p">,</span><span class="w">
	</span><span class="nl">"sex"</span><span class="p">:</span><span class="s2">"女"</span><span class="p">,</span><span class="w">
	</span><span class="nl">"age"</span><span class="p">:</span><span class="mi">30</span><span class="w"> 
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div> <h3 id="查询所有文档">查询所有文档</h3> <ul> <li> <h2 id="在-postman-中向-es-服务器发-get-请求-http1270019200student_search">在 Postman 中，向 ES 服务器发 <code class="language-plaintext highlighter-rouge">GET</code> 请求 ：http://127.0.0.1:9200/student/_search</h2> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w"> </span><span class="nl">"query"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="nl">"match_all"</span><span class="p">:</span><span class="w"> </span><span class="p">{}</span><span class="w">
  </span><span class="p">}</span><span class="w"> 
 </span><span class="p">}</span><span class="w">
</span><span class="err">#</span><span class="w"> </span><span class="s2">"query"</span><span class="err">：这里的</span><span class="w"> </span><span class="err">query</span><span class="w"> </span><span class="err">代表一个查询对象，里面可以有不同的查询属性</span><span class="w">
</span><span class="err">#</span><span class="w"> </span><span class="s2">"match_all"</span><span class="err">：查询类型，例如：match_all(代表查询所有)，</span><span class="w"> </span><span class="err">match，term</span><span class="w"> </span><span class="err">，</span><span class="w"> </span><span class="err">range</span><span class="w"> </span><span class="err">等等</span><span class="w">
</span><span class="err">#</span><span class="w"> </span><span class="p">{</span><span class="err">查询条件</span><span class="p">}</span><span class="err">：查询条件会根据类型的不同，写法也有差异</span><span class="w">
</span></code></pre></div> </div> </li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-6fa610ffb28e42a38157e64c94174beb-480.webp 480w,/assets/img/2021/11/image-6fa610ffb28e42a38157e64c94174beb-800.webp 800w,/assets/img/2021/11/image-6fa610ffb28e42a38157e64c94174beb-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-6fa610ffb28e42a38157e64c94174beb.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>服务器响应结果如下：</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-de0d8340e6934a3397820fbb19162515-480.webp 480w,/assets/img/2021/11/image-de0d8340e6934a3397820fbb19162515-800.webp 800w,/assets/img/2021/11/image-de0d8340e6934a3397820fbb19162515-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-de0d8340e6934a3397820fbb19162515.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="匹配查询">匹配查询</h3> <ul> <li> <p>match 匹配类型查询，会把查询条件进行分词，然后进行查询，多个词条之间是 or 的关系</p> </li> <li> <p>在 Postman 中，向 ES 服务器发 GET 请求 ：http://127.0.0.1:9200/student/_search</p> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"query"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="nl">"match"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
          </span><span class="nl">"name"</span><span class="p">:</span><span class="s2">"zhangsan"</span><span class="w">
      </span><span class="p">}</span><span class="w">
  </span><span class="p">}</span><span class="w"> 
</span><span class="p">}</span><span class="w">
</span></code></pre></div> </div> </li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-5ab61b953fe4402b9f4798b0feeec051-480.webp 480w,/assets/img/2021/11/image-5ab61b953fe4402b9f4798b0feeec051-800.webp 800w,/assets/img/2021/11/image-5ab61b953fe4402b9f4798b0feeec051-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-5ab61b953fe4402b9f4798b0feeec051.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>服务器响应结果为：</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-d84d586ffe614c3389c1cd789cd59f2c-480.webp 480w,/assets/img/2021/11/image-d84d586ffe614c3389c1cd789cd59f2c-800.webp 800w,/assets/img/2021/11/image-d84d586ffe614c3389c1cd789cd59f2c-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-d84d586ffe614c3389c1cd789cd59f2c.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="字段匹配查询">字段匹配查询</h3> <ul> <li> <p>multi_match 与 match 类似，不同的是它可以在多个字段中查询。</p> </li> <li> <p>在 Postman 中，向 ES 服务器发 GET 请求 ：http://127.0.0.1:9200/student/_search</p> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"query"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="nl">"multi_match"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
          </span><span class="nl">"query"</span><span class="p">:</span><span class="w"> </span><span class="s2">"zhangsan"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"fields"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"name"</span><span class="p">,</span><span class="s2">"nickname"</span><span class="p">]</span><span class="w">
      </span><span class="p">}</span><span class="w">
  </span><span class="p">}</span><span class="w"> 
</span><span class="p">}</span><span class="w">
</span></code></pre></div> </div> </li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-d8878f6e83b344db902f6ac7271ebe78-480.webp 480w,/assets/img/2021/11/image-d8878f6e83b344db902f6ac7271ebe78-800.webp 800w,/assets/img/2021/11/image-d8878f6e83b344db902f6ac7271ebe78-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-d8878f6e83b344db902f6ac7271ebe78.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>服务器响应结果</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-fa5e6f7f50364309abb8177cd39ed432-480.webp 480w,/assets/img/2021/11/image-fa5e6f7f50364309abb8177cd39ed432-800.webp 800w,/assets/img/2021/11/image-fa5e6f7f50364309abb8177cd39ed432-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-fa5e6f7f50364309abb8177cd39ed432.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="关键字精确查询">关键字精确查询</h3> <ul> <li> <p>term 查询，精确的关键词匹配查询，不对查询条件进行分词。</p> </li> <li> <p>在 Postman 中，向 ES 服务器发 GET 请求 ：http://127.0.0.1:9200/student/_search</p> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"query"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="nl">"term"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
          </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
              </span><span class="nl">"value"</span><span class="p">:</span><span class="w"> </span><span class="s2">"zhangsan"</span><span class="w">
          </span><span class="p">}</span><span class="w">
      </span><span class="p">}</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div> </div> </li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-a8f99894f290493ca00144d1f9fbceee-480.webp 480w,/assets/img/2021/11/image-a8f99894f290493ca00144d1f9fbceee-800.webp 800w,/assets/img/2021/11/image-a8f99894f290493ca00144d1f9fbceee-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-a8f99894f290493ca00144d1f9fbceee.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>服务器响应结果</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-45991c2df50d45e1bc7bf3ece03b258a-480.webp 480w,/assets/img/2021/11/image-45991c2df50d45e1bc7bf3ece03b258a-800.webp 800w,/assets/img/2021/11/image-45991c2df50d45e1bc7bf3ece03b258a-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-45991c2df50d45e1bc7bf3ece03b258a.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="多关键字精确查询">多关键字精确查询</h3> <ul> <li> <p>terms 查询和 term 查询一样，但它允许你指定多值进行匹配。</p> </li> <li> <p>如果这个字段包含了指定值中的任何一个值，那么这个文档满足条件，类似于 mysql 的 in</p> </li> <li> <p>在 Postman 中，向 ES 服务器发 GET 请求 ：http://127.0.0.1:9200/student/_search</p> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"query"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="nl">"terms"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
          </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"zhangsan"</span><span class="p">,</span><span class="s2">"lisi"</span><span class="p">]</span><span class="w">
      </span><span class="p">}</span><span class="w">
  </span><span class="p">}</span><span class="w"> 
</span><span class="p">}</span><span class="w">
</span></code></pre></div> </div> </li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-64c9ff574b6247b29763763f24695015-480.webp 480w,/assets/img/2021/11/image-64c9ff574b6247b29763763f24695015-800.webp 800w,/assets/img/2021/11/image-64c9ff574b6247b29763763f24695015-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-64c9ff574b6247b29763763f24695015.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>结果为：</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-67fa105dad8b4ae7bac016feff545a19-480.webp 480w,/assets/img/2021/11/image-67fa105dad8b4ae7bac016feff545a19-800.webp 800w,/assets/img/2021/11/image-67fa105dad8b4ae7bac016feff545a19-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-67fa105dad8b4ae7bac016feff545a19.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="指定查询字段">指定查询字段</h3> <ul> <li> <p>默认情况下，Elasticsearch 在搜索的结果中，会把文档中保存在_source 的所有字段都返回。</p> </li> <li> <p>如果我们只想获取其中的部分字段，我们可以添加_source 的过滤</p> </li> <li> <p>在 Postman 中，向 ES 服务器发 GET 请求 ：http://127.0.0.1:9200/student/_search</p> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"_source"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"name"</span><span class="p">,</span><span class="s2">"nickname"</span><span class="p">],</span><span class="w"> 
  </span><span class="nl">"query"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="nl">"terms"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
          </span><span class="nl">"nickname"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"zhangsan"</span><span class="p">]</span><span class="w">
      </span><span class="p">}</span><span class="w">
  </span><span class="p">}</span><span class="w"> 
</span><span class="p">}</span><span class="w">
</span></code></pre></div> </div> </li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-c5e2048f01134afb82784179ec7d5b97-480.webp 480w,/assets/img/2021/11/image-c5e2048f01134afb82784179ec7d5b97-800.webp 800w,/assets/img/2021/11/image-c5e2048f01134afb82784179ec7d5b97-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-c5e2048f01134afb82784179ec7d5b97.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>返回的结果</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-993930b554a3465f85ce5cdae95f5c55-480.webp 480w,/assets/img/2021/11/image-993930b554a3465f85ce5cdae95f5c55-800.webp 800w,/assets/img/2021/11/image-993930b554a3465f85ce5cdae95f5c55-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-993930b554a3465f85ce5cdae95f5c55.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="过滤字段">过滤字段</h3> <ul> <li> <p>如何指定不显示那些字段</p> </li> <li> <p>在 Postman 中，向 ES 服务器发 GET 请求 ：http://127.0.0.1:9200/student/_search</p> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"_source"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="nl">"excludes"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"name"</span><span class="p">,</span><span class="s2">"nickname"</span><span class="p">]</span><span class="w">
  </span><span class="p">},</span><span class="w"> 
  </span><span class="nl">"query"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="nl">"terms"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
          </span><span class="nl">"nickname"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"zhangsan"</span><span class="p">]</span><span class="w">
      </span><span class="p">}</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div> </div> </li> </ul> <blockquote> <ul> <li>includes：来指定想要显示的字段,(可以理解为默认为 includes，所以只配置显示那些字段时可省略)</li> <li>excludes：来指定不想要显示的字段</li> </ul> </blockquote> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-a38b88244db148628fe580e09c5a031a-480.webp 480w,/assets/img/2021/11/image-a38b88244db148628fe580e09c5a031a-800.webp 800w,/assets/img/2021/11/image-a38b88244db148628fe580e09c5a031a-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-a38b88244db148628fe580e09c5a031a.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>结果为</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-5231c51ea38c4dcd9a11d0a6514752e4-480.webp 480w,/assets/img/2021/11/image-5231c51ea38c4dcd9a11d0a6514752e4-800.webp 800w,/assets/img/2021/11/image-5231c51ea38c4dcd9a11d0a6514752e4-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-5231c51ea38c4dcd9a11d0a6514752e4.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="组合查询">组合查询</h3> <ul> <li>通过 bool 关键字，将查询条件进行组合，其中： <blockquote> <ul> <li>must: 必须</li> <li>must_not: 必须不</li> <li>should: 应该</li> </ul> </blockquote> </li> <li>在 Postman 中，向 ES 服务器发 GET 请求 ：http://127.0.0.1:9200/student/_search <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"query"</span><span class="p">:{</span><span class="w">
      </span><span class="nl">"bool"</span><span class="p">:{</span><span class="w">
          </span><span class="nl">"must"</span><span class="p">:[</span><span class="w">
              </span><span class="p">{</span><span class="w">
                  </span><span class="nl">"match"</span><span class="p">:{</span><span class="w">
                      </span><span class="nl">"name"</span><span class="p">:</span><span class="s2">"zhangsan"</span><span class="w">
                  </span><span class="p">}</span><span class="w">
              </span><span class="p">}</span><span class="w">
          </span><span class="p">],</span><span class="w">
          </span><span class="nl">"must_not"</span><span class="p">:[</span><span class="w">
              </span><span class="p">{</span><span class="w">
                  </span><span class="nl">"match"</span><span class="p">:{</span><span class="w">
                      </span><span class="nl">"age"</span><span class="p">:</span><span class="s2">"40"</span><span class="w">
                  </span><span class="p">}</span><span class="w">
              </span><span class="p">}</span><span class="w">
          </span><span class="p">],</span><span class="w">
          </span><span class="nl">"should"</span><span class="p">:[</span><span class="w">
              </span><span class="p">{</span><span class="w">
                  </span><span class="nl">"match"</span><span class="p">:{</span><span class="w">
                      </span><span class="nl">"sex"</span><span class="p">:</span><span class="s2">"男"</span><span class="w">
                  </span><span class="p">}</span><span class="w">
              </span><span class="p">}</span><span class="w">
          </span><span class="p">]</span><span class="w">
      </span><span class="p">}</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div> </div> </li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-6b8617e86fd646be908827e9c53fa745-480.webp 480w,/assets/img/2021/11/image-6b8617e86fd646be908827e9c53fa745-800.webp 800w,/assets/img/2021/11/image-6b8617e86fd646be908827e9c53fa745-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-6b8617e86fd646be908827e9c53fa745.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>结果为</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-3657a6e1ec814531bf5dbfe03abb3a26-480.webp 480w,/assets/img/2021/11/image-3657a6e1ec814531bf5dbfe03abb3a26-800.webp 800w,/assets/img/2021/11/image-3657a6e1ec814531bf5dbfe03abb3a26-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-3657a6e1ec814531bf5dbfe03abb3a26.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="范围查询">范围查询</h3> <ul> <li>range 查询找出那些落在指定区间内的数字或者时间。range 查询允许以下字符</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-f45d9cd2f8d34f37b420579b30732336-480.webp 480w,/assets/img/2021/11/image-f45d9cd2f8d34f37b420579b30732336-800.webp 800w,/assets/img/2021/11/image-f45d9cd2f8d34f37b420579b30732336-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-f45d9cd2f8d34f37b420579b30732336.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>在 Postman 中，向 ES 服务器发 GET 请求 ：http://127.0.0.1:9200/student/_search <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"query"</span><span class="p">:{</span><span class="w">
      </span><span class="nl">"range"</span><span class="p">:{</span><span class="w">
          </span><span class="nl">"age"</span><span class="p">:{</span><span class="w">
              </span><span class="nl">"gte"</span><span class="p">:</span><span class="mi">30</span><span class="p">,</span><span class="w">
              </span><span class="nl">"lte"</span><span class="p">:</span><span class="mi">35</span><span class="w">
          </span><span class="p">}</span><span class="w">
      </span><span class="p">}</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div> </div> </li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-3a7b980c611144e18c8785db5edf872e-480.webp 480w,/assets/img/2021/11/image-3a7b980c611144e18c8785db5edf872e-800.webp 800w,/assets/img/2021/11/image-3a7b980c611144e18c8785db5edf872e-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-3a7b980c611144e18c8785db5edf872e.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>结果为：</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-bed45690af9b4e188fe19ef26a857b55-480.webp 480w,/assets/img/2021/11/image-bed45690af9b4e188fe19ef26a857b55-800.webp 800w,/assets/img/2021/11/image-bed45690af9b4e188fe19ef26a857b55-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-bed45690af9b4e188fe19ef26a857b55.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="模糊查询">模糊查询</h3> <ul> <li> <p>返回包含与搜索字词相似的字词的文档。</p> </li> <li> <p>编辑距离是将一个术语转换为另一个术语所需的一个字符更改的次数。这些更改可以包括：</p> </li> </ul> <blockquote> <ul> <li>更改字符（box → fox）</li> <li>删除字符（black → lack）</li> <li>插入字符（sic → sick）</li> <li>转置两个相邻字符（act → cat）</li> </ul> </blockquote> <ul> <li> <p>为了找到相似的术语，fuzzy 查询会在指定的编辑距离内创建一组搜索词的所有可能的变体或扩展。然后查询返回每个扩展的完全匹配。</p> </li> <li> <p>通过 fuzziness 修改编辑距离。一般使用默认值 AUTO，根据术语的长度生成编辑距离。</p> </li> <li> <p>在 Postman 中，向 ES 服务器发 GET 请求 ：</p> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"query"</span><span class="p">:{</span><span class="w">
      </span><span class="nl">"fuzzy"</span><span class="p">:{</span><span class="w">
          </span><span class="nl">"name"</span><span class="p">:{</span><span class="w">
              </span><span class="nl">"value"</span><span class="p">:</span><span class="s2">"zhangsan"</span><span class="w">
          </span><span class="p">}</span><span class="w">
      </span><span class="p">}</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div> </div> </li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-871d092833e5496d9b02561eeeed011a-480.webp 480w,/assets/img/2021/11/image-871d092833e5496d9b02561eeeed011a-800.webp 800w,/assets/img/2021/11/image-871d092833e5496d9b02561eeeed011a-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-871d092833e5496d9b02561eeeed011a.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>结果为</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-f9a65dd8c6124b7185fe572db3b2000c-480.webp 480w,/assets/img/2021/11/image-f9a65dd8c6124b7185fe572db3b2000c-800.webp 800w,/assets/img/2021/11/image-f9a65dd8c6124b7185fe572db3b2000c-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-f9a65dd8c6124b7185fe572db3b2000c.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="字段排序">字段排序</h3> <ul> <li> <p>sort 可以让我们按照不同的字段进行排序，并且通过 order 指定排序的方式。desc 降序，asc 升序。</p> </li> <li> <p>在 Postman 中，向 ES 服务器发 GET 请求 ：http://127.0.0.1:9200/student/_search</p> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"query"</span><span class="p">:{</span><span class="w">
      </span><span class="nl">"match_all"</span><span class="p">:{</span><span class="w">

      </span><span class="p">}</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="nl">"sort"</span><span class="p">:[</span><span class="w">
      </span><span class="p">{</span><span class="w">
          </span><span class="nl">"age"</span><span class="p">:{</span><span class="w">
              </span><span class="nl">"order"</span><span class="p">:</span><span class="s2">"desc"</span><span class="w">
          </span><span class="p">}</span><span class="w">
      </span><span class="p">},</span><span class="w">
      </span><span class="p">{</span><span class="w">
          </span><span class="nl">"_score"</span><span class="p">:{</span><span class="w">
              </span><span class="nl">"order"</span><span class="p">:</span><span class="s2">"desc"</span><span class="w">
          </span><span class="p">}</span><span class="w">
      </span><span class="p">}</span><span class="w">
  </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div> </div> </li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-18b644f78976485295c6a2a6b8721441-480.webp 480w,/assets/img/2021/11/image-18b644f78976485295c6a2a6b8721441-800.webp 800w,/assets/img/2021/11/image-18b644f78976485295c6a2a6b8721441-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-18b644f78976485295c6a2a6b8721441.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>结果为：</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-f96e95fa7edd4bee8b34131f4d6537c8-480.webp 480w,/assets/img/2021/11/image-f96e95fa7edd4bee8b34131f4d6537c8-800.webp 800w,/assets/img/2021/11/image-f96e95fa7edd4bee8b34131f4d6537c8-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-f96e95fa7edd4bee8b34131f4d6537c8.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="高亮查询">高亮查询</h3> <ul> <li> <p>Elasticsearch 可以对查询内容中的关键字部分，进行标签和样式(高亮)的设置。</p> </li> <li> <p>在使用 match 查询的同时，加上一个 highlight 属性：</p> </li> </ul> <blockquote> <ul> <li>pre_tags：前置标签</li> <li>post_tags：后置标签</li> <li>fields：需要高亮的字段</li> <li>title：这里声明 title 字段需要高亮，后面可以为这个字段设置特有配置，也可以空</li> </ul> </blockquote> <ul> <li>在 Postman 中，向 ES 服务器发 GET 请求 ：http://127.0.0.1:9200/student/_search <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"query"</span><span class="p">:{</span><span class="w">
      </span><span class="nl">"match"</span><span class="p">:{</span><span class="w">
          </span><span class="nl">"name"</span><span class="p">:</span><span class="s2">"zhangsan"</span><span class="w">
      </span><span class="p">}</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="nl">"highlight"</span><span class="p">:{</span><span class="w">
      </span><span class="nl">"pre_tags"</span><span class="p">:</span><span class="s2">"&lt;font color='red'&gt;"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"post_tags"</span><span class="p">:</span><span class="s2">"&lt;/font&gt;"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"fields"</span><span class="p">:{</span><span class="w">
          </span><span class="nl">"name"</span><span class="p">:{</span><span class="w">

          </span><span class="p">}</span><span class="w">
      </span><span class="p">}</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div> </div> </li> <li>结果为：</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-ec589fad3dbf4647a9750c1ef723730b-480.webp 480w,/assets/img/2021/11/image-ec589fad3dbf4647a9750c1ef723730b-800.webp 800w,/assets/img/2021/11/image-ec589fad3dbf4647a9750c1ef723730b-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-ec589fad3dbf4647a9750c1ef723730b.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="分页查询">分页查询</h3> <ul> <li> <p>from：当前页的起始索引，默认从 0 开始。</p> </li> <li> <p>size：每页显示多少条</p> </li> <li> <p>from = (pageNum - 1) * size</p> </li> <li> <p>在 Postman 中，向 ES 服务器发 GET 请求 ：http://127.0.0.1:9200/student/_search</p> </li> </ul> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"query"</span><span class="p">:{</span><span class="w">
        </span><span class="nl">"match_all"</span><span class="p">:{</span><span class="w">

        </span><span class="p">}</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="nl">"sort"</span><span class="p">:[</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"age"</span><span class="p">:{</span><span class="w">
                </span><span class="nl">"order"</span><span class="p">:</span><span class="s2">"desc"</span><span class="w">
            </span><span class="p">}</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">],</span><span class="w">
    </span><span class="nl">"from"</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="w">
    </span><span class="nl">"size"</span><span class="p">:</span><span class="mi">2</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div> <ul> <li>结果为：</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-26e3aeb97a9c480ba0897d0685ecff3c-480.webp 480w,/assets/img/2021/11/image-26e3aeb97a9c480ba0897d0685ecff3c-800.webp 800w,/assets/img/2021/11/image-26e3aeb97a9c480ba0897d0685ecff3c-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-26e3aeb97a9c480ba0897d0685ecff3c.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="聚合查询">聚合查询</h3> <ul> <li> <p>聚合允许使用者对 es 文档进行统计分析，类似与关系型数据库中的 group by，当然还有很 多其他的聚合，例如取最大值、平均值等等。</p> </li> <li> <p>在 Postman 中，向 ES 服务器发 GET 请求 ：http://127.0.0.1:9200/student/_search</p> </li> </ul> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"aggs"</span><span class="p">:{</span><span class="w">
        </span><span class="nl">"max_age"</span><span class="p">:{</span><span class="w">
            </span><span class="nl">"max"</span><span class="p">:{</span><span class="w">
                </span><span class="nl">"field"</span><span class="p">:</span><span class="s2">"age"</span><span class="w">
            </span><span class="p">}</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="nl">"size"</span><span class="p">:</span><span class="mi">0</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div> <ul> <li>结果为：</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-4b053cd71ddf41d69d1a2cba3031e537-480.webp 480w,/assets/img/2021/11/image-4b053cd71ddf41d69d1a2cba3031e537-800.webp 800w,/assets/img/2021/11/image-4b053cd71ddf41d69d1a2cba3031e537-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-4b053cd71ddf41d69d1a2cba3031e537.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h2 id="java-api操作">JAVA API操作</h2> <ul> <li>Elasticsearch 软件是由 Java 语言开发的，所以也可以通过 Java API 的方式对 Elasticsearch服务进行访问</li> </ul> <h3 id="搭建环境">搭建环境</h3> <ol> <li>在 IDEA 中创建一个 Maven 依赖</li> <li>修改 Pom.xml</li> </ol> <div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;dependencies&gt;</span>
    <span class="nt">&lt;dependency&gt;</span>
        <span class="nt">&lt;groupId&gt;</span>org.elasticsearch<span class="nt">&lt;/groupId&gt;</span>
        <span class="nt">&lt;artifactId&gt;</span>elasticsearch<span class="nt">&lt;/artifactId&gt;</span>
        <span class="nt">&lt;version&gt;</span>7.8.0<span class="nt">&lt;/version&gt;</span>
    <span class="nt">&lt;/dependency&gt;</span>
    <span class="c">&lt;!-- elasticsearch的客户端 --&gt;</span>
    <span class="nt">&lt;dependency&gt;</span>
        <span class="nt">&lt;groupId&gt;</span>org.elasticsearch.client<span class="nt">&lt;/groupId&gt;</span>
        <span class="nt">&lt;artifactId&gt;</span>elasticsearch-rest-high-level-client<span class="nt">&lt;/artifactId&gt;</span>
        <span class="nt">&lt;version&gt;</span>7.8.0<span class="nt">&lt;/version&gt;</span>
    <span class="nt">&lt;/dependency&gt;</span>
    <span class="c">&lt;!-- elasticsearch依赖2.x的log4j --&gt;</span>
    <span class="nt">&lt;dependency&gt;</span>
        <span class="nt">&lt;groupId&gt;</span>org.apache.logging.log4j<span class="nt">&lt;/groupId&gt;</span>
        <span class="nt">&lt;artifactId&gt;</span>log4j-api<span class="nt">&lt;/artifactId&gt;</span>
        <span class="nt">&lt;version&gt;</span>2.8.2<span class="nt">&lt;/version&gt;</span>
    <span class="nt">&lt;/dependency&gt;</span>
    <span class="nt">&lt;dependency&gt;</span>
        <span class="nt">&lt;groupId&gt;</span>org.apache.logging.log4j<span class="nt">&lt;/groupId&gt;</span>
        <span class="nt">&lt;artifactId&gt;</span>log4j-core<span class="nt">&lt;/artifactId&gt;</span>
        <span class="nt">&lt;version&gt;</span>2.8.2<span class="nt">&lt;/version&gt;</span>
    <span class="nt">&lt;/dependency&gt;</span>
    <span class="nt">&lt;dependency&gt;</span>
        <span class="nt">&lt;groupId&gt;</span>com.fasterxml.jackson.core<span class="nt">&lt;/groupId&gt;</span>
        <span class="nt">&lt;artifactId&gt;</span>jackson-databind<span class="nt">&lt;/artifactId&gt;</span>
        <span class="nt">&lt;version&gt;</span>2.9.9<span class="nt">&lt;/version&gt;</span>
    <span class="nt">&lt;/dependency&gt;</span>
    <span class="c">&lt;!-- junit单元测试 --&gt;</span>
    <span class="nt">&lt;dependency&gt;</span>
        <span class="nt">&lt;groupId&gt;</span>junit<span class="nt">&lt;/groupId&gt;</span>
        <span class="nt">&lt;artifactId&gt;</span>junit<span class="nt">&lt;/artifactId&gt;</span>
        <span class="nt">&lt;version&gt;</span>4.12<span class="nt">&lt;/version&gt;</span>
    <span class="nt">&lt;/dependency&gt;</span>
<span class="nt">&lt;/dependencies&gt;</span>
</code></pre></div></div> <h3 id="创建客户端对象">创建客户端对象</h3> <ul> <li>新建一个类，并编写代码</li> </ul> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ESTest_Client</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
        <span class="c1">// 创建ES客户端</span>
        <span class="nc">RestHighLevelClient</span> <span class="n">esClient</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">RestHighLevelClient</span><span class="o">(</span>
                <span class="nc">RestClient</span><span class="o">.</span><span class="na">builder</span><span class="o">(</span><span class="k">new</span> <span class="nc">HttpHost</span><span class="o">(</span><span class="s">"localhost"</span><span class="o">,</span> <span class="mi">9200</span><span class="o">,</span> <span class="s">"http"</span><span class="o">))</span>
        <span class="o">);</span>
        <span class="c1">// 关闭ES客户端</span>
        <span class="n">esClient</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div> <p><strong>注意：9200 端口为 Elasticsearch 的 Web 通信端口，localhost 为启动 ES 服务的主机名</strong></p> <ul> <li>启动测试 控制台没有报错就表示连接成功</li> </ul> <h3 id="索引操作">索引操作</h3> <ul> <li>ES 服务器正常启动后，可以通过 Java API 客户端对象对 ES 索引进行操作</li> </ul> <p>1.创建索引</p> <ul> <li>创建新的类</li> </ul> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ESTest_Index_Create</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
        <span class="nc">RestHighLevelClient</span> <span class="n">esClient</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">RestHighLevelClient</span><span class="o">(</span>
                <span class="nc">RestClient</span><span class="o">.</span><span class="na">builder</span><span class="o">(</span><span class="k">new</span> <span class="nc">HttpHost</span><span class="o">(</span><span class="s">"localhost"</span><span class="o">,</span> <span class="mi">9200</span><span class="o">,</span> <span class="s">"http"</span><span class="o">))</span>
        <span class="o">);</span>
        <span class="c1">// 创建索引</span>
        <span class="nc">CreateIndexRequest</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">CreateIndexRequest</span><span class="o">(</span><span class="s">"user"</span><span class="o">);</span>
        <span class="nc">CreateIndexResponse</span> <span class="n">createIndexResponse</span> <span class="o">=</span>
                <span class="n">esClient</span><span class="o">.</span><span class="na">indices</span><span class="o">().</span><span class="na">create</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="nc">RequestOptions</span><span class="o">.</span><span class="na">DEFAULT</span><span class="o">);</span>
        <span class="c1">// 响应状态</span>
        <span class="kt">boolean</span> <span class="n">acknowledged</span> <span class="o">=</span> <span class="n">createIndexResponse</span><span class="o">.</span><span class="na">isAcknowledged</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"索引操作 ："</span> <span class="o">+</span> <span class="n">acknowledged</span><span class="o">);</span>
        <span class="n">esClient</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div> <ul> <li>启动测试</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-a0851ac47a7849f09ad350e544845831-480.webp 480w,/assets/img/2021/11/image-a0851ac47a7849f09ad350e544845831-800.webp 800w,/assets/img/2021/11/image-a0851ac47a7849f09ad350e544845831-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-a0851ac47a7849f09ad350e544845831.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>2.查看索引</p> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 查询索引</span>
    <span class="nc">GetIndexRequest</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">GetIndexRequest</span><span class="o">(</span><span class="s">"user"</span><span class="o">);</span>

    <span class="nc">GetIndexResponse</span> <span class="n">getIndexResponse</span> <span class="o">=</span>
            <span class="n">esClient</span><span class="o">.</span><span class="na">indices</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="nc">RequestOptions</span><span class="o">.</span><span class="na">DEFAULT</span><span class="o">);</span>
    <span class="c1">// 响应状态</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">getIndexResponse</span><span class="o">.</span><span class="na">getAliases</span><span class="o">());</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">getIndexResponse</span><span class="o">.</span><span class="na">getMappings</span><span class="o">());</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">getIndexResponse</span><span class="o">.</span><span class="na">getSettings</span><span class="o">());</span>
</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-ef30d45883c549a99ccb770a69c351da-480.webp 480w,/assets/img/2021/11/image-ef30d45883c549a99ccb770a69c351da-800.webp 800w,/assets/img/2021/11/image-ef30d45883c549a99ccb770a69c351da-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-ef30d45883c549a99ccb770a69c351da.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>3.删除索引</p> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="c1">// 查询索引</span>
    <span class="nc">DeleteIndexRequest</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">DeleteIndexRequest</span><span class="o">(</span><span class="s">"user"</span><span class="o">);</span>
    <span class="nc">AcknowledgedResponse</span> <span class="n">response</span> <span class="o">=</span> <span class="n">esClient</span><span class="o">.</span><span class="na">indices</span><span class="o">().</span><span class="na">delete</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="nc">RequestOptions</span><span class="o">.</span><span class="na">DEFAULT</span><span class="o">);</span>
    <span class="c1">// 响应状态</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">isAcknowledged</span><span class="o">());</span>
</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-585c2d4f8b314d13bff0bf9901ab5b35-480.webp 480w,/assets/img/2021/11/image-585c2d4f8b314d13bff0bf9901ab5b35-800.webp 800w,/assets/img/2021/11/image-585c2d4f8b314d13bff0bf9901ab5b35-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-585c2d4f8b314d13bff0bf9901ab5b35.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="文档操作-1">文档操作</h3> <ul> <li>创建数据模型</li> </ul> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">User</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">name</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">sex</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">Integer</span> <span class="n">age</span><span class="o">;</span>
    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getName</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">name</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setName</span><span class="o">(</span><span class="nc">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getSex</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">sex</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setSex</span><span class="o">(</span><span class="nc">String</span> <span class="n">sex</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">sex</span> <span class="o">=</span> <span class="n">sex</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="nc">Integer</span> <span class="nf">getAge</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">age</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setAge</span><span class="o">(</span><span class="nc">Integer</span> <span class="n">age</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">age</span> <span class="o">=</span> <span class="n">age</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div> <p>1.新增文档</p> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="c1">// 插入数据</span>
    <span class="nc">IndexRequest</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">IndexRequest</span><span class="o">();</span>
    <span class="n">request</span><span class="o">.</span><span class="na">index</span><span class="o">(</span><span class="s">"user"</span><span class="o">).</span><span class="na">id</span><span class="o">(</span><span class="s">"1001"</span><span class="o">);</span>

    <span class="nc">User</span> <span class="n">user</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">User</span><span class="o">();</span>
    <span class="n">user</span><span class="o">.</span><span class="na">setName</span><span class="o">(</span><span class="s">"zhangsan"</span><span class="o">);</span>
    <span class="n">user</span><span class="o">.</span><span class="na">setAge</span><span class="o">(</span><span class="mi">30</span><span class="o">);</span>
    <span class="n">user</span><span class="o">.</span><span class="na">setSex</span><span class="o">(</span><span class="s">"男"</span><span class="o">);</span>

    <span class="c1">// 向ES插入数据，必须将数据转换位JSON格式</span>
    <span class="nc">ObjectMapper</span> <span class="n">mapper</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ObjectMapper</span><span class="o">();</span>
    <span class="nc">String</span> <span class="n">userJson</span> <span class="o">=</span> <span class="n">mapper</span><span class="o">.</span><span class="na">writeValueAsString</span><span class="o">(</span><span class="n">user</span><span class="o">);</span>
    <span class="n">request</span><span class="o">.</span><span class="na">source</span><span class="o">(</span><span class="n">userJson</span><span class="o">,</span> <span class="nc">XContentType</span><span class="o">.</span><span class="na">JSON</span><span class="o">);</span>

    <span class="nc">IndexResponse</span> <span class="n">response</span> <span class="o">=</span> <span class="n">esClient</span><span class="o">.</span><span class="na">index</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="nc">RequestOptions</span><span class="o">.</span><span class="na">DEFAULT</span><span class="o">);</span>

    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getResult</span><span class="o">());</span>
</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-91d99253d09749bab1119351017aa55f-480.webp 480w,/assets/img/2021/11/image-91d99253d09749bab1119351017aa55f-800.webp 800w,/assets/img/2021/11/image-91d99253d09749bab1119351017aa55f-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-91d99253d09749bab1119351017aa55f.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>2.修改文档</p> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 修改数据</span>
    <span class="nc">UpdateRequest</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">UpdateRequest</span><span class="o">();</span>
    <span class="n">request</span><span class="o">.</span><span class="na">index</span><span class="o">(</span><span class="s">"user"</span><span class="o">).</span><span class="na">id</span><span class="o">(</span><span class="s">"1001"</span><span class="o">);</span>
    <span class="n">request</span><span class="o">.</span><span class="na">doc</span><span class="o">(</span><span class="nc">XContentType</span><span class="o">.</span><span class="na">JSON</span><span class="o">,</span> <span class="s">"sex"</span><span class="o">,</span> <span class="s">"女"</span><span class="o">);</span>

    <span class="nc">UpdateResponse</span> <span class="n">response</span> <span class="o">=</span> <span class="n">esClient</span><span class="o">.</span><span class="na">update</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="nc">RequestOptions</span><span class="o">.</span><span class="na">DEFAULT</span><span class="o">);</span>

    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getResult</span><span class="o">());</span>

</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-2a6940c1e8cd4521ba46a8ad3a6c9c49-480.webp 480w,/assets/img/2021/11/image-2a6940c1e8cd4521ba46a8ad3a6c9c49-800.webp 800w,/assets/img/2021/11/image-2a6940c1e8cd4521ba46a8ad3a6c9c49-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-2a6940c1e8cd4521ba46a8ad3a6c9c49.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>3.查询文档</p> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 查询数据</span>
    <span class="nc">GetRequest</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">GetRequest</span><span class="o">();</span>
    <span class="n">request</span><span class="o">.</span><span class="na">index</span><span class="o">(</span><span class="s">"user"</span><span class="o">).</span><span class="na">id</span><span class="o">(</span><span class="s">"1001"</span><span class="o">);</span>
    <span class="nc">GetResponse</span> <span class="n">response</span> <span class="o">=</span> <span class="n">esClient</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="nc">RequestOptions</span><span class="o">.</span><span class="na">DEFAULT</span><span class="o">);</span>

    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getSourceAsString</span><span class="o">());</span>
</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-95912088c18f4608aa0e9c2bccbf8026-480.webp 480w,/assets/img/2021/11/image-95912088c18f4608aa0e9c2bccbf8026-800.webp 800w,/assets/img/2021/11/image-95912088c18f4608aa0e9c2bccbf8026-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-95912088c18f4608aa0e9c2bccbf8026.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>4.删除文档</p> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="nc">DeleteRequest</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">DeleteRequest</span><span class="o">();</span>
    <span class="n">request</span><span class="o">.</span><span class="na">index</span><span class="o">(</span><span class="s">"user"</span><span class="o">).</span><span class="na">id</span><span class="o">(</span><span class="s">"1001"</span><span class="o">);</span>

    <span class="nc">DeleteResponse</span> <span class="n">response</span> <span class="o">=</span> <span class="n">esClient</span><span class="o">.</span><span class="na">delete</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="nc">RequestOptions</span><span class="o">.</span><span class="na">DEFAULT</span><span class="o">);</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-e67beb36bd4245429a0daffcc5dd2a80-480.webp 480w,/assets/img/2021/11/image-e67beb36bd4245429a0daffcc5dd2a80-800.webp 800w,/assets/img/2021/11/image-e67beb36bd4245429a0daffcc5dd2a80-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-e67beb36bd4245429a0daffcc5dd2a80.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>5.批量操作</p> <ul> <li>批量新增</li> </ul> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 批量插入数据</span>
    <span class="nc">BulkRequest</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BulkRequest</span><span class="o">();</span>

    <span class="n">request</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">IndexRequest</span><span class="o">().</span><span class="na">index</span><span class="o">(</span><span class="s">"user"</span><span class="o">).</span><span class="na">id</span><span class="o">(</span><span class="s">"1001"</span><span class="o">).</span><span class="na">source</span><span class="o">(</span><span class="nc">XContentType</span><span class="o">.</span><span class="na">JSON</span><span class="o">,</span> <span class="s">"name"</span><span class="o">,</span> <span class="s">"zhangsan"</span><span class="o">,</span> <span class="s">"age"</span><span class="o">,</span><span class="mi">30</span><span class="o">,</span><span class="s">"sex"</span><span class="o">,</span><span class="s">"男"</span><span class="o">));</span>
    <span class="n">request</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">IndexRequest</span><span class="o">().</span><span class="na">index</span><span class="o">(</span><span class="s">"user"</span><span class="o">).</span><span class="na">id</span><span class="o">(</span><span class="s">"1002"</span><span class="o">).</span><span class="na">source</span><span class="o">(</span><span class="nc">XContentType</span><span class="o">.</span><span class="na">JSON</span><span class="o">,</span> <span class="s">"name"</span><span class="o">,</span> <span class="s">"lisi"</span><span class="o">,</span> <span class="s">"age"</span><span class="o">,</span><span class="mi">30</span><span class="o">,</span><span class="s">"sex"</span><span class="o">,</span><span class="s">"女"</span><span class="o">));</span>
    <span class="n">request</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">IndexRequest</span><span class="o">().</span><span class="na">index</span><span class="o">(</span><span class="s">"user"</span><span class="o">).</span><span class="na">id</span><span class="o">(</span><span class="s">"1003"</span><span class="o">).</span><span class="na">source</span><span class="o">(</span><span class="nc">XContentType</span><span class="o">.</span><span class="na">JSON</span><span class="o">,</span> <span class="s">"name"</span><span class="o">,</span> <span class="s">"wangwu"</span><span class="o">,</span> <span class="s">"age"</span><span class="o">,</span><span class="mi">40</span><span class="o">,</span><span class="s">"sex"</span><span class="o">,</span><span class="s">"男"</span><span class="o">));</span>

    <span class="nc">BulkResponse</span> <span class="n">response</span> <span class="o">=</span> <span class="n">esClient</span><span class="o">.</span><span class="na">bulk</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="nc">RequestOptions</span><span class="o">.</span><span class="na">DEFAULT</span><span class="o">);</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getTook</span><span class="o">());</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getItems</span><span class="o">());</span>
</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-3b5b20c7cb6f4751b69cd5506d7d6198-480.webp 480w,/assets/img/2021/11/image-3b5b20c7cb6f4751b69cd5506d7d6198-800.webp 800w,/assets/img/2021/11/image-3b5b20c7cb6f4751b69cd5506d7d6198-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-3b5b20c7cb6f4751b69cd5506d7d6198.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>批量删除</li> </ul> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 批量删除数据</span>
    <span class="nc">BulkRequest</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BulkRequest</span><span class="o">();</span>

    <span class="n">request</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">DeleteRequest</span><span class="o">().</span><span class="na">index</span><span class="o">(</span><span class="s">"user"</span><span class="o">).</span><span class="na">id</span><span class="o">(</span><span class="s">"1001"</span><span class="o">));</span>
    <span class="n">request</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">DeleteRequest</span><span class="o">().</span><span class="na">index</span><span class="o">(</span><span class="s">"user"</span><span class="o">).</span><span class="na">id</span><span class="o">(</span><span class="s">"1002"</span><span class="o">));</span>
    <span class="n">request</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">DeleteRequest</span><span class="o">().</span><span class="na">index</span><span class="o">(</span><span class="s">"user"</span><span class="o">).</span><span class="na">id</span><span class="o">(</span><span class="s">"1003"</span><span class="o">));</span>

    <span class="nc">BulkResponse</span> <span class="n">response</span> <span class="o">=</span> <span class="n">esClient</span><span class="o">.</span><span class="na">bulk</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="nc">RequestOptions</span><span class="o">.</span><span class="na">DEFAULT</span><span class="o">);</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getTook</span><span class="o">());</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getItems</span><span class="o">());</span>
</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-5e1d75dd715849bcb739a5c180744e58-480.webp 480w,/assets/img/2021/11/image-5e1d75dd715849bcb739a5c180744e58-800.webp 800w,/assets/img/2021/11/image-5e1d75dd715849bcb739a5c180744e58-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-5e1d75dd715849bcb739a5c180744e58.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="高级查询-1">高级查询</h3> <p>1.查询所有索引数据</p> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 1. 查询索引中全部的数据</span>
    <span class="nc">SearchRequest</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SearchRequest</span><span class="o">();</span>
    <span class="n">request</span><span class="o">.</span><span class="na">indices</span><span class="o">(</span><span class="s">"user"</span><span class="o">);</span>
    <span class="n">request</span><span class="o">.</span><span class="na">source</span><span class="o">(</span><span class="k">new</span> <span class="nc">SearchSourceBuilder</span><span class="o">().</span><span class="na">query</span><span class="o">(</span><span class="nc">QueryBuilders</span><span class="o">.</span><span class="na">matchAllQuery</span><span class="o">()));</span>
    <span class="nc">SearchResponse</span> <span class="n">response</span> <span class="o">=</span> <span class="n">esClient</span><span class="o">.</span><span class="na">search</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="nc">RequestOptions</span><span class="o">.</span><span class="na">DEFAULT</span><span class="o">);</span>
    <span class="nc">SearchHits</span> <span class="n">hits</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">getHits</span><span class="o">();</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">hits</span><span class="o">.</span><span class="na">getTotalHits</span><span class="o">());</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getTook</span><span class="o">());</span>
    <span class="k">for</span> <span class="o">(</span> <span class="nc">SearchHit</span> <span class="n">hit</span> <span class="o">:</span> <span class="n">hits</span> <span class="o">)</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">hit</span><span class="o">.</span><span class="na">getSourceAsString</span><span class="o">());</span>
    <span class="o">}</span>
</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-467427eb3b824687ad173e2981b58a88-480.webp 480w,/assets/img/2021/11/image-467427eb3b824687ad173e2981b58a88-800.webp 800w,/assets/img/2021/11/image-467427eb3b824687ad173e2981b58a88-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-467427eb3b824687ad173e2981b58a88.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>2.term查询，查询条件为关键字</p> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="nc">SearchRequest</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SearchRequest</span><span class="o">();</span>
    <span class="n">request</span><span class="o">.</span><span class="na">indices</span><span class="o">(</span><span class="s">"user"</span><span class="o">);</span>
    <span class="n">request</span><span class="o">.</span><span class="na">source</span><span class="o">(</span><span class="k">new</span> <span class="nc">SearchSourceBuilder</span><span class="o">().</span><span class="na">query</span><span class="o">(</span><span class="nc">QueryBuilders</span><span class="o">.</span><span class="na">termQuery</span><span class="o">(</span><span class="s">"age"</span><span class="o">,</span> <span class="mi">30</span><span class="o">)));</span>
    <span class="nc">SearchResponse</span> <span class="n">response</span> <span class="o">=</span> <span class="n">esClient</span><span class="o">.</span><span class="na">search</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="nc">RequestOptions</span><span class="o">.</span><span class="na">DEFAULT</span><span class="o">);</span>
    <span class="nc">SearchHits</span> <span class="n">hits</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">getHits</span><span class="o">();</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">hits</span><span class="o">.</span><span class="na">getTotalHits</span><span class="o">());</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getTook</span><span class="o">());</span>
    <span class="k">for</span> <span class="o">(</span> <span class="nc">SearchHit</span> <span class="n">hit</span> <span class="o">:</span> <span class="n">hits</span> <span class="o">)</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">hit</span><span class="o">.</span><span class="na">getSourceAsString</span><span class="o">());</span>
    <span class="o">}</span>
</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-462a2bafb3664c2c907600babf0268aa-480.webp 480w,/assets/img/2021/11/image-462a2bafb3664c2c907600babf0268aa-800.webp 800w,/assets/img/2021/11/image-462a2bafb3664c2c907600babf0268aa-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-462a2bafb3664c2c907600babf0268aa.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>3.分页查询</p> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="nc">SearchRequest</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SearchRequest</span><span class="o">();</span>
    <span class="n">request</span><span class="o">.</span><span class="na">indices</span><span class="o">(</span><span class="s">"user"</span><span class="o">);</span>
    <span class="nc">SearchSourceBuilder</span> <span class="n">builder</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SearchSourceBuilder</span><span class="o">().</span><span class="na">query</span><span class="o">(</span><span class="nc">QueryBuilders</span><span class="o">.</span><span class="na">matchAllQuery</span><span class="o">());</span>
    <span class="c1">// (当前页码-1)*每页显示数据条数</span>
    <span class="n">builder</span><span class="o">.</span><span class="na">from</span><span class="o">(</span><span class="mi">2</span><span class="o">);</span>
    <span class="n">builder</span><span class="o">.</span><span class="na">size</span><span class="o">(</span><span class="mi">2</span><span class="o">);</span>
    <span class="n">request</span><span class="o">.</span><span class="na">source</span><span class="o">(</span><span class="n">builder</span><span class="o">);</span>
    <span class="nc">SearchResponse</span> <span class="n">response</span> <span class="o">=</span> <span class="n">esClient</span><span class="o">.</span><span class="na">search</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="nc">RequestOptions</span><span class="o">.</span><span class="na">DEFAULT</span><span class="o">);</span>
    <span class="nc">SearchHits</span> <span class="n">hits</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">getHits</span><span class="o">();</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">hits</span><span class="o">.</span><span class="na">getTotalHits</span><span class="o">());</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getTook</span><span class="o">());</span>
    <span class="k">for</span> <span class="o">(</span> <span class="nc">SearchHit</span> <span class="n">hit</span> <span class="o">:</span> <span class="n">hits</span> <span class="o">)</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">hit</span><span class="o">.</span><span class="na">getSourceAsString</span><span class="o">());</span>
    <span class="o">}</span>
</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-ce3c0258e2224c859e3fc838f24f819a-480.webp 480w,/assets/img/2021/11/image-ce3c0258e2224c859e3fc838f24f819a-800.webp 800w,/assets/img/2021/11/image-ce3c0258e2224c859e3fc838f24f819a-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-ce3c0258e2224c859e3fc838f24f819a.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>4.查询排序</p> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="nc">SearchRequest</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SearchRequest</span><span class="o">();</span>
    <span class="n">request</span><span class="o">.</span><span class="na">indices</span><span class="o">(</span><span class="s">"user"</span><span class="o">);</span>
    <span class="nc">SearchSourceBuilder</span> <span class="n">builder</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SearchSourceBuilder</span><span class="o">().</span><span class="na">query</span><span class="o">(</span><span class="nc">QueryBuilders</span><span class="o">.</span><span class="na">matchAllQuery</span><span class="o">());</span>
    <span class="n">builder</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="s">"age"</span><span class="o">,</span> <span class="nc">SortOrder</span><span class="o">.</span><span class="na">DESC</span><span class="o">);</span>
    <span class="n">request</span><span class="o">.</span><span class="na">source</span><span class="o">(</span><span class="n">builder</span><span class="o">);</span>
    <span class="nc">SearchResponse</span> <span class="n">response</span> <span class="o">=</span> <span class="n">esClient</span><span class="o">.</span><span class="na">search</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="nc">RequestOptions</span><span class="o">.</span><span class="na">DEFAULT</span><span class="o">);</span>
    <span class="nc">SearchHits</span> <span class="n">hits</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">getHits</span><span class="o">();</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">hits</span><span class="o">.</span><span class="na">getTotalHits</span><span class="o">());</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getTook</span><span class="o">());</span>
    <span class="k">for</span> <span class="o">(</span> <span class="nc">SearchHit</span> <span class="n">hit</span> <span class="o">:</span> <span class="n">hits</span> <span class="o">)</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">hit</span><span class="o">.</span><span class="na">getSourceAsString</span><span class="o">());</span>
    <span class="o">}</span>
</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-2a6892ccb7a449539b47cfdc9390c74e-480.webp 480w,/assets/img/2021/11/image-2a6892ccb7a449539b47cfdc9390c74e-800.webp 800w,/assets/img/2021/11/image-2a6892ccb7a449539b47cfdc9390c74e-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-2a6892ccb7a449539b47cfdc9390c74e.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>5.过滤字段</p> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="nc">SearchRequest</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SearchRequest</span><span class="o">();</span>
    <span class="n">request</span><span class="o">.</span><span class="na">indices</span><span class="o">(</span><span class="s">"user"</span><span class="o">);</span>
    <span class="nc">SearchSourceBuilder</span> <span class="n">builder</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SearchSourceBuilder</span><span class="o">().</span><span class="na">query</span><span class="o">(</span><span class="nc">QueryBuilders</span><span class="o">.</span><span class="na">matchAllQuery</span><span class="o">());</span>
    <span class="nc">String</span><span class="o">[]</span> <span class="n">excludes</span> <span class="o">=</span> <span class="o">{</span><span class="s">"age"</span><span class="o">};</span>
    <span class="nc">String</span><span class="o">[]</span> <span class="n">includes</span> <span class="o">=</span> <span class="o">{};</span>
    <span class="n">builder</span><span class="o">.</span><span class="na">fetchSource</span><span class="o">(</span><span class="n">includes</span><span class="o">,</span> <span class="n">excludes</span><span class="o">);</span>
    <span class="n">request</span><span class="o">.</span><span class="na">source</span><span class="o">(</span><span class="n">builder</span><span class="o">);</span>
    <span class="nc">SearchResponse</span> <span class="n">response</span> <span class="o">=</span> <span class="n">esClient</span><span class="o">.</span><span class="na">search</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="nc">RequestOptions</span><span class="o">.</span><span class="na">DEFAULT</span><span class="o">);</span>
    <span class="nc">SearchHits</span> <span class="n">hits</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">getHits</span><span class="o">();</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">hits</span><span class="o">.</span><span class="na">getTotalHits</span><span class="o">());</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getTook</span><span class="o">());</span>
    <span class="k">for</span> <span class="o">(</span> <span class="nc">SearchHit</span> <span class="n">hit</span> <span class="o">:</span> <span class="n">hits</span> <span class="o">)</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">hit</span><span class="o">.</span><span class="na">getSourceAsString</span><span class="o">());</span>
    <span class="o">}</span>
</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-0129d59a117040a896712526ffc3938d-480.webp 480w,/assets/img/2021/11/image-0129d59a117040a896712526ffc3938d-800.webp 800w,/assets/img/2021/11/image-0129d59a117040a896712526ffc3938d-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-0129d59a117040a896712526ffc3938d.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>6.组合查询</p> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="nc">SearchRequest</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SearchRequest</span><span class="o">();</span>
    <span class="n">request</span><span class="o">.</span><span class="na">indices</span><span class="o">(</span><span class="s">"user"</span><span class="o">);</span>
    <span class="nc">SearchSourceBuilder</span> <span class="n">builder</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SearchSourceBuilder</span><span class="o">();</span>
    <span class="nc">BoolQueryBuilder</span> <span class="n">boolQueryBuilder</span> <span class="o">=</span> <span class="nc">QueryBuilders</span><span class="o">.</span><span class="na">boolQuery</span><span class="o">();</span>
    <span class="c1">//boolQueryBuilder.must(QueryBuilders.matchQuery("age", 30));</span>
    <span class="c1">//boolQueryBuilder.must(QueryBuilders.matchQuery("sex", "男"));</span>
    <span class="c1">//boolQueryBuilder.mustNot(QueryBuilders.matchQuery("sex", "男"));</span>
    <span class="n">boolQueryBuilder</span><span class="o">.</span><span class="na">should</span><span class="o">(</span><span class="nc">QueryBuilders</span><span class="o">.</span><span class="na">matchQuery</span><span class="o">(</span><span class="s">"age"</span><span class="o">,</span> <span class="mi">30</span><span class="o">));</span>
    <span class="n">boolQueryBuilder</span><span class="o">.</span><span class="na">should</span><span class="o">(</span><span class="nc">QueryBuilders</span><span class="o">.</span><span class="na">matchQuery</span><span class="o">(</span><span class="s">"age"</span><span class="o">,</span> <span class="mi">40</span><span class="o">));</span>
    <span class="n">builder</span><span class="o">.</span><span class="na">query</span><span class="o">(</span><span class="n">boolQueryBuilder</span><span class="o">);</span>
    <span class="n">request</span><span class="o">.</span><span class="na">source</span><span class="o">(</span><span class="n">builder</span><span class="o">);</span>
    <span class="nc">SearchResponse</span> <span class="n">response</span> <span class="o">=</span> <span class="n">esClient</span><span class="o">.</span><span class="na">search</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="nc">RequestOptions</span><span class="o">.</span><span class="na">DEFAULT</span><span class="o">);</span>
    <span class="nc">SearchHits</span> <span class="n">hits</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">getHits</span><span class="o">();</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">hits</span><span class="o">.</span><span class="na">getTotalHits</span><span class="o">());</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getTook</span><span class="o">());</span>
    <span class="k">for</span> <span class="o">(</span> <span class="nc">SearchHit</span> <span class="n">hit</span> <span class="o">:</span> <span class="n">hits</span> <span class="o">)</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">hit</span><span class="o">.</span><span class="na">getSourceAsString</span><span class="o">());</span>
    <span class="o">}</span>
</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-fa9f177b4cb541498f2f4d2e6eb1e969-480.webp 480w,/assets/img/2021/11/image-fa9f177b4cb541498f2f4d2e6eb1e969-800.webp 800w,/assets/img/2021/11/image-fa9f177b4cb541498f2f4d2e6eb1e969-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-fa9f177b4cb541498f2f4d2e6eb1e969.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>7.范围查询</p> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="nc">SearchRequest</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SearchRequest</span><span class="o">();</span>
    <span class="n">request</span><span class="o">.</span><span class="na">indices</span><span class="o">(</span><span class="s">"user"</span><span class="o">);</span>

    <span class="nc">SearchSourceBuilder</span> <span class="n">builder</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SearchSourceBuilder</span><span class="o">();</span>
    <span class="nc">RangeQueryBuilder</span> <span class="n">rangeQuery</span> <span class="o">=</span> <span class="nc">QueryBuilders</span><span class="o">.</span><span class="na">rangeQuery</span><span class="o">(</span><span class="s">"age"</span><span class="o">);</span>

    <span class="n">rangeQuery</span><span class="o">.</span><span class="na">gte</span><span class="o">(</span><span class="mi">30</span><span class="o">);</span>
    <span class="n">rangeQuery</span><span class="o">.</span><span class="na">lt</span><span class="o">(</span><span class="mi">50</span><span class="o">);</span>

    <span class="n">builder</span><span class="o">.</span><span class="na">query</span><span class="o">(</span><span class="n">rangeQuery</span><span class="o">);</span>

    <span class="n">request</span><span class="o">.</span><span class="na">source</span><span class="o">(</span><span class="n">builder</span><span class="o">);</span>
    <span class="nc">SearchResponse</span> <span class="n">response</span> <span class="o">=</span> <span class="n">esClient</span><span class="o">.</span><span class="na">search</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="nc">RequestOptions</span><span class="o">.</span><span class="na">DEFAULT</span><span class="o">);</span>

    <span class="nc">SearchHits</span> <span class="n">hits</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">getHits</span><span class="o">();</span>

    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">hits</span><span class="o">.</span><span class="na">getTotalHits</span><span class="o">());</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getTook</span><span class="o">());</span>

    <span class="k">for</span> <span class="o">(</span> <span class="nc">SearchHit</span> <span class="n">hit</span> <span class="o">:</span> <span class="n">hits</span> <span class="o">)</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">hit</span><span class="o">.</span><span class="na">getSourceAsString</span><span class="o">());</span>
    <span class="o">}</span>
</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-d7557970789041a9b95f729ddced55f3-480.webp 480w,/assets/img/2021/11/image-d7557970789041a9b95f729ddced55f3-800.webp 800w,/assets/img/2021/11/image-d7557970789041a9b95f729ddced55f3-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-d7557970789041a9b95f729ddced55f3.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>8.模糊查询</p> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="nc">SearchRequest</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SearchRequest</span><span class="o">();</span>
    <span class="n">request</span><span class="o">.</span><span class="na">indices</span><span class="o">(</span><span class="s">"user"</span><span class="o">);</span>

    <span class="nc">SearchSourceBuilder</span> <span class="n">builder</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SearchSourceBuilder</span><span class="o">();</span>
    <span class="n">builder</span><span class="o">.</span><span class="na">query</span><span class="o">(</span><span class="nc">QueryBuilders</span><span class="o">.</span><span class="na">fuzzyQuery</span><span class="o">(</span><span class="s">"name"</span><span class="o">,</span> <span class="s">"wangwu"</span><span class="o">).</span><span class="na">fuzziness</span><span class="o">(</span><span class="nc">Fuzziness</span><span class="o">.</span><span class="na">TWO</span><span class="o">));</span>

    <span class="n">request</span><span class="o">.</span><span class="na">source</span><span class="o">(</span><span class="n">builder</span><span class="o">);</span>
    <span class="nc">SearchResponse</span> <span class="n">response</span> <span class="o">=</span> <span class="n">esClient</span><span class="o">.</span><span class="na">search</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="nc">RequestOptions</span><span class="o">.</span><span class="na">DEFAULT</span><span class="o">);</span>

    <span class="nc">SearchHits</span> <span class="n">hits</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">getHits</span><span class="o">();</span>

    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">hits</span><span class="o">.</span><span class="na">getTotalHits</span><span class="o">());</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getTook</span><span class="o">());</span>

    <span class="k">for</span> <span class="o">(</span> <span class="nc">SearchHit</span> <span class="n">hit</span> <span class="o">:</span> <span class="n">hits</span> <span class="o">)</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">hit</span><span class="o">.</span><span class="na">getSourceAsString</span><span class="o">());</span>
    <span class="o">}</span>

</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-dc3b5962a82e469d9c27f7279fe8670e-480.webp 480w,/assets/img/2021/11/image-dc3b5962a82e469d9c27f7279fe8670e-800.webp 800w,/assets/img/2021/11/image-dc3b5962a82e469d9c27f7279fe8670e-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-dc3b5962a82e469d9c27f7279fe8670e.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>9.高亮查询</p> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="nc">SearchRequest</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SearchRequest</span><span class="o">();</span>
    <span class="n">request</span><span class="o">.</span><span class="na">indices</span><span class="o">(</span><span class="s">"user"</span><span class="o">);</span>

    <span class="nc">SearchSourceBuilder</span> <span class="n">builder</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SearchSourceBuilder</span><span class="o">();</span>
    <span class="nc">TermsQueryBuilder</span> <span class="n">termsQueryBuilder</span> <span class="o">=</span> <span class="nc">QueryBuilders</span><span class="o">.</span><span class="na">termsQuery</span><span class="o">(</span><span class="s">"name"</span><span class="o">,</span> <span class="s">"zhangsan"</span><span class="o">);</span>

    <span class="nc">HighlightBuilder</span> <span class="n">highlightBuilder</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HighlightBuilder</span><span class="o">();</span>
    <span class="n">highlightBuilder</span><span class="o">.</span><span class="na">preTags</span><span class="o">(</span><span class="s">"&lt;font color='red'&gt;"</span><span class="o">);</span>
    <span class="n">highlightBuilder</span><span class="o">.</span><span class="na">postTags</span><span class="o">(</span><span class="s">"&lt;/font&gt;"</span><span class="o">);</span>
    <span class="n">highlightBuilder</span><span class="o">.</span><span class="na">field</span><span class="o">(</span><span class="s">"name"</span><span class="o">);</span>

    <span class="n">builder</span><span class="o">.</span><span class="na">highlighter</span><span class="o">(</span><span class="n">highlightBuilder</span><span class="o">);</span>
    <span class="n">builder</span><span class="o">.</span><span class="na">query</span><span class="o">(</span><span class="n">termsQueryBuilder</span><span class="o">);</span>

    <span class="n">request</span><span class="o">.</span><span class="na">source</span><span class="o">(</span><span class="n">builder</span><span class="o">);</span>
    <span class="nc">SearchResponse</span> <span class="n">response</span> <span class="o">=</span> <span class="n">esClient</span><span class="o">.</span><span class="na">search</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="nc">RequestOptions</span><span class="o">.</span><span class="na">DEFAULT</span><span class="o">);</span>

    <span class="nc">SearchHits</span> <span class="n">hits</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">getHits</span><span class="o">();</span>

    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">hits</span><span class="o">.</span><span class="na">getTotalHits</span><span class="o">());</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getTook</span><span class="o">());</span>

    <span class="k">for</span> <span class="o">(</span> <span class="nc">SearchHit</span> <span class="n">hit</span> <span class="o">:</span> <span class="n">hits</span> <span class="o">)</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">hit</span><span class="o">.</span><span class="na">getSourceAsString</span><span class="o">());</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">hit</span><span class="o">.</span><span class="na">getHighlightFields</span><span class="o">());</span>
    <span class="o">}</span>
</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-174fd62541384e2fa497ecfaeea7d520-480.webp 480w,/assets/img/2021/11/image-174fd62541384e2fa497ecfaeea7d520-800.webp 800w,/assets/img/2021/11/image-174fd62541384e2fa497ecfaeea7d520-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-174fd62541384e2fa497ecfaeea7d520.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>10.聚合查询</p> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="nc">SearchRequest</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SearchRequest</span><span class="o">();</span>
    <span class="n">request</span><span class="o">.</span><span class="na">indices</span><span class="o">(</span><span class="s">"user"</span><span class="o">);</span>

    <span class="nc">SearchSourceBuilder</span> <span class="n">builder</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SearchSourceBuilder</span><span class="o">();</span>

    <span class="nc">AggregationBuilder</span> <span class="n">aggregationBuilder</span> <span class="o">=</span> <span class="nc">AggregationBuilders</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="s">"maxAge"</span><span class="o">).</span><span class="na">field</span><span class="o">(</span><span class="s">"age"</span><span class="o">);</span>
    <span class="n">builder</span><span class="o">.</span><span class="na">aggregation</span><span class="o">(</span><span class="n">aggregationBuilder</span><span class="o">);</span>

    <span class="n">request</span><span class="o">.</span><span class="na">source</span><span class="o">(</span><span class="n">builder</span><span class="o">);</span>
    <span class="nc">SearchResponse</span> <span class="n">response</span> <span class="o">=</span> <span class="n">esClient</span><span class="o">.</span><span class="na">search</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="nc">RequestOptions</span><span class="o">.</span><span class="na">DEFAULT</span><span class="o">);</span>

    <span class="nc">SearchHits</span> <span class="n">hits</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">getHits</span><span class="o">();</span>

    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">hits</span><span class="o">.</span><span class="na">getTotalHits</span><span class="o">());</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getTook</span><span class="o">());</span>

    <span class="k">for</span> <span class="o">(</span> <span class="nc">SearchHit</span> <span class="n">hit</span> <span class="o">:</span> <span class="n">hits</span> <span class="o">)</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">hit</span><span class="o">.</span><span class="na">getSourceAsString</span><span class="o">());</span>
    <span class="o">}</span>

</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2021/11/image-4acbe36e38e14f1d825098208fdcc215-480.webp 480w,/assets/img/2021/11/image-4acbe36e38e14f1d825098208fdcc215-800.webp 800w,/assets/img/2021/11/image-4acbe36e38e14f1d825098208fdcc215-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2021/11/image-4acbe36e38e14f1d825098208fdcc215.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>11.分组查询</p> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="nc">SearchRequest</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SearchRequest</span><span class="o">();</span>
    <span class="n">request</span><span class="o">.</span><span class="na">indices</span><span class="o">(</span><span class="s">"user"</span><span class="o">);</span>

    <span class="nc">SearchSourceBuilder</span> <span class="n">builder</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SearchSourceBuilder</span><span class="o">();</span>

    <span class="nc">AggregationBuilder</span> <span class="n">aggregationBuilder</span> <span class="o">=</span> <span class="nc">AggregationBuilders</span><span class="o">.</span><span class="na">terms</span><span class="o">(</span><span class="s">"ageGroup"</span><span class="o">).</span><span class="na">field</span><span class="o">(</span><span class="s">"age"</span><span class="o">);</span>
    <span class="n">builder</span><span class="o">.</span><span class="na">aggregation</span><span class="o">(</span><span class="n">aggregationBuilder</span><span class="o">);</span>

    <span class="n">request</span><span class="o">.</span><span class="na">source</span><span class="o">(</span><span class="n">builder</span><span class="o">);</span>
    <span class="nc">SearchResponse</span> <span class="n">response</span> <span class="o">=</span> <span class="n">esClient</span><span class="o">.</span><span class="na">search</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="nc">RequestOptions</span><span class="o">.</span><span class="na">DEFAULT</span><span class="o">);</span>

    <span class="nc">SearchHits</span> <span class="n">hits</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">getHits</span><span class="o">();</span>

    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">hits</span><span class="o">.</span><span class="na">getTotalHits</span><span class="o">());</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getTook</span><span class="o">());</span>

    <span class="k">for</span> <span class="o">(</span> <span class="nc">SearchHit</span> <span class="n">hit</span> <span class="o">:</span> <span class="n">hits</span> <span class="o">)</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">hit</span><span class="o">.</span><span class="na">getSourceAsString</span><span class="o">());</span>
    <span class="o">}</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="Backend ElasticSearch"/><summary type="html"><![CDATA[简介 ElasticSearch，简称ES，是一个开源的高扩展的分布式全文搜索引擎。它可以近乎实时的存储、检索数据；本身扩展性很好，可以扩展到上百台服务器，处理PB级别的数据。]]></summary></entry><entry><title type="html">消息的延时以及失效问题</title><link href="https://zhengstar94.github.io//blog/2021/%E6%B6%88%E6%81%AF%E7%9A%84%E5%BB%B6%E6%97%B6%E4%BB%A5%E5%8F%8A%E5%A4%B1%E6%95%88%E9%97%AE%E9%A2%98/" rel="alternate" type="text/html" title="消息的延时以及失效问题"/><published>2021-10-06T00:00:00+00:00</published><updated>2021-10-06T00:00:00+00:00</updated><id>https://zhengstar94.github.io//blog/2021/%E6%B6%88%E6%81%AF%E7%9A%84%E5%BB%B6%E6%97%B6%E4%BB%A5%E5%8F%8A%E5%A4%B1%E6%95%88%E9%97%AE%E9%A2%98</id><content type="html" xml:base="https://zhengstar94.github.io//blog/2021/%E6%B6%88%E6%81%AF%E7%9A%84%E5%BB%B6%E6%97%B6%E4%BB%A5%E5%8F%8A%E5%A4%B1%E6%95%88%E9%97%AE%E9%A2%98/"><![CDATA[<h1 id="消息的延时以及失效问题">消息的延时以及失效问题</h1> <h2 id="介绍">介绍</h2> <p>其实本质针对的场景，都是说，可能你的消费端出了问题，不消费了；或者消费的速度极其慢。接着就坑爹了，可能你的消息队列集群的磁盘都快写满了，都没人消费，这个时候怎么办？或者是这整个就积压了几个小时，你这个时候怎么办？或者是你积压的时间太长了，导致比如 RabbitMQ 设置了消息过期时间后就没了怎么办？</p> <p>举个例子，消费端每次消费之后要写 mysql，结果 mysql 挂了，消费端 卡在 那儿了，不动了；或者是消费端出了个什么岔子，导致消费速度极其慢。</p> <h2 id="大量消息在mq里面积压了几个小时还没有解决">大量消息在mq里面积压了几个小时还没有解决</h2> <p>一般这个时候，只能临时紧急扩容，具体操作思路：</p> <ol> <li>先修复consumer问题，确保回复其消费速度，然后将现有的consumer停掉</li> <li>新建一个topic，partition是原来的10倍，临时建立好原先10倍的queue数量</li> <li>写一个临时分发数据的consumer程序，这个程序部署上去消费积压的数据，消费之后不做耗时处理，直接均匀轮训写入临时写入临时建立好的10倍数量的queue</li> <li>临时用10倍的机器来部署consumer，每一批consumer消费一个临时queue的数据。相当于临时将queue资源和consumer的资源扩大10倍，以正常的10倍速度消费数据。</li> <li>等快速消费完积压数据之后，恢复原先的部署架构，重写用原先的consumer机器来消费消息</li> </ol> <h2 id="mq中的消息过期失效了">MQ中的消息过期失效了</h2> <p>假设使用的RabbitMQ，它是可以设置过期时间。如果消息在queue中积压超过一定时间就会被RabbitMQ给清理掉，这个数据就丢失了。</p> <p>这个情况下，我们可以采用<strong>批量重导</strong>，打击了积压的时候，直接丢弃数据，等到高峰期过了之后，我们可以开始写程序，将丢失的那批数据，写个临时程序，一点点查询出来，重新灌入mq里面，把丢失的数据补回来。</p> <h2 id="mq都快写满了">MQ都快写满了</h2> <p>如果消息积压到MQ里，如果很长时间没有处理掉，导致MQ快写满了。</p> <p><strong>临时写程序，接入数据来消费，消费一个丢弃一个，快速消费完，然后到晚上再补回数据。</strong></p>]]></content><author><name></name></author><category term="Backend MQ"/><summary type="html"><![CDATA[消息的延时以及失效问题]]></summary></entry></feed>