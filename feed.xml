<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://zhengstar94.github.io//feed.xml" rel="self" type="application/atom+xml"/><link href="https://zhengstar94.github.io//" rel="alternate" type="text/html" hreflang="en"/><updated>2024-06-21T15:04:36+00:00</updated><id>https://zhengstar94.github.io//feed.xml</id><title type="html">blank</title><subtitle>Welcome to Xingxing&apos;s blog, where I share my thoughts and experiences on various topics. </subtitle><entry><title type="html">A small guide to supplements: What you need to know</title><link href="https://zhengstar94.github.io//blog/2023/small-guide-to-supplements-what-you-need-to-know/" rel="alternate" type="text/html" title="A small guide to supplements: What you need to know"/><published>2023-11-12T00:00:00+00:00</published><updated>2023-11-12T00:00:00+00:00</updated><id>https://zhengstar94.github.io//blog/2023/small-guide-to-supplements-what%20you%20need%20to%20know</id><content type="html" xml:base="https://zhengstar94.github.io//blog/2023/small-guide-to-supplements-what-you-need-to-know/"><![CDATA[<ol> <li><a href="#disclaimer">Disclaimer</a></li> <li><a href="#motivation">Introduction: Motivaton of this blog</a></li> <li><a href="#anti-aging">Anti-aging Supplements</a> <ol> <li><a href="#Resveratrol">Resveratrol</a></li> <li><a href="#NMN">NMN</a></li> <li><a href="#Ubiquinol">Ubiquinol</a></li> <li><a href="#Astaxanthin">Astaxanthin</a></li> <li><a href="#grape_seed">Grape Seed Extract</a></li> </ol> </li> <li><a href="#enzyme">Enzyme</a> <ol> <li><a href="#Serratiopeptidase">Serratiopeptidase</a></li> </ol> </li> <li><a href="#other">Minerals, Vitamins &amp; Fatty Acids</a> <ol> <li><a href="#vd">Vitamin D</a></li> <li><a href="#vk2">Vitamin K</a></li> <li><a href="#magnesium">Magnesium</a></li> <li><a href="#Omega-3">Omega-3 Fatty Acids</a></li> </ol> </li> <li><a href="#summary_and_concerns">Suggest Doses, Summary and Concerns</a></li> </ol> <h3 id="disclaimer-">Disclaimer <a name="disclaimer"></a></h3> <p>The information presented on the blog is <strong>ONLY</strong> intended for knowledge sharing and understanding how supplements work, it is <strong>NOT</strong> intended as medical advice or as a substitute for medical treatment. You should always consult with your physician or other health care professional before taking any medication or nutritional, herbal or homeopathic supplement.</p> <h2 id="introduction-motivation-of-this-blog-">Introduction: Motivation of this blog <a name="motivation"></a></h2> <p>Last week, I had a thought-provoking discussion with my colleagues. The topic of our conversation? Supplements. What intrigued me was that, just like many of my peers, I too have ventured into the world of supplements because of David Sinclair and various of health-related podcasts like Huberman lab. While the reasons taking supplements is easy for me: looking to combat inflammation. For my colleague, this could be boost performance when working out.</p> <p>A pill that promises health improvements, anti-aging effects, but to be honest I had very limited knowledge of those small pills I’m taking, I yearn for comprehension.What exactly are these supplements composed of at a molecular level? How do these minuscule pills exert their influence within our bodies biologically? Moreover, is there an optimal approach to taking these supplements to maximize their potential benefits for our health and well-being?</p> <p>Over the past few days, I’ve immersed myself into articles, research papers, and scientific literature. My aim was clear: to understand these tiny capsules that promise health. In the sections to come, I included 10 different supplements and introduced them each from the very essence of these their chemical identities, their categorizations, their mechanisms of action with the academic evidence. In the end a suggest dose for those supplements was given.</p> <h2 id="anti-aging-supplements-">Anti-aging Supplements <a name="anti-aging"></a></h2> <h3 id="resveratrol-">Resveratrol <a name="Resveratrol"></a></h3> <p>Resveratrol (RV) is a potent polyphenolic compound found in a variety of fruits and vegetables, including grapes, skin of peanuts, mulberries, blueberries, bilberries, soybeans, pomegranates, cranberries, soy, dark chocolate, pistachios. It possesses a distinct chemical structure, primarily composed of two aromatic rings connected by a methylene bridge. Biologically when you take resveratorl, it is rapidly metabolized by phase II enzymes in the intestine and liver. The RV’s <strong>low solubility</strong>(&lt; 0.05mg/ml) in water is caused by its enzymatic structure, which might affect its consumption.<a href="#1">[1]</a></p> <p align="center"> <img src="/images/2023/11/2880px-Cis_and_trans_resveratrol_notext copy.svg.png" alt="Cis_and_trans_resveratrol" width="350" height="100"/> </p> <p>Resveratrol occurs naturally in two forms: trans and cis isomers, with the trans-isomer being the more commonly associated with health benefits. It is typically a white powder extracted using methanol, characterized by a melting point between 253°C and 255°C, and has a relatively low molecular weight of 228.25.<a href="#1">[1]</a> While trans-resveratrol is the form primarily studied for its potential health advantages, cis-resveratrol is less prevalent and is typically produced synthetically rather than being the predominant form found in natural sources. The variation in the spatial arrangement of atoms around the double bond results in differences in the chemical and biological properties of these two isomers. Trans-resveratrol is generally considered the more biologically active and bioavailable form, making it the focal point of most research on the potential health benefits of resveratrol.</p> <h4 id="mechanisms-of-action">Mechanisms of action</h4> <p>It has been discovered that RV has many potential health benefits like antioxidant , cardioprotective, neurological, anti-inflammatory, antiplatelet, blood glucose-lowering, and anticancer activities.<a href="#1">[1]</a> In another famous experiments in nonhuman primates carried out by Laboratory of Cardiovascular Science, resveratrol has been found to prevent high fat/sucrose (HFS) diet-induced central arterial wall inflammation and stiffening.<a href="#2">[2]</a> Below is a simplified summary of its actions:</p> <ol> <li> <p><strong>SIRT1/3 Activation:</strong> Resveratrol activates SIRT1 and SIRT3 enzymes (SIRT1 and SIRT3 is one of <a href="https://en.wikipedia.org/wiki/Sirtuin">Sirtuin</a>, which are types of proteins involved in metabolic regulation, inflammation), Sirt1 has been implicated in many vital processes, such as DNA repair, cell survival, gluconeogenesis, muscle cell differentiation, cell-cycle regulation, lipid metabolism, fat mobilization and insulin sensitivity. <a href="#3">[3]</a></p> </li> <li> <p><strong>Neuroprotective Effects:</strong> It reduces <a href="https://en.wikipedia.org/wiki/Endoplasmic_reticulum">endoplasmic reticulum</a> (ER) stress, inhibits carbonyl protein activity, and supports factors associated with brain health.</p> </li> <li> <p><strong>Cardiometabolic Benefits:</strong> Resveratrol improves mitochondrial (The mitochondria are like little workers in a factory. They take the food you eat, use the oxygen you breathe, and create energy for your body) respiratory activity in the heart, increases adenosine monophosphate kinase (p-<a href="https://en.wikipedia.org/wiki/AMP-activated_protein_kinase">AMPK</a>) levels (AMPK acts as a sensor of cellular energy status and helps regulate various metabolic processes to ensure the cell has enough energy to function), and boosts <a href="https://en.wikipedia.org/wiki/SOD2">SOD2</a> (a family of enzymes that play a crucial role in protecting cells from damage caused by free radicals) levels, promoting cardiovascular health.</p> </li> <li> <p><strong>Inflammation Regulation:</strong> Resveratrol reduces inflammatory parameters, including interleukin-6 <a href="https://en.wikipedia.org/wiki/Interleukin_6">IL-6</a> (IL-6 involved in promoting inflammation, regulating immune cell activity) and Tumor Necrosis Factor-Alpha <a href="https://en.wikipedia.org/wiki/Tumor_necrosis_factor">TNF-α</a>, which plays a significant role in managing oxidative stress.</p> </li> <li> <p><strong>Anti-Cancer Properties:</strong> Resveratrol inhibits the production of NADPH oxidase <a href="https://en.wikipedia.org/wiki/NADPH_oxidase">NOX</a> and <a href="https://en.wikipedia.org/wiki/Myeloperoxidase">myeloperoxidase</a>, showing potential anti-cancer effects.</p> </li> <li> <p><strong>Neurological Health:</strong> Resveratrol inhibits Nitric oxide synthase <a href="https://en.wikipedia.org/wiki/Nitric_oxide_synthase">iNOS</a> production, protects against lipid peroxidation, and has potential therapeutic effects for Alzheimer’s disease (AD) by promoting amyloid precursor protein cleavage and overcoming oxidative stress.</p> </li> <li> <p><strong>Reproductive System Benefits:</strong> Resveratrol improves sperm mobility, increases zinc concentration, and counteracts prooxidative effects in the reproductive system.</p> </li> <li> <p><strong>Intestinal Health:</strong> Resveratrol reduces markers like <a href="https://en.wikipedia.org/wiki/Interleukin_8">IL-8</a>, Vascular Endothelial Growth Factor <a href="https://en.wikipedia.org/wiki/Vascular_endothelial_growth_factor">VEGF</a> (VEGF’s normal function is to create new blood vessels, but overexpression of VEGF can cause vascular disease), and Reactive oxygen species <a href="https://en.wikipedia.org/wiki/Reactive_oxygen_species">ROS</a> (ROS are like energetic troublemakers in your body that, when there are too many of them, can create a bit of chaos and cause damage to your cells), indicating a role in managing intestinal disorders. <a href="#4">[4]</a></p> </li> </ol> <p>The figure below shows the general benefits of resveratrol.</p> <p align="center"> <img src="/images/2023/11/Screenshot 2023-11-17 at 10.56.54.png" alt="resveratrol_benifit" width="90%" height="auto"/> </p> <h3 id="nmn-">NMN <a name="NMN"></a></h3> <p>Nicotinamide Mononucleotide (<a href="https://en.wikipedia.org/wiki/Nicotinamide_mononucleotide">NMN</a>). In humans, several enzymes use NMN to generate nicotinamide adenine dinucleotide (<a href="https://en.wikipedia.org/wiki/Nicotinamide_adenine_dinucleotide">NADH</a>). (NAD+ (Nicotinamide Adenine Dinucleotide) is a crucial coenzyme in cells that plays a fundamental role in various biological processes, you can think of it as coal for energy production, NAD+ was found gradually declining during aging.<a href="#6">[6]</a>) NMN can be found in fruits and vegetables such as broccoli, cabbage, cucumber and avocado at a concentration of about 1 mg per 100g. In mammals most NMN is synthesized from vitamin B3 in the form of nicotinamide. <a href="#5">[5]</a></p> <p align="center"> <img src="/images/2023/11/Screenshot 2023-11-18 at 15.57.20.png" alt="nmn" width="50%" height="auto"/> </p> <p>NMN consists of three main components: a nicotinamide group, a ribose sugar, and a phosphate group. The nicotinamide group is connected to the ribose unit, and the phosphate group is attached to the ribose, forming the complete NMN molecule. In the human body, it can be found in placenta tissue and body fluids such as blood and urine. <a href="#7">[7]</a></p> <h4 id="mechanisms-of-action-1">Mechanisms of action</h4> <p><strong>NAD+ Decline During Aging:</strong></p> <p>Aging is naturally associated with a decline in NAD+ levels. Enzymes like <a href="https://en.wikipedia.org/wiki/Sirtuin">sirtuins</a>,<a href="https://en.wikipedia.org/wiki/CD38">CD38</a>/CD157, <a href="https://en.wikipedia.org/wiki/Procyclin">PARP</a>, <a href="https://en.wikipedia.org/wiki/Tankyrase">TNKS</a>, and <a href="https://en.wikipedia.org/wiki/BST1">BST</a> contribute to NAD+ consumption during aging. <a href="#7">[7]</a> Chronic inflammation and oxidative stress hinder NAD+ biosynthesis. Reduced NAD+ levels lead to interruptions in cellular communication and mitochondrial dysfunction, contributing to age-related complications.</p> <p><strong>Why NMN Could Work as a Solution:</strong></p> <p>NMN (Nicotinamide Mononucleotide) is an intermediate compound in the NAD+ <a href="https://en.wikipedia.org/wiki/Biosynthesis">biosynthesis</a> (simple compounds are modified, converted into other compounds) pathway. Administering NMN can compensate for the decline in NAD+ levels during aging. NMN supplementation may activate SIRT1, a protein associated with anti-aging effects. Studies suggest NMN as a potential solution to restore NAD+ levels and counteract aging effects. The effect could be summarized by the figure <a href="#7">[7]</a> shown below</p> <p align="center"> <img src="/images/2023/11/Screenshot 2023-11-18 at 16.01.41.png" alt="nmn" width="80%" height="auto"/> </p> <h4 id="ubiquinol-">Ubiquinol <a name="Ubiquinol"></a></h4> <p>The term “ubiquinol” derives from “ubiquitous,” signifying its widespread presence. Ubiquinol is an electron-rich (reduced) form of coenzyme Q (ubiquinone), aka CoQ10. In 1957, Professor Frederick Crane and colleagues discovered CoQ10 from beef heart mitochondria at the University of Wisconsin-Madison Enzyme Institute.6 R.A. Morton, from the United Kingdom, isolated the compound in rat liver just after Dr. Crane’s discovery. It was Morton who named the compound ubiquinone, meaning ubiquitous quinone or one that “exists everywhere.”. In 1962, Peter D. Mitchell, PhD from University of Edinburgh determined how CoQ10 produces energy at the cellular level and in 1978 he was awarded the Nobel Prize for chemistry based on his discovery. Q10 normally could be found in Fish, Calf’s Liver (and other organ meats), Germ portion of whole grains in nature. <a href="#8">[8]</a></p> <p>CoQ10, also known as ubiquinone, is a necessary component of cell respiration and ATP production. Ubiquinone is a fat soluble substance used to form ubiquinol, the fully reduced form of ubiquinone and potent antioxidant. <a href="#8">[8]</a></p> <p><strong>Chemical Structure of CoQ10</strong>: The most common form in humans is Coenzyme Q10 (CoQ10 or ubiquinone-10). CoQ10 is a 1,4-benzoquinone, where the “Q” refers to the quinone chemical group, and “10” signifies the number of isoprenyl chemical subunits in its tail. (Ubiquinone Tail Variability: In natural ubiquinones, there can be from six to ten subunits in the tail. The specific variant, ubiquinone-10, is predominantly found in humans.)</p> <p align="center"> <img src="/images/2023/11/1600px-Ubiquinol.png" alt="ubiquinone" width="90%" height="auto"/> </p> <h4 id="mechanisms-of-action-2">Mechanisms of action</h4> <p>Role in Energy Production: CoQ10 is a family of fat-soluble substances, resembling vitamins, and is present in all respiring eukaryotic cells, primarily in the mitochondria.</p> <p>Mitochondrial Function: As a vital component of the electron transport chain, CoQ10 participates in aerobic cellular respiration, a process that generates energy in the form of ATP.</p> <p>Energy Generation: A substantial 95% of the human body’s energy is generated through aerobic cellular respiration, highlighting the significance of CoQ10.</p> <p>Organ-Specific Concentrations: Organs with high energy demands, such as the heart, liver, and kidney, exhibit the highest concentrations of CoQ10, emphasizing its critical role in meeting the energy requirements of these vital organs.</p> <p>The effect of Ubiquinol is much better than that of ordinary Q10 (ubiquinone), and currently the only supplier of Ubiquinol on the market is <strong>Kaneka</strong> from Japan. <a href="#8">[8]</a></p> <p>Moreover, CoQ10 can increase the production of key antioxidants such as <a href="https://en.wikipedia.org/wiki/Superoxide_dismutase">superoxide dismutase</a>, an enzyme capable of reducing vascular oxidative stress in hypertensive patients. <a href="#9">[9]</a> CoQ10 reduces levels of <a href="https://en.wikipedia.org/wiki/Lipid_peroxidation">lipid peroxidation</a> via the reduction of pro-oxidative compounds. <a href="#10">[10]</a> So peroxidation is a chain reaction commonly found in polyunsaturated fatty acids, and its products may be carcinogenic and mutagenic. Since lipids are components of cell membranes, lipid peroxidation may have disastrous consequences if it’s out of control inside body.</p> <h4 id="astaxanthin-">Astaxanthin <a name="Astaxanthin"></a></h4> <p>Astaxanthin (ASX) is a <a href="https://en.wikipedia.org/wiki/Xanthophyll">xanthophyll</a> carotenoid, chemically known as 3,3′-dihydroxyβ,β-carotene-4,4′-dione, It is a <a href="https://en.wikipedia.org/wiki/Lipid">lipid</a>-soluble pigment with red coloring properties. It was originally isolated from lobster by Kuhn in 1938. <a href="#11">[11]</a> ASX is primarily biosynthesised by various algae, bacteria and fungi and is consumed by marine animals, such as salmon, trout, crab, lobster and shrimp. <a href="#12">[12]</a></p> <p align="center"> <img src="/images/2023/11/Astaxanthin.svg.png" alt="astaxanthin" width="80%" height="auto"/> </p> <p>Haematococcus pluvialis, is reported to accumulate the highest levels of ASX in nature.</p> <p align="center"> <img src="/images/2023/11/Mikrofoto.de-Blutregenalgen_3.jpg" alt="mikrofoto" width="300" height="200"/> </p> <h4 id="mechanisms-of-action-3">Mechanisms of action</h4> <p>The skin comprises epidermis, dermis and hypodermis, which form the protectively outermost barrier against external environmental stresses such as repeated sun UV ray exposure. <a href="https://en.wikipedia.org/wiki/Ultraviolet">UV</a> radiation comprises three types: UVA(Long-wave UV, Passes largely through glass and clothing), UVB(Medium-wave UV, mostly absorbed by the ozone layer, Does not pass through ‘normal’ glass. but does pass through quartz glass, Causes other forms of skin cancer.) and UVC(Short-wave UV, germicidal UV, ionizing radiation at shorter wavelengths, completely absorbed by the ozone layer and atmosphere: hard UV..s very destructive to skin cells). UVC is filtered out by atmospheric ozone for the most part, while both UVA and UVB can cause a biological change in the skin. The overview could be found from the Figure <a href="#11">[11]</a> below.</p> <p align="center"> <img src="/images/2023/11/Screenshot 2023-11-26 at 12.41.17.png" alt="mikrofoto" width="80%" height="auto"/> </p> <p>The mechanism of action of Astaxanthin (ASX) involves its multifaceted impact on cellular and molecular processes, particularly in mitigating skin aging.</p> <ol> <li><strong>Antioxidant and Anti-Inflammatory Properties:</strong> <ul> <li>ASX acts as a potent antioxidant, capturing <a href="https://en.wikipedia.org/wiki/Singlet_oxygen">singlet oxygen</a> <a href="https://en.wikipedia.org/wiki/Radical_(chemistry)">radicals</a> in the <a href="https://en.wikipedia.org/wiki/Epidermis">epidermis</a> and <a href="https://en.wikipedia.org/wiki/Dermis">dermis</a>.</li> <li>This scavenging ability contributes to the restoration of skin elasticity and a reduction in wrinkle depth.</li> </ul> </li> <li><strong>Inhibition of Reactive Oxygen Species (ROS):</strong> <ul> <li>Excessive accumulation of ROS from repeated UV exposures and intrinsic aging can lead to inflammatory responses. ASX helps suppress the activation of ROS-producing enzymes and xanthine oxidase (an enzyme found in many species, including humans, and primarily functions in the catabolism of purine nucleic acids) in UV-irradiated cells.</li> </ul> </li> <li><strong>Regulation of Inflammatory Cytokines and MMPs:</strong> <ul> <li>ASX helps modulate inflammatory cytokines (e.g., IL-1, IL-6, IL-8, TNF-α) (same as resveratrol mentioned before) released due to UV exposure and intrinsic aging.</li> <li>This modulation helps inhibit the upregulation of <a href="https://en.wikipedia.org/wiki/Matrix_metalloproteinase">matrix metalloproteinases</a> (MMPs: MMPs, can degrade collagen and elastic fibers, leading to wrinkles and loss of skin elasticity.), including MMP-1, MMP-3, and MMP-9.</li> </ul> </li> <li><strong>Maintenance of Skin Barrier Integrity:</strong> <ul> <li>ASX supports skin barrier integrity by inhibiting excessive <a href="https://en.wikipedia.org/wiki/Corneocyte">corneocyte</a> desquamation, maintaining the epidermal barrier functions.</li> <li>It decreases plasma oxidation-related <a href="https://en.wikipedia.org/wiki/Malondialdehyde">malondialdehyde</a> (MDA) concentration, contributing to overall skin health.</li> </ul> </li> <li><strong>DNA Protection and Inflammation Reduction:</strong> <ul> <li>Dietary ASX supplementation reduces DNA oxidative damage biomarkers and lowers concentrations of inflammatory markers. <a href="#11">[11]</a></li> </ul> </li> </ol> <h3 id="grape-seed-extract-">Grape Seed Extract <a name="grape_seed"></a></h3> <p>Through different and various studies, it was proved that the <a href="https://en.wikipedia.org/wiki/Proanthocyanidin">proanthocyanidin</a> rich grape seed extract provides benefits against many diseases i.e. inflammation, cardiovascular disease, hypertension, diabetes, cancer, peptic ulcer, microbial infections, etc.</p> <p>The chemical composition of Grape Seed Extract (GSE) is rich and diverse, encompassing various components obtained through specific extraction processes. Grape seeds are manually separated from grapes, air-dried, and ground to a fine powder.The powdered grape seed is macerated in 70% ethanol, filtered, and the filtrate is dried to obtain powdered GSE. Dried grape seeds contain approximately 35% fiber, 29% extractable components, including phenolic compounds, proteins (11%), minerals (3%), and water (7%). <a href="#13">[13]</a></p> <h4 id="mechanisms-of-action-4">Mechanisms of action</h4> <p>The mechanisms of action of Grape Seed Extract (GSE) are diverse and involve a range of bioactive compounds present in the extract.</p> <ol> <li><strong>Polyphenols and Flavonoids, anti-oxidant:</strong> <ul> <li>GSE is an abundant source of polyphenols and flavonoids, known for their antioxidant properties and free radical scavenging abilities. The polyphenols in GSE act as effective free radical scavengers, protecting cells from damage caused by reactive oxygen species (ROS).</li> <li>Grape seed polyphenols exhibit higher antioxidant activity compared to well-known antioxidants such as vitamin C, vitamin E, and β-carotene.</li> </ul> </li> <li><strong>Enzymes with Dual Properties for Anti-Inflammatory:</strong> <ul> <li>GSE contains enzymes that not only exhibit antioxidant properties but also catalyze the release of histamine during inflammation and allergies.</li> </ul> </li> <li><strong>Fatty Acid Composition beneficial for CVD:</strong> <ul> <li>GSE’s fatty acid composition, particularly linoleic acid, is crucial for lipid metabolism.</li> <li>Grape seed oil, extracted from the seeds, contains a high amount of unsaturated fatty acids (85-90%), including α-linolenic acid (ω-3) and γ-linolenic acid (ω-6). <a href="#13">[13]</a> (These fatty acids are associated with reducing the risk of cardiovascular disease, cancer, hypertension, and autoimmune disorders.)</li> <li>The application of grape seed oil is linked to positive effects in reducing arteriosclerosis by lowering total blood cholesterol and LDL cholesterol. <a href="#13">[13]</a></li> </ul> </li> <li><strong>Dietary Fiber Content:</strong> <ul> <li>Grape seeds and peels contain a significant amount of dietary fiber, contributing to a lower risk of colon cancer, heart disease, diabetes, and obesity.</li> </ul> </li> </ol> <h2 id="enzyme-">Enzyme <a name="enzyme"></a></h2> <h4 id="serratiopeptidase-">Serratiopeptidase <a name="Serratiopeptidase"></a></h4> <p>Serratiopeptidase is a zinc containing <a href="https://en.wikipedia.org/wiki/Metalloproteinase#:~:text=A%20metalloproteinase%2C%20or%20metalloprotease%2C%20is,Identifiers">metalloprotease</a> of molecular weight 45–60 kDa. ($1Da = 1.66053906660(50) \times 10^{-27}kg$). It is originally obtained from <a href="https://en.wikipedia.org/wiki/Serratia_marcescens">Serratia marcescens</a> isolated from the intestine of the silkworm <a href="https://en.wikipedia.org/wiki/Bombyx_mori">Bombyx mori</a>. <a href="#14">[14]</a></p> <p>The graph below is Serratia marcescens:</p> <p align="center"> <img src="/images/2023/11/Screenshot 2023-12-03 at 21.55.16.png" alt="Serratia" width="50%" height="auto"/> </p> <p>While errapeptase and other proteolytic enzymes break down proteins by <a href="https://en.wikipedia.org/wiki/Hydrolysis">hydrolyzing</a> them, breaking the <a href="https://en.wikipedia.org/wiki/Peptide">peptide</a> bonds between amino acids (the building blocks of proteins). It is well documented that oral administration of proteolytic enzymes, including serrapeptase, is fully absorbed into the bloodstream and exerts effects throughout the body.</p> <h4 id="mechanisms-of-action-5">Mechanisms of action</h4> <ol> <li><strong>Reduce pain and inflammation:</strong> <ul> <li>Hydrolyses <a href="https://en.wikipedia.org/wiki/Bradykinin">bradykinin</a>, <a href="histamine">histamine</a>, and <a href="serotonin">serotonin</a> which helps to decrease pain and swelling and improve microcirculation, which in turn supports the wound healing process. <a href="#15">[15]</a></li> <li>Break down non-living protein tisse (<a href="https://en.wikipedia.org/wiki/Fibrin">fibrin</a> that can clog artness)</li> <li>Binds to the macroblobulin inside the blood plasma IT protects itself from immune system.</li> <li>Geo target, site specific</li> </ul> </li> <li><strong>Cardiovascular Disease:</strong> <ul> <li>Plaque: Fat cholesterol, fibre, other protein</li> <li>Break down non-living protein tisse (fibrin) -&gt; blood flow</li> </ul> </li> <li><strong>Ear Nose Throat Infections:</strong> <ul> <li>Geo target inflammation</li> </ul> </li> <li><strong>Antibiofilm</strong> <ul> <li>The anti-biofilm ability of serratiopeptidase is accredited to its capability of modulating the expression of adhesion molecules and reduces cell surface proteins of bacteria. <a href="#14">[14]</a></li> </ul> </li> </ol> <h2 id="minerals-vitamins--other-">Minerals, Vitamins &amp; Other <a name="other"></a></h2> <h3 id="vitamin-d-">Vitamin D <a name="vd"></a></h3> <p>Vitamin D is a lipid-soluble <a href="https://en.wikipedia.org/wiki/Prohormone">prohormone</a> that is vital for the maintenance of bone and muscle health by promoting the absorption and metabolism of calcium and <a href="https://en.wikipedia.org/wiki/Phosphate">phosphate</a>. <a href="#16">[16]</a> In addition to food sources such as fatty fish, eggs, fortified milk and cod liver oil, the human body uses ultraviolet B (UVB) radiation from sunlight to synthesise a significant portion of vitamin D requirements.</p> <p>The figure below is from <a href="https://www.youtube.com/watch?v=DP9RHWgNZ2U&amp;ab_channel=CatalystUniversity">Catalyst University</a>, which shows the process of biosynthesis of Vitamin D.</p> <p align="center"> <img src="/images/2023/11/Screenshot 2023-12-04 at 10.11.11.png" alt="vitd" width="90%" height="auto"/> </p> <p>Starting from the up-left of the graph above, the synthesis of vitamin D starts with the oxidation of cholesterol to <a href="https://en.wikipedia.org/wiki/7-Dehydrocholesterol">7-dehydrocholesterol</a> (7-DHC). (7-dehydrocholesterol is part of the metabolic pathway that controls the synthesis of cholesterol in human cells.) 7-DHC is then transported to the skin and is stored in the cell membranes of <a href="https://en.wikipedia.org/wiki/Keratinocyte">keratinocytes</a> and <a href="https://en.wikipedia.org/wiki/Fibroblast">fibroblasts</a> in the epidermis of skin. <a href="#16">[16]</a> In the skin, 7-DHC is <a href="https://en.wikipedia.org/wiki/Photodissociation">photolysed</a> by UVB (290–315 nm) to previtamin $D_3$, which is converted to <strong>inactive</strong> vitamin D (<a href="https://en.wikipedia.org/wiki/Cholecalciferol">Cholecalciferol</a>) by photolysis-mediated thermo-isomerisation. (<a href="https://chemistry.stackexchange.com/questions/107505/what-is-thermal-isomerization">What is thermal isomerization?</a>)</p> <p>To become biologically <strong>active</strong>, the vitamin D originating from dermal production or dietary sources undergoes a series of enzymatic conversions in the liver and kidney. Vitamin D is transported to the <strong>liver</strong> by vitamin D binding protein (DBP), together they are transported to the liver where the <a href="https://en.wikipedia.org/wiki/Cytochrome_P450">cytochrome P450</a> enzyme 25-hydroxylase ([CYP2R1]) adds a hydroxylgroup on carbon 25 to produce a major circulating form of vitamin D (25-(OH)D), aka <a href="https://en.wikipedia.org/wiki/Calcifediol">Calcifediol</a>, this process on the chemical level can be seen from the graph below:</p> <p align="center"> <img src="/images/2023/11/Reaction_-_cholecalciferol_to_calcidiol_(vertical).png" alt="CYP2R1" width="50%" height="auto"/> </p> <p>The Calcifediol then circulates in the bloodstream bound to DBP and it must be further hydroxylated at a different site in the <strong>kidney</strong> tubules to gain hormonal bioactivity. Hydroxylation at position $1\alpha$ by the mitochondrial cytochrome P450 enzyme 25-hydroxyvitamin D-$1\alpha$-hydroxylase (CYP27B1) of kidney converts Calcifediol to 1α,25-dihydroxyvitamin D (aka calcitriol, is the most active form of Vitamin D, ‘trio’ because it has 3 hydroxl groups), the <em>active form</em> of vitamin D that plays an essential role in mineral <a href="https://en.wikipedia.org/wiki/Homeostasis">homeostasis</a>.</p> <p align="center"> <img src="/images/2023/11/Screenshot 2023-12-04 at 22.33.00.png" alt="vitdgene" width="90%" height="auto"/> </p> <p>As the graph (from <a href="https://www.youtube.com/watch?v=DP9RHWgNZ2U&amp;ab_channel=CatalystUniversity">Catalyst University</a>) shown above, the receptor of Calcifediol is not existed in the plasma membrane since it is hydrophobic, instead it is inside nucleus. Calcifediol is bound with <a href="https://en.wikipedia.org/wiki/Vitamin_D_receptor">Vitamin D receptor</a> (VDR) VDR thens binds to DNA as VDR/VDR homodimers or VDR/RXR <a href="https://en.wikipedia.org/wiki/Protein_dimer">heterodimers</a> in order to regulate gene expression. <a href="#16">[16]</a>. The dimers subsequently recognise and bind with transcription factor IIB (TFIIB) to a <a href="https://en.wikipedia.org/wiki/VDRE">vitamin D response element</a> (VDRE) located in the promoter region of target genes and leads to transcriptional suppression or activation of vitamin D response genes.</p> <h4 id="mechanisms-of-action-6">Mechanisms of action</h4> <ol> <li><strong>Calcium Absorption &amp; Bone Health::</strong> <ul> <li>The association of low vitamin D and bone diseases such as rickets and osteoporosis is well known. <a href="#16">[16]</a></li> <li>Vitamin D is essential for the development and maintenance of healthy bones. It works in conjunction with calcium to support bone mineralization and prevent conditions like rickets in children and osteomalacia in adults.</li> </ul> </li> <li><strong>Immune System Modulation:</strong> <ul> <li>Vitamin D has immunomodulatory effects, influencing both the innate and adaptive immune systems. It plays a role in the regulation of immune cell functions and the production of antimicrobial peptides.</li> <li>The ability to combat infections, in particular, tuberculosis, viral infections and influenza. <a href="#17">[17]</a></li> </ul> </li> <li><strong>Anti-Inflammatory Properties:</strong> <ul> <li>Vitamin D has anti-inflammatory effects and may help modulate inflammatory responses. e.g. inflammatory bowel disease. <a href="#16">[16]</a></li> </ul> </li> </ol> <h3 id="vitamin-k-">Vitamin K <a name="vk2"></a></h3> <p>Vitamin K is a family of structurally similar, fat-soluble vitamers found in foods and marketed as dietary supplements. Vitamin K is important for the function of numerous proteins within the body, such as the <a href="https://en.wikipedia.org/wiki/Coagulation">coagulation factors</a>. <a href="#18">[18]</a></p> <p>Vitamin K exists naturally as vitamin K1 (<a href="https://en.wikipedia.org/wiki/Phytomenadione">phylloquinone</a>) and vitamin K2 (<a href="https://en.wikipedia.org/wiki/Vitamin_K2">menaquinone</a>(), MK-4 through MK-10). Vitamin K1 is mainly found in green leafy vegetables as well as olive oil and soyabean oil, whereas vitamin K2 (menaquinone) is found in small amounts in chicken, butter, egg yolks, cheese and fermented soyabeans (better known as natto).</p> <p>Vitamin K1 is involved in the activation of other clotting factors, including Factors VII, IX, and X. These factors play roles in the coagulation process, preventing excessive bleeding. The absorption rate of vitamin K1 from kale and spinach – foods identified as having a high vitamin K content – are on the order of <a href="https://en.wikipedia.org/wiki/Vitamin_K">4% to 17%</a> regardless of whether raw or cooked. Vitamin K2 is synthesized by bacteria in the human gut. Some of the vitamin K1 from dietary sources is converted into vitamin K2 by these gut bacteria.</p> <h4 id="mechanisms-of-action-7">Mechanisms of action</h4> <ol> <li><strong>Bone Health:</strong> <ul> <li><a href="https://en.wikipedia.org/wiki/Osteoporosis">Osteoporosis</a> is a leading contributor of fractures worldwide. Vitamin K is required for the gamma-carboxylation of osteocalcin in bone. A broad amount of data seems to indicate substantial potential for supplementary vitamin K. vitamin K1 on its own has already been shown to reduce fractures and cancer in a clinical trial. <a href="#19">[19]</a></li> </ul> </li> <li><strong>Vascular Calcufications:</strong> <ul> <li>Some vitamin-K dependent proteins are dependent on vitamin-K carboxylation for functionality. <a href="#20">[20]</a> Vitamin K acts as a cofactor in the conversion of <a href="https://en.wikipedia.org/wiki/Glutamate_(neurotransmitter)">glutamate</a> into <a href="https://en.wikipedia.org/wiki/Matrix_Gla_protein">Matrix Gla Protein</a> (MGP). MGP regulate many anticalcification and bone-forming processes in the body, which are dependent on vitamin K in order to be produced. <a href="#18">[18]</a></li> </ul> </li> </ol> <h3 id="magnesium-">Magnesium <a name="magnesium"></a></h3> <p>Electrolytes such as sodium, potassium, calcium, and magnesium are physiologically important due to their integral roles in metabolic and biologic processes. <a href="#21">[21]</a> Magnesium (${Mg}^{2+}$) possesses two <a href="https://en.wikipedia.org/wiki/Solvation_shell">hydration shells</a>, making its hydrated radius larger than that of other cations (${Na}^+$, $K^+$, and ${Ca}^{2+}$).</p> <p>The ‘hydrated radius’ is the effective size of the ion when surrounded by water molecules. In the case of magnesium, it has two layers or shells of water molecules around it. Because magnesium has two hydration shells, the presence of these water layers makes the effective size or radius of the hydrated magnesium ion larger compared to other cations (positively charged ions).</p> <p>Magnesium is an essential mineral which is a cofactor in over 300 enzymatic reactions for protein synthesis such as muscle contraction, nerve function, blood pressure and hormone binding. <a href="#22">[22]</a>. Magnesium is required for energy production, oxidative phosphorylation, and glycolysis. It contributes to the structural development of bone and is required for the synthesis of DNA, RNA, and the antioxidant glutathione. Magnesium also plays a role in the active transport of calcium and potassium ions across cell membranes, a process that is important to nerve impulse conduction, muscle contraction, and normal heart rhythm. <a href="#23">[23]</a></p> <p>As we discussed in the Vitamin D section, vitamin D can’t work without first being converted into a form your body can absorb. The level to which a vitamin or mineral can be absorbed is known as its “bioavailability.” Vitamin D’s bioavailability depends on magnesium. The enzymes (in the liver and kidneys) that enable vitamin D metabolism—converting it into its active form, calcitriol — can’t work without sufficient amounts of magnesium to draw upon.</p> <p>Early signs of magnesium deficiency include loss of appetite, nausea, vomiting, fatigue, and weakness. Therefore proper intake of magnesium from food or supplements is important. Magnesium supplements are available in a variety of forms. The following information comes from Dr. Jin W. Sung. ‘s YouTube Channel <a href="#23">[23]</a>.</p> <ol> <li><strong>Magnesium Citrate:</strong> <ul> <li>Absorption Rate: 30%</li> <li>Benefits: Good for constipation.</li> <li>Additional Info: More completely absorbed in the gut; considered more bioavailable.</li> </ul> </li> <li><strong>Magnesium Aspartate:</strong> <ul> <li>Absorption Rate: 42%</li> <li>Benefits: Excites neural transmitter activity.</li> <li>Additional Info: May enhance neural functions; higher absorption rate.</li> </ul> </li> <li><strong>Magnesium Glycinate:</strong> <ul> <li>Absorption Rate: 24%</li> <li>Benefits: Glycine is a precursor to GABA (inhibitory neurotransmitter), useful for calming effects.</li> <li>Additional Info: Supports <a href="https://en.wikipedia.org/wiki/%CE%93-Aminobutyric_acid">GABA</a> production; suitable for relaxation.</li> </ul> </li> <li><strong>Magnesium Chloride:</strong> <ul> <li>Absorption Rate: 20%</li> <li>Benefits: Suitable for individuals with low stomach acid issues.</li> <li>Additional Info: May be helpful for those with digestive concerns.</li> </ul> </li> <li><strong>Magnesium Sulfate:</strong> <ul> <li>Absorption Rate: 4%-7%</li> <li>Benefits: Limited information provided.</li> <li>Additional Info: Slightly lower absorption rate compared to other forms.</li> </ul> </li> <li><strong>Magnesium Oxide:</strong> <ul> <li>Absorption Rate: 4%</li> <li>Benefits: Limited information provided.</li> <li>Additional Info: One of the less soluble forms; lower absorption rate.</li> </ul> </li> <li><strong>Magnesium Theonate:</strong> <ul> <li>Absorption Rate: High</li> <li>Benefits: Suggested for sleep.</li> <li>Additional Info: May have specific benefits for sleep support.</li> </ul> </li> </ol> <h3 id="omega-3-fatty-acids-">Omega-3 Fatty Acids <a name="Omega-3"></a></h3> <p><strong>Fish Oil:</strong> Fish oil is a dietary supplement derived from the tissues of fatty fish, such as salmon, mackerel, and sardines. It is rich in omega-3 fatty acids, which are essential for various physiological functions in the body.</p> <p><strong>Omega-3 Fatty Acids:</strong> Omega-3 fatty acids are a type of <a href="https://en.wikipedia.org/wiki/Polyunsaturated_fat">polyunsaturated</a> fat that includes three main types: eicosapentaenoic acid (<a href="https://en.wikipedia.org/wiki/Eicosapentaenoic_acid">EPA</a>), docosahexaenoic acid (<a href="https://en.wikipedia.org/wiki/Docosahexaenoic_acid">DHA</a>), and alpha-linolenic acid (<a href="https://en.wikipedia.org/wiki/%CE%91-Linolenic_acid">ALA</a>). EPA and DHA are commonly found in fish oil, while ALA is present in plant-based sources like flaxseeds and walnuts.</p> <p><strong>Omega-6 Fatty Acids:</strong> Omega-6 fatty acids are another group of polyunsaturated fats that include linoleic acid (<a href="https://en.wikipedia.org/wiki/Linoleic_acid">LA</a>) and arachidonic acid (<a href="https://en.wikipedia.org/wiki/Arachidonic_acid">AA</a>). These fats are found in various vegetable oils and nuts.</p> <h3 id="mechanism-of-action">Mechanism of Action:</h3> <ol> <li><strong>Anti-Inflammatory Properties:</strong> <ul> <li><strong>Omega-3s:</strong> EPA and DHA from fish oil have anti-inflammatory effects. They can compete with omega-6 fatty acids for the same enzymes, leading to the production of less inflammatory molecules.</li> </ul> </li> <li><strong>Cardiovascular Health:</strong> <ul> <li><strong>Omega-3s:</strong> EPA and DHA contribute to cardiovascular health by reducing triglycerides, lowering blood pressure, and preventing the formation of blood clots. They also have a positive impact on heart rhythm.</li> </ul> </li> <li><strong>Brain Health:</strong> <ul> <li><strong>Omega-3s:</strong> DHA, in particular, is crucial for brain health and development. It makes up a significant portion of the brain’s structure and plays a role in cognitive function.</li> </ul> </li> <li><strong>Joint Health:</strong> <ul> <li><strong>Omega-3s:</strong> Fish oil’s anti-inflammatory properties may benefit joint health, reducing symptoms in conditions like rheumatoid arthritis.</li> </ul> </li> <li><strong>Immune System Support:</strong> <ul> <li><strong>Omega-3s:</strong> EPA and DHA support the immune system by promoting the activity of immune cells.</li> </ul> </li> <li><strong>Cellular Function:</strong> <ul> <li><strong>Balancing Omega-3 and Omega-6:</strong> Maintaining a balance between omega-3 and omega-6 fatty acids is essential. An imbalance, often seen in Western diets, may contribute to chronic inflammation and various health issues.</li> </ul> </li> <li><strong>Neuroprotective Effects:</strong> <ul> <li><strong>DHA:</strong> DHA has neuroprotective effects and is crucial for the development and function of the nervous system.</li> </ul> </li> <li><strong>ALA Conversion:</strong> <ul> <li><strong>ALA:</strong> ALA, found in plant-based sources, can be converted into EPA and DHA in the body, although the conversion rate is relatively low.</li> </ul> </li> </ol> <h2 id="suggest-doses-summary-and-concerns-">Suggest Doses, Summary and Concerns <a name="summary_and_concerns"></a></h2> <p>Supplements come in various forms, and understanding their safe levels is crucial. The following is a brief corresponding supplement suggested dosage based on Observed Safe Level (OSL) of human body.</p> <ol> <li><strong>NMN (Nicotinamide Mononucleotide):</strong> <ul> <li>NMN products, popular for anti-aging, are available in high doses (e.g., 500 mg).</li> <li>Safety is uncertain; rigorous scientific studies are essential for establishing long-term administration levels. <a href="#7">[7]</a></li> </ul> </li> <li><strong>Astaxanthin:</strong> <ul> <li>This fat-soluble carotenoid is best absorbed with fat-containing meals.</li> <li>Dosages range from 4 mg to 12 mg daily, with the ideal amount tailored to age, health, and individual conditions.</li> <li>Always follow product label dosages or consult a healthcare professional.</li> </ul> </li> <li><strong>Serratiopeptidase:</strong> <ul> <li>Recommended dosage is 60 mg/day on an empty stomach in the morning.</li> </ul> </li> <li><strong>Vitamin K:</strong> <ul> <li>Adequate intake (AI) is suggested at 90 μg/day for women and 120 μg/day for men. <a href="#18">[18]</a></li> </ul> </li> <li><strong>Vitamin D:</strong> <ul> <li>The recommended daily amount of vitamin D is 400 international units (IU) for children up to age 12 months, 600 IU for people ages 1 to 70 years, and 800 IU for people over 70 years.</li> </ul> </li> <li><strong>Magnesium:</strong> <ul> <li>The average requirement is 300–400 mg/day, varying based on factors like gender, age, and individual needs.</li> </ul> </li> </ol> <p>Understanding the motivation behind exploring supplements is essential. However, it’s equally important to approach these substances with caution. Many supplements listed here are best absorbed when taken with a fatty meal. This enhances their bioavailability, ensuring your body can make the most of their benefits.</p> <p>Remember, the decision to supplement should not be taken lightly. Always consult with a healthcare professional before introducing any new supplements into your meal. In such cases, seeking guidance from a doctor or checking a reliable drug interaction website (e.g. https://reference.medscape.com/drug-interactionchecker) is advisable to ensure compatibility and prevent any potential adverse effects.</p> <h2 id="useful-links">Useful links</h2> <ol> <li>Drug interation: https://reference.medscape.com/drug-interactionchecker</li> </ol> <h2 id="references">References</h2> <p><a id="1">[1]</a> Zhang, Li-Xue, Chang-Xing Li, Mohib Ullah Kakar, Muhammad Sajjad Khan, Pei-Feng Wu, Rai Muhammad Amir, Dong-Fang Dai, et al. ‘Resveratrol (RV): A Pharmacological Review and Call for Further Research’. Biomedicine &amp; Pharmacotherapy 143 (November 2021): 112164. https://doi.org/10.1016/j.biopha.2021.112164.</p> <p><a id="2">[2]</a> Mattison, Julie A., Mingyi Wang, Michel Bernier, Jing Zhang, Sung-Soo Park, Stuart Maudsley, Steven S. An, et al. ‘Resveratrol Prevents High Fat/Sucrose Diet-Induced Central Arterial Wall Inflammation and Stiffening in Nonhuman Primates’. Cell Metabolism 20, no. 1 (July 2014): 183–90. https://doi.org/10.1016/j.cmet.2014.04.018.</p> <p><a id="3">[3]</a> Marques, Francine Z., M. Andrea Markus, and Brian J. Morris. ‘Resveratrol: Cellular Actions of a Potent Natural Chemical That Confers a Diversity of Health Benefits’. The International Journal of Biochemistry &amp; Cell Biology 41, no. 11 (November 2009): 2125–28. https://doi.org/10.1016/j.biocel.2009.06.003.</p> <p><a id="4">[4]</a> Y. Bai, H. Yang, G. Zhang, L. Hu, Y. Lei, Y. Qin, Y. Yang, Q. Wang, R. Li, Q. Mao, Inhibitory effects of resveratrol on the adhesion, migration and invasion of human bladder cancer cells, Mol. Med. Rep. 15 (2) (2017) 885–889.</p> <p><a id="5">[5]</a> Shade C. The Science Behind NMN-A Stable, Reliable NAD+Activator and Anti-Aging Molecule. Integr Med (Encinitas). 2020 Feb;19(1):12-14. PMID: 32549859; PMCID: PMC7238909.</p> <p><a id="6">[6]</a> Schultz MB et al. Why NAD+ Declines during Aging: It’s Destroyed. Cell Metab. 2016 June 14; 23(6): 965–966</p> <p><a id="7">[7]</a> Nadeeshani, H., Li, J., Ying, T., Zhang, B., &amp; Lu, J. (2021). Nicotinamide mononucleotide (NMN) as an anti-aging health product – Promises and safety concerns. Journal of Advanced Research. doi:10.1016/j.jare.2021.08.003</p> <p><a id="8">[8]</a> Dyer, Andrew R. ‘CoQ10: A Literature Review’ 40, no. 1 (n.d.).</p> <p><a id="9">[9]</a> Kędziora-Kornatowska K, Czuczejko J, Motyl J, Szewczyk-Golec K, Kozakiewicz M, Pawluk H, Kędziora J, Błaszczak R, Banach M, Rysz J. Effects of coenzyme Q10 supplementation on activities of selected antioxidative enzymes and lipid peroxidation in hypertensive patients treated with indapamide. A pilot study. Arch Med Sci. 2010 Aug 30;6(4):513-8.</p> <p><a id="10">[10]</a> Cordero MD, Cano-García FJ, Alcocer-Gómez E, De Miguel M, Sánchez-Alcázar JA. Oxidative stress correlates with headache symptoms in fibromyalgia: coenzyme Q₁₀ effect on clinical improvement. PLoS One. 2012;7(4):e35677.</p> <p><a id="11">[11]</a> Zhou, Xiangyu, Qingming Cao, Caroline Orfila, Jian Zhao, and Lin Zhang. ‘Systematic Review and Meta-Analysis on the Effects of Astaxanthin on Human Skin Ageing’. Nutrients 13, no. 9 (24 August 2021): 2917. https://doi.org/10.3390/nu13092917.</p> <p><a id="12">[12]</a> Higuera-Ciapara, I.; Felix-Valenzuela, L.; Goycoolea, F. Astaxanthin: A review of its chemistry and applications. Crit. Rev. Food Sci. Nutr. 2006, 46, 185–196.</p> <p><a id="13">[13]</a> Gupta, Madhavi, Sanjay Dey, Daphisha Marbaniang, Paulami Pal, Subhabrata Ray, and Bhaskar Mazumder. ‘Grape Seed Extract: Having a Potential Health Benefits’. Journal of Food Science and Technology 57, no. 4 (April 2020): 1205–15. https://doi.org/10.1007/s13197-019-04113-w.</p> <p><a id="14">[14]</a> Jadhav, Swati B., Neha Shah, Ankit Rathi, Vic Rathi, and Abhijit Rathi. ‘Serratiopeptidase: Insights into the Therapeutic Applications’. Biotechnology Reports 28 (December 2020): e00544. https://doi.org/10.1016/j.btre.2020.e00544.</p> <p><a id="15">[15]</a> L. Desser, A. Rehberger, E. Kokron, W. Paukovits, Cytokine synthesis in human peripheral blood mononuclear cells after oral administration of polyenzyme preparations, Oncology. 50 (1993) 403–407.</p> <p><a id="16">[16]</a> Basit, S. ‘Vitamin D in Health and Disease: A Literature Review’. British Journal of Biomedical Science 70, no. 4 (1 January 2013): 161–72. https://doi.org/10.1080/09674845.2013.11669951.</p> <p><a id="17">[17]</a> Ginde AA, Mansbach JM, Camargo CA Jr. Association between serum 25-hydroxyvitamin D level and upper respiratory tract infection in the Third National Health and Nutrition Examination Survey. Arch Intern Med 2009; 169: 384–90.</p> <p><a id="18">[18]</a> DiNicolantonio, James J, Jaikrit Bhutani, and James H O’Keefe. ‘The Health Benefits of Vitamin K’. Open Heart 2, no. 1 (October 2015): e000300. https://doi.org/10.1136/openhrt-2015-000300.</p> <p><a id="19">[19]</a> Cockayne S, Adamson J, Lanham-New S, et al. Vitamin K and the prevention of fractures: systematic review and meta-analysis of randomized controlled trials. Arch Intern Med 2006;166:1256–61.</p> <p><a id="20">[20]</a> Berkner KL. The vitamin K-dependent carboxylase. Annu Rev Nutr 2005;25:127–49.</p> <p><a id="21">[21]</a> L.L. Yu, W.C. Davis, Y. Nuevo Ordonez, S.E. Long, Fast and accurate determination of K, Ca, and Mg in human serum by sector field ICP-MS, Anal. Bioanal. Chem. 405 (27) (2013) 8761–8768.</p> <p><a id="22">[22]</a> Author Dr. Jin W. Sung. “Magnesium—-Comprehensive Guide. Forms of magnesium, benefits, dosages, impact on Vitamin D.” YouTube, uploaded by Dr. Jin W. Sung, June 2023,https://www.youtube.com/watch?v=Z4ohSzChgII&amp;ab_channel=Dr.JinW.Sung</p> <p><a id="23">[23]</a> Rude RK. Magnesium. In: Ross AC, Caballero B, Cousins RJ, Tucker KL, Ziegler TR, eds. Modern Nutrition in Health and Disease. 11th ed. Baltimore, Mass: Lippincott Williams &amp; Wilkins; 2012:159-75.</p> <p><a id="24">[24]</a> Simopoulos, Ap. ‘Omega-3 Fatty Acids in Health and Disease and in Growth and Development’. The American Journal of Clinical Nutrition 54, no. 3 (September 1991): 438–63. https://doi.org/10.1093/ajcn/54.3.438.</p>]]></content><author><name></name></author><category term="general science"/><summary type="html"><![CDATA[Disclaimer Introduction: Motivaton of this blog Anti-aging Supplements Resveratrol NMN Ubiquinol Astaxanthin Grape Seed Extract Enzyme Serratiopeptidase Minerals, Vitamins &amp; Fatty Acids Vitamin D Vitamin K Magnesium Omega-3 Fatty Acids Suggest Doses, Summary and Concerns]]></summary></entry><entry><title type="html">Displaying External Posts on Your al-folio Blog</title><link href="https://zhengstar94.github.io//blog/2022/displaying-external-posts-on-your-al-folio-blog/" rel="alternate" type="text/html" title="Displaying External Posts on Your al-folio Blog"/><published>2022-04-23T23:20:09+00:00</published><updated>2022-04-23T23:20:09+00:00</updated><id>https://zhengstar94.github.io//blog/2022/displaying-external-posts-on-your-al-folio-blog</id><content type="html" xml:base="https://zhengstar94.github.io//blog/2022/displaying-external-posts-on-your-al-folio-blog/"><![CDATA[]]></content><author><name></name></author></entry><entry><title type="html">分布式系統接口如何避免表单的重复提交</title><link href="https://zhengstar94.github.io//blog/2022/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%B5%B1%E6%8E%A5%E5%8F%A3%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D%E8%A1%A8%E5%8D%95%E7%9A%84%E9%87%8D%E5%A4%8D%E6%8F%90%E4%BA%A4/" rel="alternate" type="text/html" title="分布式系統接口如何避免表单的重复提交"/><published>2022-02-06T00:00:00+00:00</published><updated>2022-02-06T00:00:00+00:00</updated><id>https://zhengstar94.github.io//blog/2022/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%B5%B1%E6%8E%A5%E5%8F%A3%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D%E8%A1%A8%E5%8D%95%E7%9A%84%E9%87%8D%E5%A4%8D%E6%8F%90%E4%BA%A4</id><content type="html" xml:base="https://zhengstar94.github.io//blog/2022/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%B5%B1%E6%8E%A5%E5%8F%A3%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D%E8%A1%A8%E5%8D%95%E7%9A%84%E9%87%8D%E5%A4%8D%E6%8F%90%E4%BA%A4/"><![CDATA[<h1 id="幂等性">幂等性</h1> <p><strong>效果：</strong>系统对某接口的多次请求，都应该返回同样的结果 <strong>目的：</strong>避免因为各种原因，重复请求导致的业务重复处理</p> <h2 id="场景案例">场景案例</h2> <ol> <li>客户端第一次请求后，网络异常导致收到请求执行逻辑但是没有返回给客户端，客户端的重新发起请求</li> <li>客户端迅速点击按钮提交，导致同一逻辑被多次发送到服务器</li> </ol> <ul> <li>对于查询：只读操作必然符合幂等性要求</li> <li>对于删除：重复删除不会造成数据紊乱，不过有些场景不喜欢出现目标不存在的提示</li> <li>对于新增与修改：<strong>新增需要避免重复插入，修改需要避免无效的重复修改</strong></li> </ul> <h2 id="幂等性的实现方式">幂等性的实现方式</h2> <p><strong>实现方法</strong> 客户端做某一请求的时候带上识别参数标志，服务端对此标识进行识别，重复请求则返回第一次结果即可。</p> <p>比如添加请求的表单里，在打开添加表单页面的时候，就生成一个AddId标识，这个AddId跟着表单一起提交到后台接口。</p> <p>后台接口根据这个AddId，服务端就可以进行缓存标记并进行过滤，缓存值可以是AddId作为缓存key，返回内容作为缓存Value，这样即使添加按钮被多次点下也可以识别出来。</p> <p>这个AddId什么时候更新呢？只有在保存成功并且清空表单之后，才变更这个AddId标识，从而实现新数据的表单提交</p>]]></content><author><name></name></author><category term="分布式"/><summary type="html"><![CDATA[幂等性 效果：系统对某接口的多次请求，都应该返回同样的结果 目的：避免因为各种原因，重复请求导致的业务重复处理]]></summary></entry><entry><title type="html">Zookeeper实现分布式锁</title><link href="https://zhengstar94.github.io//blog/2022/Zookeeper%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/" rel="alternate" type="text/html" title="Zookeeper实现分布式锁"/><published>2022-02-05T00:00:00+00:00</published><updated>2022-02-05T00:00:00+00:00</updated><id>https://zhengstar94.github.io//blog/2022/Zookeeper%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81</id><content type="html" xml:base="https://zhengstar94.github.io//blog/2022/Zookeeper%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/"><![CDATA[<h1 id="zookeeper">Zookeeper</h1> <h2 id="介绍zk">介绍zk</h2> <p>zk是一种提供配置管理、分布式协同以及命名的中心化服务</p> <p>zk的模型：zk包含一系列的节点，叫做znode，就好像文件系统一样每个znode表示一个目录，然后znode有一些特性</p> <ul> <li>有序节点：加入当前有一个父节点<code class="language-plaintext highlighter-rouge">/lock</code>，我们可以在父节点下面创建子节点 zookeeper提供了一个可选的有序特性，例如我们可以创建子节点“/lock/node-”并且指明有序，那么zookeeper在生成子节点时会根据当前的子节点数量自动添加整数序号</li> </ul> <p>也就是说，如果是第一个创建的子节点，那么生成的子节点为/lock/node-0000000000，下一个节点则为/lock/node-0000000001，依次类推。</p> <ul> <li>临时节点：客户端可以建立一个临时节点，在会话结束或者会话超时后，zk自动删除该节点</li> <li>事件监听：在读取数据时，我们可以同时对节点设置事件监听，当节点数据或结构变化时，zk会通知客户端 <ul> <li>节点创建</li> <li>节点删除</li> <li>节点数据修改</li> <li>子节点变更</li> </ul> </li> </ul> <h2 id="zk实现分布式锁的落地方案">zk实现分布式锁的落地方案</h2> <ol> <li>使用zk的临时节点和有序节点，每个线程获取锁就是在zk创建一个临时有序的节点，比如在/lock/目录下。</li> <li>创建节点成功后，获取/lock目录下的所有临时节点，再判断当前线程创建的节点是否是所有的节点的<strong>序号最小</strong>的节点</li> <li>如果当前线程创建的节点是所有节点序号最小的节点，则认为获取锁成功。</li> <li>如果当前线程创建的节点不是所有节点序号最小的节点，则对节点序号的前一个节点添加一个事件监听。比如当前线程获取到的节点序号为<code class="language-plaintext highlighter-rouge">/lock/003</code>,然后所有的节点列表为<code class="language-plaintext highlighter-rouge">[/lock/001,/lock/002,/lock/003]</code>,则对<code class="language-plaintext highlighter-rouge">/lock/002</code>这个节点添加一个事件监听器。</li> </ol> <p>如果锁匙放了，会唤醒下一个序号节点，然后重新执行第3步，判断是否自己的节点序号是最小。</p> <p>比如<code class="language-plaintext highlighter-rouge">/lock/001</code>释放了，<code class="language-plaintext highlighter-rouge">/lock/002</code>监听到事件，此时节点集合为<code class="language-plaintext highlighter-rouge">[/lock/002,/lock/003]</code>,则<code class="language-plaintext highlighter-rouge">/lock/002</code>为最小序号节点，获取到锁。</p> <p>整个过程如下：</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2022/02/image-8c34033b7b4d4c9893eba52500650bdf-480.webp 480w,/assets/img/2022/02/image-8c34033b7b4d4c9893eba52500650bdf-800.webp 800w,/assets/img/2022/02/image-8c34033b7b4d4c9893eba52500650bdf-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2022/02/image-8c34033b7b4d4c9893eba52500650bdf.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h2 id="redis分布式锁与zk锁优缺点对比">Redis分布式锁与zk锁优缺点对比</h2> <h3 id="redis">Redis：</h3> <p><strong>优点</strong></p> <ul> <li>性能高，可以支撑高并发的获取、释放锁操作。</li> </ul> <p><strong>缺点</strong></p> <ul> <li> <p>它获取锁的方式简单粗暴，获取不到锁直接不断尝试获取锁，比较消耗性能。</p> </li> <li> <p>另外来说的话，redis的设计定位决定了它的数据并不是强一致性的，在某些极端情况下，可能会出现问题。锁的模型不够健壮</p> </li> <li> <p>即便使用redlock算法来实现，在某些复杂场景下，也无法保证其实现100%没有问题，关于redlock的讨论可以看How to do distributed locking</p> </li> </ul> <h3 id="zk">ZK</h3> <p><strong>优点</strong></p> <ul> <li> <p>zookeeper天生设计定位就是分布式协调，强一致性。锁的模型健壮、简单易用、适合做分布式锁。</p> </li> <li> <p>如果获取不到锁，只需要添加一个监听器就可以了，不用一直轮询，性能消耗较小。</p> </li> </ul> <p><strong>缺点</strong></p> <ul> <li>如果有较多的客户端频繁的申请加锁、释放锁，对于zk集群的压力会比较大。</li> </ul>]]></content><author><name></name></author><category term="分布式"/><summary type="html"><![CDATA[Zookeeper]]></summary></entry><entry><title type="html">TCC实例</title><link href="https://zhengstar94.github.io//blog/2022/TCC%E5%AE%9E%E4%BE%8B/" rel="alternate" type="text/html" title="TCC实例"/><published>2022-02-04T00:00:00+00:00</published><updated>2022-02-04T00:00:00+00:00</updated><id>https://zhengstar94.github.io//blog/2022/TCC%E5%AE%9E%E4%BE%8B</id><content type="html" xml:base="https://zhengstar94.github.io//blog/2022/TCC%E5%AE%9E%E4%BE%8B/"><![CDATA[<h1 id="搭建eureka注册中心">搭建Eureka注册中心</h1> <ul> <li>第一步搭建SpringBoot环境[父级项目pom文件]</li> </ul> <div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;parent&gt;</span>
  <span class="nt">&lt;groupId&gt;</span>org. springframework.boots<span class="nt">&lt;/groupId&gt;</span>
  <span class="nt">&lt;artifactId&gt;</span>spring-boot-starter-parents<span class="nt">&lt;/artifactIds&gt;</span>
  <span class="nt">&lt;version&gt;</span>2.1.1.RELEASE<span class="nt">&lt;/version&gt;</span>
<span class="nt">&lt;/parent&gt;</span>
</code></pre></div></div> <ul> <li>第二步搭建Springcloud环境[父级项目pom文件]</li> </ul> <div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;dependencyManagement&gt;</span>
 <span class="nt">&lt;dependencies&gt;</span>
  <span class="nt">&lt;dependency&gt;</span>
   <span class="nt">&lt;groupId&gt;</span>org.springframework.clouds/aroupId&gt;
   <span class="nt">&lt;artifactId&gt;</span>spring-cloud-dependenciess/artifactId&gt;
   <span class="nt">&lt;version&gt;</span>Greenwich.SR3s/version&gt;
   <span class="nt">&lt;type&gt;</span>pom<span class="nt">&lt;/type&gt;</span>
   <span class="nt">&lt;scope&gt;</span>imports/scope&gt;
  <span class="nt">&lt;/dependency&gt;</span>
 <span class="err">&lt;</span>/dependenciesx
<span class="nt">&lt;/dependencyManagement&gt;</span>
</code></pre></div></div> <ul> <li>第三步添加SpringBoot依赖、 Eureka Server依赖[Eureka项目pom文件]</li> </ul> <div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;dependency&gt;</span>
   <span class="nt">&lt;groupId&gt;</span>org.springframework.boots/groupId&gt;
   <span class="nt">&lt;artifactId&gt;</span>spring-boot-starter-webs/artifactId&gt;
<span class="nt">&lt;/dependency&gt;</span>
<span class="nt">&lt;dependency&gt;</span>
   <span class="nt">&lt;groupId&gt;</span>org. springframework.cloud<span class="nt">&lt;/groupId&gt;</span>
   <span class="nt">&lt;artifactId&gt;</span>spring-cloud-starter-netflix-eureka-server<span class="nt">&lt;/artifactId&gt;</span>
<span class="nt">&lt;/dependency&gt;</span>
</code></pre></div></div> <ul> <li>第四步创建SpringBoot主启动类、使用<code class="language-plaintext highlighter-rouge">@EnableEurekaServer</code>注解</li> </ul> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@SpringBootApplication</span>
<span class="c1">//Eureka server 项目</span>
<span class="nd">@EnableEurekaserver</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">EurekaServerApp</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">Stringl</span><span class="o">]</span> <span class="n">args</span><span class="o">)</span> <span class="o">(</span> <span class="nc">SpringApplication</span><span class="o">.</span> <span class="nf">run</span> <span class="o">(</span><span class="nc">EurekaServerApp</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div> <ul> <li>第五步添加application.yml配置文件,配置eureka服务端</li> </ul> <div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#微服务的名称</span>
<span class="na">spring.application.name</span><span class="pi">:</span> <span class="s">fencai-vip-eureka-single</span>
<span class="c1">#微服务的服务端口</span>
<span class="na">server.port</span><span class="pi">:</span> <span class="m">8760</span>

<span class="na">eureka</span><span class="pi">:</span>
<span class="err">	</span><span class="na">server</span><span class="pi">:</span>
<span class="err">		</span><span class="na">enable-self-preservation</span><span class="pi">:</span> <span class="kc">false</span>
<span class="na">	instance</span><span class="pi">:</span>
<span class="err">	</span><span class="na">client</span><span class="pi">:</span>
<span class="err">		</span><span class="na">registerWithEureka</span><span class="pi">:</span> <span class="kc">false</span>
<span class="na">		fetchRedistry</span><span class="pi">:</span> <span class="kc">false</span>
<span class="na">		serviceurl</span><span class="pi">:</span>
<span class="err">			</span><span class="na">defaultzone</span><span class="pi">:</span> <span class="s">http://localhost:8769/eureka/</span>
</code></pre></div></div> <p>第六步启动项目,浏览器访问http://1ocalhost: 8760/</p> <h1 id="tcc转账项目数据库实体创建">TCC转账项目数据库实体创建</h1> <h2 id="创建tcc数据库">创建tcc数据库</h2> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">CREATE</span> <span class="k">DATABASE</span> <span class="n">t</span><span class="err">é</span><span class="k">c</span> <span class="k">DEFAULT</span> <span class="nb">CHARACTER</span> <span class="k">SET</span> <span class="n">utf8</span><span class="p">;</span>
</code></pre></div></div> <h2 id="创建扣钱数据库加钱数据库">创建扣钱数据库、加钱数据库</h2> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">CREATE</span> <span class="k">DATABASE</span> <span class="n">account_from</span> <span class="k">DEFAULT</span> <span class="nb">CHARACTER</span> <span class="k">SET</span> <span class="n">utf8</span><span class="p">;</span> 
<span class="k">CREATE</span> <span class="k">DATABASE</span> <span class="n">account_to</span> <span class="k">DEFAULT</span> <span class="nb">CHARACTER</span> <span class="k">SET</span> <span class="n">utf8</span><span class="p">;</span>
</code></pre></div></div> <h2 id="账户实体">账户实体</h2> <p>|字段编码|字段类型|字段名称| |——-|——-|——-| |id|bigint|主键| |name|varchar(256)|用户名称| |balance|decimal(20,2)|账户余额|</p> <h2 id="项目初始化sql">项目初始化sql</h2> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">-------------------------------------------------</span>
<span class="k">CREATE</span> <span class="k">DATABASE</span> <span class="n">tcc</span> <span class="k">DEFAULT</span> <span class="nb">CHARACTER</span> <span class="k">SET</span> <span class="n">utf8</span><span class="p">;</span>

<span class="c1">-------------------------------------------------</span>
<span class="k">CREATE</span> <span class="k">DATABASE</span> <span class="n">account_from</span> <span class="k">DEFAULT</span> <span class="nb">CHARACTER</span> <span class="k">SET</span> <span class="n">utf8</span><span class="p">;</span>
<span class="n">USE</span> <span class="n">account_from</span>
<span class="k">CREATE</span> <span class="k">TABLE</span> <span class="s1">'account'</span> <span class="p">(</span>
 <span class="s1">'id'</span> <span class="nb">bigint</span> <span class="p">(</span><span class="mi">20</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span> <span class="n">AUTO</span><span class="o">-</span><span class="k">INCREMENT</span> <span class="k">COMMENT</span> <span class="s1">'物理主键'</span><span class="p">,</span>
 <span class="s1">'name'</span> <span class="nb">varchar</span> <span class="p">(</span><span class="mi">256</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span> <span class="k">DEFAULT</span> <span class="s1">''</span> <span class="k">COMMENT</span> <span class="s1">'用户名称'</span><span class="p">,</span>
 <span class="s1">'balance decimal(20,2) NOT NULL DEFAULT '</span><span class="mi">0</span><span class="p">.</span><span class="mi">0</span><span class="s1">''</span> <span class="k">COMMENT</span> <span class="s1">'账户余额'</span><span class="p">,</span>
 <span class="k">PRIMARY</span> <span class="k">KEY</span> <span class="p">(</span><span class="s1">'id'</span><span class="p">)</span>
<span class="p">);</span>

<span class="k">SET</span> <span class="n">SQL_SAFE_UPDATES</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
<span class="k">delete</span> <span class="k">from</span> <span class="n">account_from</span><span class="p">.</span><span class="n">account</span><span class="p">;</span>
<span class="k">insert</span> <span class="k">into</span> <span class="n">account_from</span><span class="p">.</span> <span class="n">account</span> <span class="p">(</span><span class="n">id</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">balance</span><span class="p">)</span> <span class="k">values</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="s1">'张三'</span><span class="p">,</span><span class="mi">100</span><span class="p">);</span> 
<span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">account_from</span><span class="p">.</span> <span class="n">account</span><span class="p">;</span>

<span class="c1">-------------------------------------------------</span>

<span class="k">CREATE</span> <span class="k">DATABASE</span> <span class="n">account_to</span> <span class="k">DEFAULT</span> <span class="nb">CHARACTER</span> <span class="k">SET</span> <span class="n">utf8</span><span class="p">;</span>
<span class="n">USE</span> <span class="n">account_to</span><span class="p">:</span>
<span class="k">CREATE</span> <span class="k">TABLE</span> <span class="s1">'account'</span> <span class="p">(</span>
	<span class="s1">'id'</span> <span class="nb">bigint</span> <span class="p">(</span><span class="mi">20</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span> <span class="n">AUTO</span><span class="o">-</span><span class="k">INCREMENT</span> <span class="k">COMMENT</span> <span class="s1">'物理主键'</span><span class="p">,</span>
	<span class="s1">'name'</span> <span class="nb">varchar</span> <span class="p">(</span><span class="mi">256</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span> <span class="k">DEFAULT</span> <span class="s1">''</span> <span class="k">COMMENT</span> <span class="s1">'用户名称'</span><span class="p">,</span>
	<span class="s1">'balance'</span> <span class="nb">decimal</span> <span class="p">(</span><span class="mi">20</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span> <span class="k">DEFAULT</span> <span class="s1">'0.00'</span> <span class="k">COMMENT</span> <span class="s1">'账户余額'</span><span class="p">,</span>
<span class="k">PRIMARY</span> <span class="k">KEY</span> <span class="p">(</span><span class="s1">'id'</span><span class="p">)</span>
<span class="p">);</span>

<span class="k">SET</span> <span class="k">SQL</span> <span class="n">SAFE_UPDATES</span><span class="o">-</span><span class="mi">8</span><span class="p">;</span>
<span class="k">delete</span> <span class="k">from</span> <span class="n">account_to</span><span class="p">.</span><span class="n">account</span><span class="p">;</span>
<span class="k">insert</span> <span class="k">into</span> <span class="n">account</span> <span class="k">to</span><span class="p">.</span> <span class="n">account</span><span class="p">(</span><span class="n">id</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">balance</span><span class="p">)</span> <span class="k">values</span><span class="p">(</span><span class="mi">10001</span><span class="p">,</span><span class="s1">'四.,180) ; 
SELECT * FROM account_to.account;

</span></code></pre></div></div> <h1 id="加钱服务和扣钱服务的mybatis集成">加钱服务和扣钱服务的MyBatis集成</h1> <ul> <li>第一步，添加Mybatis项目依赖</li> </ul> <div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;dependency&gt;</span>
	<span class="nt">&lt;groupId&gt;</span>orq.mybatis.spring.boot<span class="nt">&lt;/groupId&gt;</span>
	<span class="nt">&lt;artifactId&gt;</span>mybatis-spring-boot-starters<span class="nt">&lt;/artifactId&gt;</span>
	<span class="nt">&lt;version&gt;</span>1.2.8<span class="nt">&lt;/version&gt;</span>
<span class="nt">&lt;/dependency&gt;</span>
</code></pre></div></div> <ul> <li>第二步，添加MySQL驱动依赖</li> </ul> <div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- MYSQL --&gt;</span>
<span class="nt">&lt;dependency&gt;</span>
	<span class="nt">&lt;groupId&gt;</span>mysql<span class="nt">&lt;/groupId&gt;</span>
	<span class="nt">&lt;artifactId&gt;</span>mysql-connector-java<span class="nt">&lt;/artifactId&gt;</span> 
<span class="nt">&lt;/dependency&gt;</span>
</code></pre></div></div> <ul> <li>第三步，application.yaml文件配置数据库连接池</li> </ul> <div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 驱动</span>
<span class="na">spring.datasource.driver-class-name</span><span class="pi">:</span> <span class="s">com.mysql.jdbc.Driver</span>
<span class="c1"># 数据库的地址(account_to与account_from)</span>
<span class="na">spring.datasource.url</span><span class="pi">:</span> <span class="s">jdbc:mysql://192.168.8.248:3386/account_to?</span>
<span class="s">characterEncoding-UTF-8</span>

<span class="na">spring.datasource.username</span><span class="pi">:</span> <span class="s">root</span>
<span class="na">spring.datasource.password</span><span class="pi">:</span> <span class="s">123456</span> 

<span class="c1"># 映射使用驼峰规则</span>
<span class="na">mybatis.configuration.map-underscore-to-camel-case</span><span class="pi">:</span> <span class="kc">true</span>
<span class="na">mybatis.configuration.use-generated-keys</span><span class="pi">:</span> <span class="kc">true</span>
</code></pre></div></div> <ul> <li> <p>第四步创建mapper接口,使用<code class="language-plaintext highlighter-rouge">@Update</code>注解 @Repository public interface AccountMapper { @update(“update account ket balance = balance + #(balance) where id=#(id)”) Long update(Account account); }</p> </li> <li> <p>第五步SpringBoot项目主启动类使用<code class="language-plaintext highlighter-rouge">@MapperScan</code>注解</p> </li> </ul> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@SpringBootApplication</span>
<span class="c1">//扫描mapper包的路径</span>
<span class="nd">@MapperScan</span><span class="o">(</span><span class="s">"com.fencaibc.himly.account.to.mapper"</span><span class="o">)</span>
<span class="nd">@EnableEurekaclient</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">AccountToApp</span><span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="nc">ApplicationContext</span> <span class="n">context</span> <span class="o">=</span> <span class="nc">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="nc">AccountToApp</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div> <h1 id="扣钱服务集成feign">扣钱服务集成Feign</h1> <ul> <li>第一步加钱服务添加Restful Api接口</li> </ul> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//加钱的API Restful</span>
<span class="nd">@RequestMapping</span><span class="o">(</span><span class="s">"/account/{id)/{transMoney}"</span><span class="o">)</span> 
<span class="kd">public</span> <span class="nc">String</span> <span class="nf">account</span><span class="o">(</span><span class="nd">@PathVariable</span><span class="o">(</span><span class="s">"id) Long id, @PathVariable( "</span><span class="n">transMoney</span><span class="s">") BigDecimal transMoney)
 	Account account = new Account();
 	account.setId(id);
 	account.setBalance(transMoney);
 	accountService.update(account):
 	return "</span><span class="kc">true</span><span class="err">"</span><span class="o">:</span>
<span class="o">}</span>
</code></pre></div></div> <ul> <li>第二步添加Feign项目依赖</li> </ul> <div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;dependency&gt;</span>
	<span class="nt">&lt;groupId&gt;</span>org. springframework.clouds/groupId&gt;
	<span class="nt">&lt;artifactId&gt;</span>spring-cloud-starter-openfeigns/artifactId&gt; <span class="nt">&lt;/dependency&gt;</span>
</code></pre></div></div> <ul> <li>第三步使用Feign接口调用<code class="language-plaintext highlighter-rouge">加钱服务Restful Api</code></li> </ul> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//value = 加钱的微服务名称，也是在eureka注册中心里的微服务的名称</span>
<span class="nd">@Feignclient</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">"account-to"</span><span class="o">)</span>
<span class="kd">public</span> <span class="kd">interface</span> <span class="nc">Accountclient</span><span class="o">{</span>
	<span class="nd">@RequestMapping</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span><span class="s">"/account/(id)/(transMoney)"</span><span class="o">)</span> <span class="nc">String</span> <span class="nf">account</span><span class="o">(</span><span class="nd">@PathVariable</span><span class="o">(</span><span class="s">"id"</span><span class="o">)</span> <span class="nc">Long</span> <span class="n">id</span><span class="o">,</span><span class="nd">@PathVariable</span><span class="o">(</span><span class="s">"transMoney"</span><span class="o">)</span> <span class="nc">BigDecimal</span> <span class="n">transMoney</span><span class="o">);</span>
<span class="o">}</span>
</code></pre></div></div> <ul> <li>第四步，Springboot主启动类中使用<code class="language-plaintext highlighter-rouge">@EnableFeignclients</code></li> </ul> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@SpringBootApplication</span>
<span class="nd">@EnableFeignclients</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">AccountFromApp</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">Stringl</span><span class="o">]</span> <span class="n">args</span><span class="o">)</span> <span class="nc">SpringApplicarion</span> <span class="nf">run</span><span class="o">(</span><span class="nc">AccountFromApp</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>
	<span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div> <h1 id="加钱服务集成himly">【加钱】服务集成Himly</h1> <ul> <li>第一步添加Himly项目依赖</li> </ul> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="n">dependency</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="n">groupId</span><span class="o">&gt;</span><span class="n">org</span><span class="o">.</span><span class="na">dromaras</span><span class="o">/</span><span class="n">groupIds</span>
<span class="o">&lt;</span><span class="n">artifactId</span><span class="o">&gt;</span><span class="n">hmily</span><span class="o">-</span><span class="n">spring</span><span class="o">-</span><span class="n">boot</span><span class="o">-</span><span class="n">starter</span><span class="o">-</span><span class="n">springclouds</span><span class="o">/</span><span class="n">artifactId</span>
<span class="o">&lt;</span><span class="n">version2</span><span class="o">.</span><span class="mi">8</span><span class="o">,</span><span class="mi">5</span><span class="o">-</span><span class="nc">RELEASEs</span><span class="o">/</span><span class="n">version</span><span class="err">»</span>
<span class="o">&lt;/</span><span class="n">dependency</span><span class="o">&gt;</span>
</code></pre></div></div> <ul> <li>第二步Springboot application.yml文件配置Himly</li> </ul> <div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># serializer :这里我推荐使用是kroy.当然hmily也支持hessian, protostuff, jdk.在我们测试中表现为: kroy&gt;hessian-protostuff&gt;idk</span>
<span class="c1"># recoverDelayTime :定时任务延迟时间(单位是秒,默认128),这个参数只是要大于你的rpc调用的超时时间设置。</span>
<span class="c1"># retryMax :最大重复次数,默认3次,当你的服务down机,定时任务会执行retryMax次数去执行你的cancel还是confrim </span>
<span class="c1"># bufferSize: disruptor的bufferSize,当高并发的时候,可以调大。注意是2n次方</span>
<span class="c1"># started:注意在是发起方的时候,把此属性设置为true,参与方为false。(重要)</span>
<span class="c1"># asyncThreads异步执行confirm和cancel线程池线程的大小,高并发的时候请调大</span>
<span class="c1"># 按下来是最重要的事务日志的存储在我们的压测中,推荐使用mongo.表现为mongodb&gt;redis集群&gt;mysql&gt;zookeeper</span>

<span class="na">org</span><span class="pi">:</span>
<span class="err">	</span><span class="na">dromara</span><span class="pi">:</span>
<span class="err">		</span><span class="na">hmily</span><span class="pi">:</span>
<span class="err">			</span><span class="na">serializer</span><span class="pi">:</span> <span class="s">kryo</span>
<span class="na">			recoverDelayTime</span><span class="pi">:</span> <span class="m">128</span>
<span class="err">			</span><span class="na">retryMax</span><span class="pi">:</span> <span class="m">38</span>
<span class="err">			</span><span class="na">scheduledDelay</span><span class="pi">:</span> <span class="m">128</span>
<span class="err">			</span><span class="na">scheduledThreadMax</span><span class="pi">:</span> <span class="m">18</span>
<span class="err">			</span><span class="na">repositorySupport</span><span class="pi">:</span> <span class="s">db</span>
<span class="na">			started</span><span class="pi">:</span> <span class="kc">false</span> <span class="c1">#参与方为true</span>
<span class="err">			</span><span class="na">hmilyDbConfig</span><span class="pi">:</span>
<span class="err">				</span><span class="na">driverClassName</span><span class="pi">:</span> <span class="s">com.mysql.jdbc.Driver</span>
<span class="na">				url</span><span class="pi">:</span> <span class="s">jdbc:mysq1://192.168.8.248:3386/tcc？useUnicode=true&amp;characterEncoding=utf8</span>
<span class="na">				username</span><span class="pi">:</span> <span class="s">root</span>
<span class="na">				password</span><span class="pi">:</span> <span class="m">123456</span>
</code></pre></div></div> <ul> <li>第三步编写Himly TCC三大方法</li> </ul> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Try方法要有@Hmily</span>
<span class="nd">@Hmily</span> <span class="o">(</span><span class="n">confirmMethod</span> <span class="o">=</span><span class="s">"confirmMethod"</span><span class="o">,</span> <span class="n">cancelMethod</span> <span class="o">=</span><span class="s">"cancelMethod"</span><span class="o">)</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">tryMethod</span><span class="o">(</span><span class="nc">Account</span> <span class="n">account</span><span class="o">){</span>
	<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printin</span><span class="o">(</span><span class="s">"入账开始"</span><span class="o">);</span>
<span class="o">}</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">confirmMethod</span> <span class="o">(</span><span class="nc">Account</span> <span class="n">account</span><span class="o">){</span>
	<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printin</span><span class="o">(</span><span class="s">"入账确认"</span><span class="o">);</span>
	<span class="n">accountMapper</span><span class="o">.</span><span class="na">update</span> <span class="o">(</span><span class="n">account</span><span class="o">);</span>
<span class="o">}</span>

<span class="kd">public</span> <span class="kt">void</span> <span class="nf">cancelMethod</span><span class="o">(</span><span class="nc">Account</span> <span class="n">account</span><span class="o">)</span> <span class="o">{</span>
	<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printin</span><span class="o">(</span><span class="err">"</span><span class="n">入账取消</span> <span class="n">空操作</span><span class="o">);</span>
<span class="o">}</span>
</code></pre></div></div> <h1 id="扣钱服务集成himly">【扣钱】服务集成Himly</h1> <ul> <li>第一步添加Himly项目依赖</li> </ul> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="n">dependency</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="n">groupId</span><span class="o">&gt;</span><span class="n">org</span><span class="o">.</span><span class="na">dromaras</span><span class="o">/</span><span class="n">groupIds</span>
<span class="o">&lt;</span><span class="n">artifactId</span><span class="o">&gt;</span><span class="n">hmily</span><span class="o">-</span><span class="n">spring</span><span class="o">-</span><span class="n">boot</span><span class="o">-</span><span class="n">starter</span><span class="o">-</span><span class="n">springclouds</span><span class="o">/</span><span class="n">artifactId</span>
<span class="o">&lt;</span><span class="n">version2</span><span class="o">.</span><span class="mi">8</span><span class="o">,</span><span class="mi">5</span><span class="o">-</span><span class="nc">RELEASEs</span><span class="o">/</span><span class="n">version</span><span class="err">»</span>
<span class="o">&lt;/</span><span class="n">dependency</span><span class="o">&gt;</span>
</code></pre></div></div> <ul> <li>第二步Springboot application.yml文件配置Himly</li> </ul> <div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># serializer :这里我推荐使用是kroy.当然hmily也支持hessian, protostuff, jdk.在我们测试中表现为: kroy&gt;hessian-protostuff&gt;idk</span>
<span class="c1"># recoverDelayTime :定时任务延迟时间(单位是秒,默认128),这个参数只是要大于你的rpc调用的超时时间设置。</span>
<span class="c1"># retryMax :最大重复次数,默认3次,当你的服务down机,定时任务会执行retryMax次数去执行你的cancel还是confrim </span>
<span class="c1"># bufferSize: disruptor的bufferSize,当高并发的时候,可以调大。注意是2n次方</span>
<span class="c1"># started:注意在是发起方的时候,把此属性设置为true,参与方为false。(重要)</span>
<span class="c1"># asyncThreads异步执行confirm和cancel线程池线程的大小,高并发的时候请调大</span>
<span class="c1"># 按下来是最重要的事务日志的存储在我们的压测中,推荐使用mongo.表现为mongodb&gt;redis集群&gt;mysql&gt;zookeeper</span>

<span class="na">org</span><span class="pi">:</span>
<span class="err">	</span><span class="na">dromara</span><span class="pi">:</span>
<span class="err">		</span><span class="na">hmily</span><span class="pi">:</span>
<span class="err">			</span><span class="na">serializer</span><span class="pi">:</span> <span class="s">kryo</span>
<span class="na">			recoverDelayTime</span><span class="pi">:</span> <span class="m">128</span>
<span class="err">			</span><span class="na">retryMax</span><span class="pi">:</span> <span class="m">38</span>
<span class="err">			</span><span class="na">scheduledDelay</span><span class="pi">:</span> <span class="m">128</span>
<span class="err">			</span><span class="na">scheduledThreadMax</span><span class="pi">:</span> <span class="m">18</span>
<span class="err">			</span><span class="na">repositorySupport</span><span class="pi">:</span> <span class="s">db</span>
<span class="na">			started</span><span class="pi">:</span> <span class="kc">true</span> <span class="c1">#发起方为true</span>
<span class="err">			</span><span class="na">hmilyDbConfig</span><span class="pi">:</span>
<span class="err">				</span><span class="na">driverClassName</span><span class="pi">:</span> <span class="s">com.mysql.jdbc.Driver</span>
<span class="na">				url</span><span class="pi">:</span> <span class="s">jdbc:mysq1://192.168.8.248:3386/tcc？useUnicode=true&amp;characterEncoding=utf8</span>
<span class="na">				username</span><span class="pi">:</span> <span class="s">root</span>
<span class="na">				password</span><span class="pi">:</span> <span class="m">123456</span>
</code></pre></div></div> <ul> <li>第三步编写Himly TCC三大方法</li> </ul> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//@Hmily修饰的非抽象方法一定是try方法</span>
<span class="nd">@Hmily</span><span class="o">(</span><span class="n">confirmMethod</span> <span class="o">=</span> <span class="s">"confirmUpdate"</span><span class="o">,</span> <span class="n">cancelMethod</span> <span class="o">=</span> <span class="s">"cancelUpdate"</span><span class="o">)</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">update</span><span class="o">(</span><span class="nc">Long</span> <span class="n">id</span><span class="o">,</span> <span class="nc">BigDecimal</span> <span class="n">transMoney</span><span class="o">,</span> <span class="nc">Long</span> <span class="n">toId</span><span class="o">)</span> <span class="o">{</span><span class="c1">// try </span>
	<span class="nc">Account</span> <span class="n">account</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Account</span><span class="o">();</span>
	<span class="n">account</span><span class="o">.</span><span class="na">setId</span><span class="o">(</span><span class="n">id</span><span class="o">);</span>
	<span class="n">account</span><span class="o">.</span><span class="na">setBalance</span><span class="o">(</span><span class="n">transMoney</span><span class="o">.</span><span class="na">negate</span><span class="o">());</span>
	<span class="n">accountMapper</span><span class="o">.</span><span class="na">update</span> <span class="o">(</span><span class="n">account</span><span class="o">);</span> <span class="c1">//扣钱</span>
	<span class="n">accountclient</span><span class="o">.</span><span class="na">account</span><span class="o">(</span><span class="n">toId</span><span class="o">.</span> <span class="n">transMoney</span><span class="o">);</span><span class="c1">//feign调用加钱服务的try接口</span>
	<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printIn</span><span class="o">(</span><span class="s">"扣钱"</span><span class="o">);</span>
	<span class="c1">//throw new RuntimeException("假如出账失败");</span>
<span class="o">}</span>

<span class="kd">public</span> <span class="kt">void</span> <span class="nf">confirmUpdate</span><span class="o">(</span><span class="nc">Long</span> <span class="n">id</span><span class="o">,</span> <span class="nc">BigDecimal</span> <span class="n">transMoney</span><span class="o">,</span> <span class="nc">Long</span> <span class="n">told</span><span class="o">)</span> <span class="o">{</span>
	<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printin</span><span class="o">(</span><span class="s">"扣钱确认"</span><span class="o">);</span>
<span class="o">}</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">cancelUpdate</span><span class="o">(</span><span class="nc">Long</span> <span class="n">id</span><span class="o">,</span> <span class="nc">BigDecimal</span> <span class="n">transMoney</span><span class="o">,</span> <span class="nc">Long</span> <span class="n">told</span><span class="o">)</span> <span class="o">{</span> 
	<span class="nc">Account</span> <span class="n">account</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Account</span><span class="o">();</span>
	<span class="n">account</span><span class="o">.</span><span class="na">setId</span><span class="o">(</span><span class="n">id</span><span class="o">);</span>
	<span class="n">account</span><span class="o">.</span><span class="na">setBalance</span><span class="o">(</span><span class="n">transMoney</span><span class="o">):</span>
	<span class="n">accountMapper</span><span class="o">.</span><span class="na">update</span><span class="o">(</span><span class="n">account</span><span class="o">):</span>
	<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print1n</span><span class="o">(</span><span class="s">"扣钱取消"</span><span class="o">);</span>
<span class="o">}</span>
</code></pre></div></div> <ul> <li>第四步，Feign借口需要使用@Hmily</li> </ul> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Feianclient</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">"account-to"</span><span class="o">)</span>
<span class="kd">public</span> <span class="kd">interface</span> <span class="nc">AccountClient</span>
	<span class="c1">// feign调用加钱服务的try接口，需要使用@Hmily注解</span>
	<span class="nd">@Hmily</span>
	<span class="nd">@RequestMapping</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span><span class="s">"/account/(id)/(transMoney)"</span><span class="o">)</span> 
<span class="nc">String</span> <span class="nf">account</span><span class="o">(</span><span class="nd">@PathVariable</span><span class="o">(</span><span class="s">"id) Long id,
@PathVariable("</span><span class="n">transMoney</span><span class="o">)</span> <span class="nc">BigDecimal</span> <span class="n">transMoney</span><span class="o">);</span>
</code></pre></div></div> <h1 id="tcc异常分析">TCC异常分析</h1> <h2 id="第一阶段异常">第一阶段异常</h2> <p>第一阶段异常=try阶段异常</p> <p>第二阶段调用cancel方法, cancel要保证一定执行成功【通过不断的重试来保障，如果超过重试的次数，需要手工介入】</p> <h2 id="第二阶段异常">第二阶段异常</h2> <p>第二阶段回滚异常, cancel 异常</p> <p>只要try方法失败, cancel方法必须成功,重试任务要进行重试,重试不成功继续重试</p> <p>如果第二阶段一直回滚异常，需要人工介入</p> <h3 id="空回滚">空回滚</h3> <p>try方法没有执行【try方法网络超时】。cancel执行了</p> <ol> <li>通过事务控制表来识别空回滚【在cancel方法中识別出try方法有没有执行】</li> <li>转账业务每次try写一条扣20元的流水【没有流水，try就没有执行】</li> </ol> <h3 id="二阶段重复提交">二阶段重复提交</h3> <p>cancel方法和confirm方法做幂等控制。【加钱、扣钱都只能执行一次】</p> <h3 id="防悬挂">防悬挂</h3> <p>Cancel方法比Try方法先执行。【try-直网路超时,然后执行Cancel. Cancel执行完了，Try请求才到】。虽事务失败了，但是事务结束了。try方法一定不能执行。</p> <p>需要在try方法中检查事务是否结束</p> <h1 id="tcc电商系统编程模型">TCC电商系统编程模型</h1> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2022/02/image-ffbdf3de48854be6bc407e0725fd25aa-480.webp 480w,/assets/img/2022/02/image-ffbdf3de48854be6bc407e0725fd25aa-800.webp 800w,/assets/img/2022/02/image-ffbdf3de48854be6bc407e0725fd25aa-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2022/02/image-ffbdf3de48854be6bc407e0725fd25aa.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h1 id="tcc在互联网公司双十一的性能优化">TCC在互联网公司双十一的性能优化</h1> <ul> <li>常见的性能优化方案,二阶段异步执行</li> <li>业务比较特殊的场景,二阶段的提交方法同步执行、二阶段的回滚方法异步执行,【双十一不允许退货】</li> </ul>]]></content><author><name></name></author><category term="分布式"/><summary type="html"><![CDATA[搭建Eureka注册中心 第一步搭建SpringBoot环境[父级项目pom文件]]]></summary></entry><entry><title type="html">基于rocketmq的分布式事务</title><link href="https://zhengstar94.github.io//blog/2022/%E5%9F%BA%E4%BA%8Erocketmq%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/" rel="alternate" type="text/html" title="基于rocketmq的分布式事务"/><published>2022-02-03T00:00:00+00:00</published><updated>2022-02-03T00:00:00+00:00</updated><id>https://zhengstar94.github.io//blog/2022/%E5%9F%BA%E4%BA%8Erocketmq%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1</id><content type="html" xml:base="https://zhengstar94.github.io//blog/2022/%E5%9F%BA%E4%BA%8Erocketmq%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/"><![CDATA[<h1 id="linux安装rocketmq的注意点">linux安装rocketmq的注意点</h1> <ol> <li>在安装完rocketmq之后要先启动 <code class="language-plaintext highlighter-rouge">mqnamesrv</code> 再启动 <code class="language-plaintext highlighter-rouge">mqbroker</code></li> <li>在启动<code class="language-plaintext highlighter-rouge">mqbroker</code>的时候要记得处理ip的问题，默认启动会使用docker的内网地址，需要配置成虚拟机ip</li> </ol> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#启动mqnamesrv</span>
<span class="nb">nohup </span>sh mqnamesrv &amp;
<span class="c">#创建一个mqbroker的配置文件</span>
<span class="nb">echo </span><span class="nv">brokerIP1</span><span class="o">=</span>192.168.147.130 <span class="o">&gt;</span>broker.properties
<span class="c">#启动mqbroker 开启自动创建主题</span>
<span class="nb">nohup </span>sh mqbroker <span class="nt">-n</span> 你的ip:9876 <span class="nt">-c</span> broket.properties <span class="nv">autoCreateTopicEnable</span><span class="o">=</span><span class="nb">true</span> &amp;
<span class="c">#查看是否启动成功</span>
<span class="nb">tail</span> <span class="nt">-f</span> ~/logs/rocketmqlogs/broker.log
</code></pre></div></div> <h1 id="java代码通过rocketmq的事务-处理分布式事务-并封装个人基本封装例子可通过基于配置文件配置更灵活简便这里直接使用代码配置">java代码通过rocketmq的事务 处理分布式事务 并封装（个人基本封装例子，可通过基于配置文件配置，更灵活简便）这里直接使用代码配置</h1> <h2 id="1-引入依赖">1. 引入依赖</h2> <div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>org.apache.rocketmq<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>rocketmq-client<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;version&gt;</span>4.4.0<span class="nt">&lt;/version&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>org.apache.rocketmq<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>rocketmq-remoting<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;version&gt;</span>4.4.0<span class="nt">&lt;/version&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
</code></pre></div></div> <h2 id="2-启动加载生产者实例工具类使用的是transactionmqproducer--使用事务--默认的是不具有事务的并且配置事务处理的类-实现transactionlistener--这里没有独立写-直接new了">2. 启动加载生产者实例工具类，使用的是TransactionMqProducer 使用事务 默认的是不具有事务的，并且配置事务处理的类 实现TransactionListener 这里没有独立写 直接new了</h2> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Configuration</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">rocketMqConfig</span> <span class="o">{</span>
 
    <span class="nd">@Value</span><span class="o">(</span><span class="s">"${apache.rocketmq.namesrvAddr}"</span><span class="o">)</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">namesrvAddr</span><span class="o">;</span>
 
    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">PRODUCER_GROUP</span> <span class="o">=</span> <span class="s">"xd_producer_group"</span><span class="o">;</span>
 
    <span class="nd">@Bean</span>
    <span class="kd">public</span> <span class="nc">ITransactionRocketMqUtil</span> <span class="nf">rocketMqUtilSs</span><span class="o">(){</span>
 
        <span class="nc">TransactionMQProducer</span> <span class="n">producer</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">TransactionMQProducer</span><span class="o">(</span><span class="no">PRODUCER_GROUP</span><span class="o">);</span>
        <span class="n">producer</span><span class="o">.</span><span class="na">setVipChannelEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
        <span class="n">producer</span><span class="o">.</span><span class="na">setNamesrvAddr</span><span class="o">(</span><span class="n">namesrvAddr</span><span class="o">);</span>
        <span class="c1">//创建一个自定义线程工厂</span>
        <span class="nc">ThreadFactory</span> <span class="n">threadFactory</span> <span class="o">=</span>
                <span class="k">new</span> <span class="nf">ThreadFactoryBuilder</span><span class="o">().</span><span class="na">setNameFormat</span><span class="o">(</span><span class="s">"transaction-thread-name-%s"</span><span class="o">).</span><span class="na">build</span><span class="o">();</span>
        <span class="c1">//创建一个线程池</span>
        <span class="nc">ThreadPoolExecutor</span> <span class="n">executor</span> <span class="o">=</span>
                <span class="k">new</span> <span class="nf">ThreadPoolExecutor</span><span class="o">(</span>
                        <span class="mi">2</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">60</span><span class="o">,</span> <span class="nc">TimeUnit</span><span class="o">.</span><span class="na">SECONDS</span><span class="o">,</span> <span class="k">new</span> <span class="nc">ArrayBlockingQueue</span><span class="o">&lt;&gt;(</span><span class="mi">30</span><span class="o">),</span> <span class="n">threadFactory</span><span class="o">);</span>
        <span class="c1">//设置生产者线程池</span>
        <span class="n">producer</span><span class="o">.</span><span class="na">setExecutorService</span><span class="o">(</span><span class="n">executor</span><span class="o">);</span>
        <span class="c1">//设置事务监听器</span>
        <span class="n">producer</span><span class="o">.</span><span class="na">setTransactionListener</span><span class="o">(</span><span class="k">new</span> <span class="nc">TransactionListener</span><span class="o">()</span> <span class="o">{</span>
            <span class="nd">@Override</span>
            <span class="kd">public</span> <span class="nc">LocalTransactionState</span> <span class="nf">executeLocalTransaction</span><span class="o">(</span><span class="nc">Message</span> <span class="n">message</span><span class="o">,</span> <span class="nc">Object</span> <span class="n">o</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">try</span> <span class="o">{</span>
                    <span class="nc">LoggerUtil</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">"开始事务处理"</span><span class="o">);</span>
                    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="mi">1</span><span class="o">/</span><span class="mi">0</span><span class="o">);</span>
                    <span class="nc">LoggerUtil</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">"完成事务"</span><span class="o">);</span>
                    <span class="k">return</span> <span class="nc">LocalTransactionState</span><span class="o">.</span><span class="na">COMMIT_MESSAGE</span><span class="o">;</span>
                <span class="o">}</span><span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">){</span>
                    <span class="nc">LoggerUtil</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">"失败事务"</span><span class="o">);</span>
                    <span class="k">return</span> <span class="nc">LocalTransactionState</span><span class="o">.</span><span class="na">ROLLBACK_MESSAGE</span><span class="o">;</span>
                <span class="o">}</span><span class="k">finally</span> <span class="o">{</span>
                    <span class="nc">LoggerUtil</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">"事务处理结束"</span><span class="o">);</span>
                    <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
 
            <span class="nd">@Override</span>
            <span class="kd">public</span> <span class="nc">LocalTransactionState</span> <span class="nf">checkLocalTransaction</span><span class="o">(</span><span class="nc">MessageExt</span> <span class="n">messageExt</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">try</span> <span class="o">{</span>
                    <span class="nc">LoggerUtil</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">"开始事务回查"</span><span class="o">);</span>
                    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="mi">1</span><span class="o">/</span><span class="mi">1</span><span class="o">);</span>
                    <span class="k">return</span> <span class="nc">LocalTransactionState</span><span class="o">.</span><span class="na">COMMIT_MESSAGE</span><span class="o">;</span>
                <span class="o">}</span><span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">){</span>
                    <span class="k">return</span> <span class="nc">LocalTransactionState</span><span class="o">.</span><span class="na">ROLLBACK_MESSAGE</span><span class="o">;</span>
                <span class="o">}</span><span class="k">finally</span> <span class="o">{</span>
                    <span class="nc">LoggerUtil</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">"事务回查结束"</span><span class="o">);</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">});</span>
        <span class="k">return</span> <span class="k">new</span> <span class="nf">TransactionRocketMqUtil</span><span class="o">(</span><span class="n">producer</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div> <h2 id="3-生产者消息发送工具类">3. 生产者消息发送工具类</h2> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">TransactionRocketMqUtil</span> <span class="kd">implements</span> <span class="nc">ITransactionRocketMqUtil</span> <span class="o">{</span>
 
    <span class="kd">private</span> <span class="nc">TransactionMQProducer</span> <span class="n">producer</span><span class="o">;</span>
 
    <span class="kd">public</span> <span class="nf">TransactionRocketMqUtil</span><span class="o">(</span><span class="nc">TransactionMQProducer</span> <span class="n">producer</span><span class="o">){</span>
        <span class="nc">LoggerUtil</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">"初始化类"</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">producer</span> <span class="o">=</span> <span class="n">producer</span><span class="o">;</span>
        <span class="n">start</span><span class="o">();</span>
    <span class="o">}</span>
 
    <span class="kd">public</span> <span class="nc">TransactionSendResult</span> <span class="nf">transactionSend</span> <span class="o">(</span><span class="nc">String</span> <span class="n">topic</span><span class="o">,</span><span class="nc">String</span> <span class="n">msg</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
        <span class="nc">Message</span> <span class="n">message</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Message</span><span class="o">(</span><span class="n">topic</span><span class="o">,</span><span class="n">msg</span><span class="o">.</span><span class="na">getBytes</span><span class="o">());</span>
        <span class="nc">TransactionSendResult</span> <span class="n">result</span> <span class="o">=</span>  <span class="n">producer</span><span class="o">.</span><span class="na">sendMessageInTransaction</span><span class="o">(</span><span class="n">message</span><span class="o">,</span><span class="kc">null</span><span class="o">);</span>
        <span class="k">return</span> <span class="n">result</span><span class="o">;</span>
    <span class="o">}</span>
 
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">shutdown</span><span class="o">(){</span>
        <span class="k">this</span><span class="o">.</span><span class="na">producer</span><span class="o">.</span><span class="na">shutdown</span><span class="o">();</span>
    <span class="o">}</span>
 
    <span class="cm">/**
     * 使用前先调用start方法
     */</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">start</span><span class="o">(){</span>
        <span class="k">try</span> <span class="o">{</span>
            <span class="k">this</span><span class="o">.</span><span class="na">producer</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
        <span class="o">}</span><span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">){</span>
            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div> <h2 id="4-消费者注册封装">4. 消费者注册封装</h2> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Configuration</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ConsumerContext</span> <span class="o">{</span>
 
    <span class="kd">private</span> <span class="nc">DefaultMQPushConsumer</span> <span class="n">consumer</span><span class="o">;</span>
 
    <span class="nd">@Value</span><span class="o">(</span><span class="s">"${apache.rocketmq.namesrvAddr}"</span><span class="o">)</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">namesrvAddr</span><span class="o">;</span>
    <span class="nd">@Bean</span>
    <span class="kd">public</span> <span class="nc">ContextContextTool</span> <span class="nf">testConsumer</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
        <span class="k">new</span> <span class="nf">ContextContextTool</span><span class="o">().</span><span class="na">ContextTool</span><span class="o">();</span>
        <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div> <blockquote> <p>这里我写死了消费者的类可以在 ContextTool() 方法中配置传入消费者的<code class="language-plaintext highlighter-rouge">类</code>以及<code class="language-plaintext highlighter-rouge">组</code>和<code class="language-plaintext highlighter-rouge">主题</code>，消费者的类需要实现MessageListenerConcurrently接口，逻辑写在consumeMessage方法中</p> </blockquote> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ContextContextTool</span> <span class="o">{</span>
    <span class="nd">@Value</span><span class="o">(</span><span class="s">"${apache.rocketmq.namesrvAddr}"</span><span class="o">)</span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="nc">String</span> <span class="n">namesrvAddr</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">ContextTool</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">MQClientException</span> <span class="o">{</span>
        <span class="nc">DefaultMQPushConsumer</span> <span class="n">consumer</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">DefaultMQPushConsumer</span><span class="o">(</span><span class="s">"test_group"</span><span class="o">);</span>
        <span class="n">consumer</span><span class="o">.</span><span class="na">setNamesrvAddr</span><span class="o">(</span><span class="n">namesrvAddr</span><span class="o">);</span>
        <span class="n">consumer</span><span class="o">.</span><span class="na">subscribe</span><span class="o">(</span><span class="s">"test_topic"</span><span class="o">,</span><span class="s">"*"</span><span class="o">);</span>
        <span class="n">consumer</span><span class="o">.</span><span class="na">registerMessageListener</span><span class="o">(</span><span class="k">new</span> <span class="nc">MessageListenerConcurrently</span><span class="o">()</span> <span class="o">{</span>
            <span class="nd">@Override</span>
            <span class="kd">public</span> <span class="nc">ConsumeConcurrentlyStatus</span> <span class="nf">consumeMessage</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">MessageExt</span><span class="o">&gt;</span> <span class="n">list</span><span class="o">,</span> <span class="nc">ConsumeConcurrentlyContext</span> <span class="n">consumeConcurrentlyContext</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">for</span> <span class="o">(</span><span class="nc">MessageExt</span> <span class="n">msg</span> <span class="o">:</span> <span class="n">list</span><span class="o">)</span> <span class="o">{</span>
                    <span class="nc">LoggerUtil</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">"消费成功"</span><span class="o">+</span><span class="n">msg</span><span class="o">);</span>
                <span class="o">}</span>
                <span class="k">return</span> <span class="nc">ConsumeConcurrentlyStatus</span><span class="o">.</span><span class="na">CONSUME_SUCCESS</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">});</span>
        <span class="n">consumer</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
        <span class="nc">LoggerUtil</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">"创建消费者并启动监听：test_topic"</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div> <h2 id="5-消息发送">5. 消息发送</h2> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kt">void</span> <span class="nf">sendProducerTransaction</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
       <span class="nc">TransactionSendResult</span> <span class="n">result</span> <span class="o">=</span> <span class="n">transactionRocketMqUtil</span><span class="o">.</span><span class="na">transactionSend</span><span class="o">(</span><span class="s">"test_topic"</span><span class="o">,</span><span class="s">"test_msg"</span><span class="o">);</span>
       <span class="nc">LoggerUtil</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">"发送消息到rocketmq事务监听"</span><span class="o">+</span><span class="n">result</span><span class="o">);</span>
   <span class="o">}</span>
</code></pre></div></div> <h2 id="6-结果">6. 结果</h2> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2022/02/image-803481457b084204a9647f955258d0b9-480.webp 480w,/assets/img/2022/02/image-803481457b084204a9647f955258d0b9-800.webp 800w,/assets/img/2022/02/image-803481457b084204a9647f955258d0b9-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2022/02/image-803481457b084204a9647f955258d0b9.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2022/02/image-7a76cb8bfef447afa875a734637f6c98-480.webp 480w,/assets/img/2022/02/image-7a76cb8bfef447afa875a734637f6c98-800.webp 800w,/assets/img/2022/02/image-7a76cb8bfef447afa875a734637f6c98-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2022/02/image-7a76cb8bfef447afa875a734637f6c98.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h1 id="衍生问题">衍生问题</h1> <ol> <li>怎么保证消息的丢失问题？之前业务上的做法是把消息持久化到库里</li> </ol> <ul> <li>rocketmq节点集群</li> <li>rocketmq事务是一个2段式提交，事务开始只是提交了预备消息 在事务开始前提交，只有事务完成才会commit 提交真正的消息，在没有收到commit事务确认，预备消息会进行回查，确认后再进行消费，消费失败会重复调用消费，分布式事务做到的是数据最终一致。如果说在预备消息发送就丢失了，则第一段事务是根本不会执行的。</li> <li>如果在第一段提交成功 commit成功后 还没消费 消息丢失，这种情况只能通过附加业务冗余来保证稳定性，但是rocketmq是十分稳定的，可以这么说，你整个分布式系统挂了，redis 挂了rocketmq都不会挂。</li> </ul>]]></content><author><name></name></author><category term="分布式"/><summary type="html"><![CDATA[linux安装rocketmq的注意点]]></summary></entry><entry><title type="html">分布式事务解决方案Part2</title><link href="https://zhengstar94.github.io//blog/2022/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88Part2/" rel="alternate" type="text/html" title="分布式事务解决方案Part2"/><published>2022-02-02T00:00:00+00:00</published><updated>2022-02-02T00:00:00+00:00</updated><id>https://zhengstar94.github.io//blog/2022/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88Part2</id><content type="html" xml:base="https://zhengstar94.github.io//blog/2022/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88Part2/"><![CDATA[<h1 id="分布式事务解决方法part2">分布式事务解决方法part2</h1> <h2 id="设计微服务遵循什么原则">设计微服务遵循什么原则</h2> <ol> <li>单一职责原则:让每个服务能独立,有界限的工作,每个服务只关注自己的业务。做到高内聚。</li> <li>服务自治原则:每个服务要能做到独立开发、独立测试、独立构建、独立部署,独立运行。与其他服务进行解耦。</li> <li>轻量级通信原则:让每个服务之间的调用是轻量级,并且能够跨平台、跨语言。比如采用RESTful风格,利用消息队列进行通信等。</li> <li>粒度进化原则:对每个服务的粒度把控,其实没有统一的标准,这个得结合我们解决的具体业务问题。不要过度设计。服务的粒度随着业务和用户的发展而发展。</li> </ol> <p>总结一句话,软件是为业务服务的,好的系统不是设计出来的,而是进化出来的。</p> <h2 id="cap定理">CAP定理</h2> <h3 id="概念">概念</h3> <ul> <li>C:一致性(Consistency) ,数据在多个副本节点中保持一致,可以理解成两个用户访问两个系统A和B,当A系统数据有变化时,及时同步给B系统,让两个用户看到的数据是一致的。</li> <li>A:可用性(Availability) ,系统对外提供服务必须一直处于可用状态,在任何故障下,客户端都能在合理时间内获得服务端非错误的响应。</li> <li>P:分区容错性(Partition tolerance) ,在分布式系统中遇到任何网络分区故障,系统仍然能对外提供服务。网络分区,可以这样理解,在分布式系统中,不同的节点分布在不同的子网络中,有可能子网络中只有一个节点,在所有网络正常的情况下,由于某些原因导致这些子节点之间的网络出现故障,造成整个节点环境被切分成了不同的独立区域,这就是网络分区。</li> </ul> <p>CAP定理:指的是:一个分布式系统最多只能同时满足C一致性(Consistency) 、A可用性(Availability)和P分 区容错性(Partition tolerance)这三项中的两项。</p> <h3 id="原理解释">原理解释</h3> <p>来分析下CAP，为什么只能满足两个</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2022/02/image-4a9172779a924abab45eec87145a2d4a-480.webp 480w,/assets/img/2022/02/image-4a9172779a924abab45eec87145a2d4a-800.webp 800w,/assets/img/2022/02/image-4a9172779a924abab45eec87145a2d4a-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2022/02/image-4a9172779a924abab45eec87145a2d4a.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>用户1和用户2分别访问系统A和系统B,系统A和系统B通过网络进行同步数据。理想情况是:用户1访问系统，A对数据进行修改,将data1改成了data2,同时用户2访问系统B,拿到的是data2数据。</p> <p>但是实际中,由于分布式系统具有八大谬论:</p> <ul> <li>网络相当可靠</li> <li>延迟为零</li> <li>传输带宽是无限的</li> <li>网络相当安全</li> <li>拓扑结构不会改变</li> <li>必须要有一名管理员</li> <li>传输成本为零</li> <li>网络同质化</li> </ul> <p>我们知道,只要有网络调用,网络总是不可靠的。我们来一分析。</p> <ol> <li>当网络发生故障时,系统A和系统B没法进行数据同步,也就是我们不满足P,同时两个系统依然可以访问,那么此时其实相当于是单机系统,就不是分布式系统了,所以既然我们是分布式系统, P必须满足。</li> <li>当P满足时,如果用户1通过系统A对数据进行了修改将data1改成了data2,也要让用户2通过系统B正确的拿到data2,那么此时是满足C,就必须等待网络将系统A和系统B的数据同步好,并且在同步期间,任何人不能访问系统B (让系统不可用) ,否则数据就不是一致的。此时满足的是CP。(保证了一致性+分区)</li> <li>当P满足时,如果用户1通过系统A对数据进行了修改将data1改成了data2,也要让系统B能继续提供服务,那么此时,只能接受系统A没有将data2同步给系统B (牺牲了一致性) 。此时满足的就是AP。(保证了可用性+分区)</li> </ol> <h2 id="base理论">BASE理论</h2> <p>由于CAP中一致性C和可用性A无法兼得, eBay的架构师,提出了BASE理论,它是通过牺牲数据的强一致性,来获得可用性。它由于如下3种特征:</p> <ul> <li>Basically Available (基本可用) :分布式系统在出现不可预知故障的时候,允许损失部分可用性,保证核心功能的可用。</li> <li>Soft state (软状态) :软状态也称为弱状态,和硬状态相对,是指允许系统中的数据存在中间状态,并认为该中间状态的存在不会影响系统的整体可用性,即允许系统在不同节点的数据副本之间进行数据同步的过程存在延时</li> <li>Eventually consistent (最终一致性) :最终一致性强调的是系统中所有的数据副本,在经过一段时间的同步后,最终能够达到一个一致的状态。因此,最终一致性的本质是需要系统保证最终数据能够达到一致,而不需要实时保证系统数据的强一致性。</li> </ul> <p>BASE理论并没有要求数据的强一致性,而是允许数据在一定的时间段内是不一致的,但在最终某个状态会达到一致。在生产环境中,很多公司,会采用BASE理论来实现数据的一致,因为产品的可用性相比强一致性来说更加重要。比如在电商平台中,当用户对一个订单发起支付时,往往会调用第三方支付平台,比如支付宝支付或者微信支付,调用第三方成功后,第三方并不能及时通知我方系统,在第三方没有通知我方系统的这段时间内,我们给用户的订单状态显示支付中,等到第三方回调之后,我们再将状态改成已支付。虽然订单状态在短期内存在不一致,但是用户却获得了更好的产品体验</p> <h2 id="2pc提交协议">2PC提交协议</h2> <p>二阶段提交(Two-phaseCommit)是指,在计算机网络以及数据库领域内,为了便基于分布式系统架构下的所有节点在进行事务提交时保持一致性而设计的一种算法(Algorithm),通常,二阶段提交也被称为是一种协议(Protocoll),在分布式系统中,每个节点虽然可以知晓自己的操作是成功或者失败,却无法知道其他节点的操作的成功或失败。当一个事务跨越多个节点时,为了保持事务的ACID特性,需要引入一个作为协调者的组件来统一掌控所有节点(称作参与者)的操作结果,并最终指示这些节点是否要把操作结果进行真正的提交(比如将更新后的数据写入磁盘等等),因此,<strong>二阶段提交的算法思路可以概括为:参与者将操作成败通知协调者,再由协调者根据所有参与者的反馈情报决定各参与者是否要提交操作,还是中止操作。</strong></p> <p>所谓的两个阶段是指:第一阶段:<strong>准备阶段(投票阶段)</strong>和第二阶段:<strong>提交阶段(执行阶段)</strong> 。</p> <p>准备阶段</p> <p>事务协调者(事务管理器)给每个参与者(资源管理器)发送Prepare消息,每个参与者要么直接返回失败(如权限验证失败),要么在本地执行事务,写本地的redo和undo日志,但不提交,到达一种万事俱备,只欠东风”的状态。</p> <p>可以进一步将准备阶段分为以下三个步骤:</p> <blockquote> <ol> <li>协调者节点向所有参与者节点询问是否可以执行提交操作(vote),并开始等待各参与者节点的响应。</li> <li>参与者节点执行询问发起为止的所有事务操作,并将Undo信息和Redo信息写入日志。(注意:若成功这 里其实每个参与者已经执行了事务操作)</li> <li>各参与者节点响应协调者节点发起的询问,如果参与者节点的事务操作实际执行成功,则它返回一个同意消息;如果参与者节点的事务操作实际执行失败,则它返回一个中止消息</li> </ol> </blockquote> <blockquote> <p>总结：<br/> 第一阶段（prepare）：事务管理器向所有本地资源管理器发起请求，询问是否是 ready 状态，所有参与者都将本事务能否成功的信息反馈发给协调者；<br/> 第二阶段 (commit/rollback)：事务管理器根据所有本地资源管理器的反馈，通知所有本地资源管理器，步调一致地在所有分支上提交或者回滚。</p> </blockquote> <p>提交/回滚操作</p> <blockquote> <p>如果协调者收到了参与者的失败消息或者超时,直接给每个参与者发送回滚(Rollback)消息;<br/> 否则，发送提交(commit)消息;<br/> 参与者根据协调者的指令执行提交或者回滚操作,释放所有事务处理过程中使用的锁资源。(注意必须在最后阶段释放锁资源)<br/> 接下来分两种情况分别讨论提交阶段的过程。<br/> 当协调者节点从所有参与者节点获得的相应消息都为”同意”时;</p> </blockquote> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2022/02/image-f667edaa12b54b60af2e178682cf5490-480.webp 480w,/assets/img/2022/02/image-f667edaa12b54b60af2e178682cf5490-800.webp 800w,/assets/img/2022/02/image-f667edaa12b54b60af2e178682cf5490-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2022/02/image-f667edaa12b54b60af2e178682cf5490.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <blockquote> <ol> <li>协调者节点向所有参与者节点发出正式提交(commity”的请求。</li> <li>参与者节点正式完成操作,并释放在整个事务期间内占用的资源。</li> <li>参与者节点向协调者节点发送”完成”消息</li> <li>协调者节点受到所有参与者节点反馈的”完成消息后,完成事务。</li> </ol> </blockquote> <p>如果任一参与者节点在第一阶段返回的响应消息为”中止”,或者协调者节点在第一阶段的询问超时之前无法获取所有参与者节点的响应消息时.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2022/02/image-57b3afda873f4b3cbef8391538d16ce6-480.webp 480w,/assets/img/2022/02/image-57b3afda873f4b3cbef8391538d16ce6-800.webp 800w,/assets/img/2022/02/image-57b3afda873f4b3cbef8391538d16ce6-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2022/02/image-57b3afda873f4b3cbef8391538d16ce6.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <blockquote> <ol> <li>协调者节点向所有参与者节点发出”回滚操作(rollback)”的请求。</li> <li>参与者节点利用之前写入的Undo信息执行回滚,并释放在整个事务期间内占用的资源。</li> <li>参与者节点向协调者节点发送”回滚完成”消息</li> <li>协调者节点受到所有参与者节点反馈的”回滚完成”消息后,取消事务。</li> </ol> </blockquote> <p>不管最后结果如何,第二阶段都会结束当前事务。</p> <h3 id="2pc缺点">2PC缺点</h3> <ol> <li><strong>同步阻塞问题</strong>,执行过程中,所有参与节点都是事务阻塞型的。当参与者占有公共资源时,其他第三方节点访问公共资源不得不处于阻塞状态。（1pc准备阶段，只执行sql，不提交，并且占用数据库连接资源）</li> <li><strong>单点故障</strong>,由于协潮者的重要性,一旦协调者发生故障,参与者会一直阻塞下去。尤其在第二阶段,协调者发生故障,那么所有的参与者还都处于锁定事务资源的状态中,而无法继续完成事务操作。(如果是协调者挂掉,可以重新选举一个协调者,但是无法解决因为协调者宕机导致的参与者处于阻塞状态的问题)</li> <li><strong>数据不一致</strong>。在二阶段提交的阶段二中,当协调者向参与者发送commit请求之后,发生了局部网络异常或者在发送commit请求过程中协调者发生了故障,这回导致只有一部分参与者接受到了commit请求。而在这部分参与者接到commit请求之后就会执行commit操作。但是其他部分未接到commit请求的机器则无法执行事务提交。于是整个分布式系统便出现了数据部一致性的现象。</li> <li>二阶段无法解决的问题:协调者再发出commit消息之后宕机,而唯一接收到这条消息的参与者同时也容机了。那么即使协调者通过选举协议产生了新的协调者,这条事务的状态也是不确定的,没人知道事务是否被已经提交。</li> </ol> <p>处理方法：补偿，手动或者脚本补偿</p> <h2 id="3pc提交协议">3PC提交协议</h2> <p>CanCommit阶段 3PC的CanCommit阶段其实和2PC的准备阶段很像。协调者向参与者发送commit请求,参与者如果可以提交就返回Yes响应,否则返回No响应。</p> <blockquote> <ol> <li><strong>事务询问</strong>协调者申参与者发送CanCommit请求。询问是否可以执行事务提交操作。然后开始等待参与者的响应。</li> <li><strong>响应反馈</strong>参与者接到CanCommit请求之后,正常情况下,如果其自身认为可以顺利执行事务,则返回Yes响应,并进入预备状态。否则反馈No</li> </ol> </blockquote> <p>PreCommit阶段</p> <p>协调者根据参与者的反应情况来决定是否可以进行事务的PreCommit操作,根据响应情况,有以下两种可能。</p> <p><strong>假如协调者从所有的参与者获得的反馈都是Yes响应,那么就会执行事务的预执行。</strong></p> <blockquote> <ol> <li><strong>发送预提交请求</strong>协调者向参与者发送PreCommit请求,并进入Prepared阶段</li> <li><strong>事务预提交</strong>参与者接收到PreCommit请求后,会执行事务操作,并将undo和redo信息记录到事务日志</li> <li><strong>响应反馈</strong>如果参与者成功的执行了事务操作,则返回ACK响应,同时开始等待最终指令。</li> </ol> </blockquote> <p><strong>假如有任何一个参与者向协调者发送了No响应,或者等待超时之局 协调者都没有接到参与者的响应,那么就执行事务的中断。</strong></p> <blockquote> <ol> <li>发送中断请求协调者向所有参与者发送abort请求。</li> <li>中断事务参与者收到来自协调者的abort请求之后(或超时之后,仍未收到协调者的请求) ,执行事务的中断。</li> </ol> </blockquote> <p>pre阶段参与者没收到请求, rolback。</p> <p>doCommit阶段</p> <p>该阶段进行真正的事务提交,也可以分为以下两种情况。</p> <p><strong>执行提交</strong></p> <blockquote> <ol> <li><strong>发送得交请求</strong>协调接收到参与者发送的ACK响应,那么他将从预提交状态进入到提交状态。并向所有参与者发送doCommit请求。</li> <li><strong>事务提交</strong>参与者接收到doCommit请求之后,执行正式的事务提交。并在完成事务提交之后释放所有事务资源。</li> <li><strong>响应反馈</strong>事务提交完之后,向协洞者发送Ack响应</li> <li><strong>完成事务</strong>协调者接收到所有参与者的ack响应之后,完成事务。</li> </ol> </blockquote> <p><strong>中断事务</strong>协调者没有接收到参与者发送的ACK响应(可能是接受者发送的不是ACK响应,也可能响应超时) ,那么就会执行中断事务。</p> <blockquote> <ol> <li>发送中断请求协调者向所有参与者发送abort请求</li> <li>回滚参与者接收到abort请求之后,利用其在阶段二记录的undo信息来执行事务的回滚操作,并在完成回滚之后释放所有的事务资源。</li> <li>反馈结果参与者完成事务回滚之后,向协调者发送ACK消息</li> <li>中断事务协洞者接收到参与者反馈的ACK消息之后,执行事务的中断。</li> </ol> </blockquote> <h2 id="2pc与3pc区别">2PC与3PC区别</h2> <ol> <li>3pct2pc多了一个can commit阶段,减少了不要的资源浪费 因为2pc在第一阶段会占用资源,而3pc在这 个阶段不占用资源,只是校验一下sql,如果不能执行,就直接返回,减少了资源占用。</li> <li>引入超时机制。同时在协调者和参与者中都引入超时机制。</li> </ol> <p>2pc:只有协调者有超时机制,超时后，发送回滚指令。</p> <p>3pc:协调者和参与者都有超时机制。</p> <p>协调者超时：发送中断指令。 参与者超时: pre阶段进行中断,do阶段进行提交</p> <h2 id="tcc解决方案">TCC解决方案</h2> <p>TCC (Try-Confirm-Cancel)是一种常用的分布式事务解决方案,它将一个事务拆分成三个步骤:</p> <ul> <li>T (Try) :业务检查阶段,这阶段主要进行业务校验和检查或者资源预留;也可能是直接进行业务操作。</li> <li>C (Confirm) :业务确认阶段,这阶段对Ty阶段校验过的业务或者预留的资源进行确认。</li> <li>C (Cancel) :业务回滚阶段,这阶段和上面的C (Confirm)是互斥的,用于释放Try阶段预留的资源或者业务。</li> </ul> <h3 id="tcc的空回滚">TCC的空回滚</h3> <p>在没有调用TCC资源Try方法的情况下,调用了二阶段的Cancel方法。比如当Try请求由于网络延迟或故障等原因,没有执行,结果返回了异常,那么 时Cancel就不能正常执行,因为Try没有对数据进行修改,如果Cancel进行了对数据的修改,那就会导致数据不一致。</p> <p>解决思路是关键就是要识别出这个空回滚。思路很简单就是需要知道Try阶段是否执行,如果执行了,那就是正常回滚;如果没执行,那就是空回滚。建议TM在发起全局事务时生成全局事务记录,全局事务ID贯穿整个分布式事务调用链条,再额外增加一张分支事务记录表,其中有全局事务ID和分支事务ID,<strong>第一阶段Try方法里会插入祭记录,表示Try阶段执行了. Cancel接口里读取该记录,如果该记录存在,则正常回滚;如果该记录不存在,则是空回滚。</strong></p> <h3 id="tcc幂等问题">TCC幂等问题</h3> <p>为了保证TCC二阶段提交重试机制不会引发数据不一致,要求TCC的二阶段Confirm和Cancel接口保证幕等,这样不会重复使用或者程放资源。如果幕等控制没有做好,很有可能导致数据不一致等严重问题。</p> <p>解决思路在上述<strong>分支事务记录</strong>中增加执行状态,每次执行前都查询该状态。</p> <h3 id="tcc的悬挂问题">TCC的悬挂问题</h3> <p>悬挂就是对于一个分布式事务,其二阶段Cancel接口比Try接口先执行。</p> <p>出现原因是在调用分支事务Try时,由于网络发生拥堵,造成了超时, TM就会通知RM回滚该分布式事务,可能回滚完成后, Try请求才到达参与者真正执行,而一个Try方法预留的业务资源,只有该分布式事务才能使用,该分布式事务第一阶段预留的业务资源就再也没有人能够处理了,对于这种情况,我们就称为悬挂,即业务资源预留后无法继续处理。</p> <p>解决思路是如果二阶段执行完成,那一阶段就不能再继续执行。在执行一阶段事务时判断在该全局事务下,判断<strong>分支事务记录表</strong>中是否已经有二阶段事务记录,如果有则不执行Try.</p> <h2 id="可靠消息服务方案">可靠消息服务方案</h2> <p>可靠消息最终一致性方案指的是:当事务的发起方(事务参与者,消息发送者)执行完本地事务后,同时发出一条消息,事务参与方(事务参与者,消息的消费者)一定能够接受消息并可以成功处理自己的事务。 这里面强调两点:</p> <ol> <li>可靠消息:发起方一定得把消息传递到消费者。</li> <li>最终一致性:最终发起方的业务处理和消费方的业务处理得完成,达成最终一致。</li> </ol> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2022/02/image-90dbfc7880a6485d8ac5abb52713b196-480.webp 480w,/assets/img/2022/02/image-90dbfc7880a6485d8ac5abb52713b196-800.webp 800w,/assets/img/2022/02/image-90dbfc7880a6485d8ac5abb52713b196-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2022/02/image-90dbfc7880a6485d8ac5abb52713b196.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h2 id="最大努力通知方案的关键">最大努力通知方案的关键</h2> <ol> <li>有一定的<strong>消息重复通知</strong>机制,因为接收通知方可能没有接收到通知,此时要有一定的机制对消息重复通知。</li> <li><strong>消息校对</strong>机制。如果尽最大努力也没有通知到接收方,或者接收方消费消息后要再次消费,此时可由接收方主动向通知方查询消息信息来满足需求。</li> </ol> <h2 id="分布式系统中的幂等">分布式系统中的幂等</h2> <p>幕等(idempotent, idempotence)是一个数学与计算机学概念,常见于抽象代数中,</p> <p>在编程中,一个幕等操作的特点是其任意多次执行所产生的影响均与一次执行的影响相同。幕等函数,或幕等方法,是指可以使用相同参数重复执行,并能获得相同结果的函数。这些函数不会影响系统状态,也不用担心重复执行会对系统造成改变。</p> <p>例如, “getUsername()和setTrue()”函数就是一个幕等函数,更复杂的操作幕等保证是利用唯一交易号(流水号实现我的理解:幕等就是一个操作,不论执行多少次,产生的效果和返回的结果都是一样的</p> <h2 id="幂等性的解决方案">幂等性的解决方案</h2> <p>1.查询操作</p> <p>查询一次和查询多次,在数据不变的情况下,查询结果是一样的。 select是天然的幕等操作;</p> <p>2.删除操作</p> <p>删除操作也是幕等的,删除一次和多次删除都是把数据删除。(注意可能返回结果不一样,删除的数据不存在,返回0,删除的数据多条,返回结果多个。</p> <p>3.唯一索引</p> <p>防止新增脏数据。比如:支付宝的资金账户,支付宝也有用户账户,每个用户只能有一个资金账户,怎么防止给用户创建多个资金账户,那么给资金账户表中的用户ID加唯一索引,所以一个用户新增成功一个资金账户记录。要点:唯一索引或唯一组合索引来防止新增数据存在脏数据(当表存在唯一索引,并发时新增报错时,再查询一次就可以了,数据应该已经存在了,返回结果即可。</p> <p>4.token机制</p> <p>防止页面重复提交。</p> <p><strong>业务要求</strong>:页面的数据只能被点击提交一次;</p> <p><strong>发生原因</strong>:由于重复点击或者网络重发,或者nginx重发等情况会导致数据被重复提交;</p> <p><strong>解决办法</strong>:集群环境采用token加redistredis单线程的,处理需要排队);单JVM环境:采用token加redis或 token加jvm锁。</p> <p><strong>处理流程：</strong></p> <blockquote> <ol> <li>数据提交前要向服务的申请token, token放到redis或jvm内存, token有效时间;</li> <li>提交后后台校验token,同时删除token,生成新的token返回。</li> </ol> </blockquote> <p><strong>token特点</strong>:要申请,一次有效性,可以限流</p> <p>注意: redis要用删除操作来判断token,删除成功代表token校验通过。</p> <h2 id="对外提供的api如何保证幂等性">对外提供的API如何保证幂等性</h2> <p>举例说明:银联提供的付款接口:需要接入商户提交付款请求时附带: source来源, seq序列号。</p> <p>source-seq在数据库里面做唯一索引,防止多次付款(并发时,只能处理一个请求)</p> <p>重点:对外提供接口为了支持幕等调用,接口有两个字段必须传,一个是来源source,一个是来源方序列号seq,这个两个字段在提供方系统里面做联合唯一索引,这样当第三方调用时,先在本方系统里面查询一下,是否已经处理过,返回相应处理结果;没有处理过,进行相应处理,返回结果。</p> <p>注意,为了幕等友好,一定要先查询一下,是否处理过该笔业务,不查询直接插入业务系统,会报错,但实际已经处理。</p> <h2 id="认证和授权的区别">认证和授权的区别</h2> <p>Authentication (认证)是验证您的身份的凭据(例如用户名/用PID和密码) ,通过这个凭据,系统得以知道你就是你,也就是说系统存在你这个用户。所以, Authentication被称为身份/用户验证。</p> <p>Authorization (授权)发生在Authentication (认证)之后。授权,它主要掌管我们访问系统的权限。比如有些特定资源只能具有特定权限的人才能访问比如admin,有些对系统资源操作比如删除、添加、更新只能特定人才具有。</p> <p>这两个一般在我们的系统中被结合在一起使用,目的就是为了保护我们系统的安全性。</p> <h2 id="cookie和session区别如何使用session身份验证">cookie和session区别？如何使用session身份验证？</h2> <p>Session的主要作用就是通过服务端记录用户的状态。</p> <p>Cookie数据保存在客户端(浏览端), Session数据保存在服务器端。相对来说Session安全性更高。如果使用Cookie的话,一些敏感信息不要写入Cookie中,最好能将Cookie信息加密然后使用到的时候再去服务器误解密。</p> <p>那么,如何使用Session进行身份验证?</p> <p>很多时候我们都是通过SessionlD来指定特定的用户, SessionlD一般会选择存放在服务端,举个例子:用户成功登陆系统,然后返回给客户端具有SessionlD的Cookie,当用户向后端发起请求的时候会把SessionlD带上,这样后端就知道你的身份状态了。关于这种认证方式更详细的过程如下:</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2022/02/image-bdb4bb48ad6f4186b1861413daa62802-480.webp 480w,/assets/img/2022/02/image-bdb4bb48ad6f4186b1861413daa62802-800.webp 800w,/assets/img/2022/02/image-bdb4bb48ad6f4186b1861413daa62802-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2022/02/image-bdb4bb48ad6f4186b1861413daa62802.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ol> <li>用户向服务器发送用户名和密码用于登陆系统。</li> <li>服务器验证通过后,服务器为用户创建一个Session,并将Session信息存储起来。</li> <li>服务器向用户返回一个SessionD,写入用户的Cookie,</li> <li>当用户保持登录状态时, Cookie将与每个后续请求一起被发送出去。</li> <li>服务器可以将存储在Cookie上的Session ID与存储在内存中或者数据库中的Session信息进行比较,以验证用户的身份,返回给用户客户端响应信息的时候会附带用户当前的状态。</li> </ol> <p><strong>使用Session的时候需要注意下面几个点:</strong></p> <ol> <li>依赖Session的关键业务一定要确保客户端开启了Cookie.</li> <li>注意Session的过期时间</li> </ol> <h2 id="为什么cookie无法仿制csrf攻击而token可以">为什么cookie无法仿制CSRF攻击，而token可以？</h2> <p>CSRF (Cross Site Request Forgery)一般被翻译为跨站请求伪造,那么什么是跨站请求伪造呢?说简单一点用你的身份去发送一些对你不友好的请求。举个简单的例子:</p> <p>小壮登录了某网上银行,他来到了网上银行的帖子区,看到一个帖子下面有一个链接写着”科学理财,年收益率70%”,小壮好奇的点开了这个链接,结果发现自己的账户少了10000元。这是这么回事呢?原来黑客在链接中藏了一个请求,这个请求直接利用小壮的身份给银行发送了一个转账请求,也就是通过你的Cookie向银行发出请求。&lt;a src-http://www.mybank.com/ransfer?bankld-11&amp;money=10000&gt;科学理财,年收益率70%&lt;/&gt;</p> <p>原因是进行Session认证的时候,我们一般使用Cookie来存储Sessionld,当我们登陆后后端生成一个Sessionld放在Cookie中返回给客户端,服务端通过Redis或者其他存储工具记录保存着这个Sessionid,客户端登录以后每次请 求都会带上这个Sessionld,服务端通过这个Sessionld来标示你这个人。如果别人通过cookie拿到了Sessionld后就可以代营你的身份访问系统了.</p> <p>Session认证中Cookie中的Sessionld是由浏览器发送到服务端的,借助这个特性,攻击者就可以通过让用户误点攻击链接,达到攻击效果。</p> <p>但是,我们使用token的话就不会存在这个问题,在我们登录成功获得token之后,一般会选择存放在localstorage中。然后我们在前端通过某些方式会给每个发到后端的请求加上这个token,这样就不会出现CSRF漏洞的问题。因为,即使有个你点击了非法链接发送了请求到服务端,这个非法请求是不会携带token的,所以这个请求将是非法的。</p> <h2 id="分布式架构下session共享又什么方案">分布式架构下，session共享又什么方案？</h2> <ol> <li>不要有session:但是确实在某些场景下,是可以没有session的,其实在很多接口类系统当中,都提倡【API无状态服务】 ;也就是每一次的接口访问,都不依赖于session、不依赖于前一次的接口访问,用jwt的token;</li> <li>存入cookie中:将session存储到cookie中,但是缺点也很明显,例如每次请求都得带着session,数据存储在客户端本地,是有风险的;</li> <li>session同步:对个服务器之间同步session,这样可以保证每个服务器上都有全部的session信息,不过当服务器数量比较多的时候,同步是会有延迟甚至同步失败;</li> <li>我们现在的系统会把session放到Redis中存储,虽然架构上变得复杂,并且需要多访问一次Redis,但是这种方案带来的好处也是很大的:实现session共享,可以水平扩展(增加Redis服务器) ,服务器重启session不丢失(不过也要注意session在Redis中的刷新/失效机制) ,不仅可以跨服务器session共享,甚至可以跨平台(例如网页端和APP端）进行共享。</li> <li>使用Nginx (或其他复杂均衡软硬件)中的ip绑定策略,同一个ip只能在指定的同一个机器访问,但是这样做风险也比较大，而且也是去了负载均衡的意义;</li> </ol>]]></content><author><name></name></author><category term="分布式"/><summary type="html"><![CDATA[分布式事务解决方法part2]]></summary></entry><entry><title type="html">分布式事务解决方案Part1</title><link href="https://zhengstar94.github.io//blog/2022/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88Part1/" rel="alternate" type="text/html" title="分布式事务解决方案Part1"/><published>2022-02-01T00:00:00+00:00</published><updated>2022-02-01T00:00:00+00:00</updated><id>https://zhengstar94.github.io//blog/2022/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88Part1</id><content type="html" xml:base="https://zhengstar94.github.io//blog/2022/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88Part1/"><![CDATA[<h1 id="2pc">2PC</h1> <p>有一个事务管理器，负责协调多个数据库（资源管理器）的事务</p> <ol> <li>事务管理器先问各个数据库预提交 ok 吗？</li> <li>如果每个数据库都回复ok，即预提交成功，就正式提交事务，在各个数据库开始执行操作，这里失败会有失败异常重试，日志分析，人工重试。</li> </ol> <p><strong>缺点：</strong></p> <ol> <li>同步阻塞问题</li> <li>单点故障</li> <li>同步阻塞问题</li> </ol> <h1 id="tcc">TCC</h1> <ul> <li>Try<br/> 对各个服务的资源做检测,对资源进行提前锁定或者预留</li> <li>Confirm<br/> 在各个服务中执行实际的操作</li> <li>Cancel<br/> 如果任何一个服务的业务方法执行出错，那么这里就需要进行补偿，即执行已操作成功的业务逻辑的回滚操作</li> </ul> <blockquote> <p>一般来说和钱相关的支付、交易等相关的场景，我们会用TCC，严格严格保证分布式事务要么全部成功，要么全部自动回滚，严格保证资金的正确性!</p> </blockquote> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2022/02/image-79a7a0a641664ad4b0e5087fefd95172-480.webp 480w,/assets/img/2022/02/image-79a7a0a641664ad4b0e5087fefd95172-800.webp 800w,/assets/img/2022/02/image-79a7a0a641664ad4b0e5087fefd95172-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2022/02/image-79a7a0a641664ad4b0e5087fefd95172.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h1 id="本地消息">本地消息</h1> <ul> <li>A系统在本地一个事务里操作的同时，插入一条数据到消息表</li> <li>接着A系统将这个消息发送到MQ</li> <li>B系统接收到消息后，在一个事务里，往自己本地消息表里插入一条数据，同时执行其他的业务操作，如果这个消息已经被处理过了，那么此时这个事务会回滚，这样保证不会重复处理消息</li> <li>B系统执行成功后，就会更新自己本地消息表的状态以及A系统消息表的状态</li> <li>如果B系统处理失败，那么就不会更新消息表状态，那么此时A系统会定时扫描自己的消息表，如果有未处理的消息，会再次发送到MQ中去，让B再处理</li> </ul> <p><strong>优点：</strong><br/> 这个方案保证了最终一致性<br/> 哪怕B事务失败了，但是A会不断重发消息，直到B那边成功为止</p> <p><strong>缺点：</strong><br/> 最大的问题就在于严重依赖于数据库的消息表来管理事务,这个会导致高并发场景无力,难以扩展呢,一般确实很少用</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2022/02/image-450de6af0755471a896965ca00178b4a-480.webp 480w,/assets/img/2022/02/image-450de6af0755471a896965ca00178b4a-800.webp 800w,/assets/img/2022/02/image-450de6af0755471a896965ca00178b4a-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2022/02/image-450de6af0755471a896965ca00178b4a.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h1 id="最终一致性">最终一致性</h1> <ul> <li>A系统先发送一个prepared消息到MQ，如果这个prepared消息发送失败,那么就直接取消操作,不执行了</li> <li>如果这个消息发送成功过了，那么接着执行本地事务，如果成功就告诉MQ发送确认消息，如果失败就告诉MQ回滚消息</li> <li>如果发送了确认消息，那么此时B系统会接收到确认消息，然后执行本地的事务</li> <li>MQ会自动定时轮询所有prepared消息回调你的接口，问你这个消息是不是本地事务处理失败了，所有没发送确认的消息,是继续重试还是回滚？</li> <li>这里你就可以查下数据库看之前本地事务是否执行，如果回滚了，那么这里也回滚吧。这个就是避免可能本地事务执行成功了，别确认消息发送失败了。</li> <li>如果系统B的事务失败了咋办？<br/> 重试咯，自动不断重试直到成功，如果实在是不行，要么就是针对重要的资金类业务进行回滚，比如B系统本地回滚后，想办法通知系统A也回滚；或者是发送报警由人工来手工回滚和补偿.</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2022/02/image-34bf0d9a13ae4893be3ef0913284eb15-480.webp 480w,/assets/img/2022/02/image-34bf0d9a13ae4893be3ef0913284eb15-800.webp 800w,/assets/img/2022/02/image-34bf0d9a13ae4893be3ef0913284eb15-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2022/02/image-34bf0d9a13ae4893be3ef0913284eb15.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h1 id="最大努力通知方案">最大努力通知方案</h1> <ul> <li>系统A本地事务执行完后，发送一个消息到MQ</li> <li>有一专门消费MQ的最大努力通知服务，会消费MQ,然后写入数据库中记录下来，亦可是放入内存队列，接着调用系统B的接口</li> <li>若系统B执行成功就ok；若系统B执行失败，那么最大努力通知服务就定时尝试重新调用系统B，反复N次，最后还是不行才放弃</li> </ul> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2022/02/image-2184e38c44a84cc5b4c595daa995b9ac-480.webp 480w,/assets/img/2022/02/image-2184e38c44a84cc5b4c595daa995b9ac-800.webp 800w,/assets/img/2022/02/image-2184e38c44a84cc5b4c595daa995b9ac-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2022/02/image-2184e38c44a84cc5b4c595daa995b9ac.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <blockquote> <p>你找一个严格资金要求绝对不能错的场景，你可以说你是用的TCC方案<br/> 如果是一般的分布式事务场景，订单插入之后要调用库存服务更新库存，库存数据没有资金那么的敏感，可以用可靠消息最终一致性方案</p> </blockquote>]]></content><author><name></name></author><category term="分布式"/><summary type="html"><![CDATA[2PC]]></summary></entry><entry><title type="html">LinuxDay3</title><link href="https://zhengstar94.github.io//blog/2022/LinuxDay3/" rel="alternate" type="text/html" title="LinuxDay3"/><published>2022-01-03T00:00:00+00:00</published><updated>2022-01-03T00:00:00+00:00</updated><id>https://zhengstar94.github.io//blog/2022/LinuxDay3</id><content type="html" xml:base="https://zhengstar94.github.io//blog/2022/LinuxDay3/"><![CDATA[<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 将当前文件目录的内容输出到1.txt</span>
<span class="nb">ls</span> <span class="o">&gt;</span> 1.txt
</code></pre></div></div> <h2 id="脚本">脚本</h2> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># test.sh文件内容</span>
<span class="c"># ls</span>
<span class="c"># cal</span>
<span class="c"># date</span>

<span class="c"># 运行脚本</span>
sh test.sh

<span class="c"># echo 输出</span>
<span class="nv">a</span><span class="o">=</span>10
<span class="nb">echo</span> <span class="nv">$a</span>
<span class="nb">echo</span> <span class="s2">"Hello World"</span> <span class="nv">$a</span>

<span class="c"># 加法</span>
<span class="nv">a</span><span class="o">=</span>10
<span class="nv">b</span><span class="o">=</span>3
<span class="nv">c</span><span class="o">=</span><span class="sb">`</span><span class="nb">expr</span> <span class="nv">$a</span> + <span class="nv">$b</span><span class="sb">`</span>
<span class="nb">echo</span> <span class="nv">$c</span>

<span class="c">#乘法需要转义，括号()也要转义</span>
<span class="nv">a</span><span class="o">=</span>10
<span class="nv">b</span><span class="o">=</span>3
<span class="nv">c</span><span class="o">=</span><span class="sb">`</span><span class="nb">expr</span> <span class="nv">$a</span> <span class="se">\*</span> <span class="nv">$b</span><span class="sb">`</span>
<span class="nb">echo</span> <span class="nv">$c</span>


<span class="c"># 判断 </span>
<span class="c"># 大于 -gt greater than</span>
<span class="c"># 大于等于 -ge greater equal</span>
<span class="c"># 小于 -lt less than</span>
<span class="c"># 小于等于 -le less equal</span>
<span class="c"># 等于 -eq equal</span>
<span class="c"># 不等于 -ne not equal</span>
<span class="nv">a</span><span class="o">=</span>10
<span class="nv">b</span><span class="o">=</span>3
<span class="k">if</span> <span class="o">[</span> <span class="nv">$a</span> <span class="nt">-gt</span> <span class="nv">$b</span> <span class="o">]</span>
<span class="k">then 
	</span><span class="nb">echo</span> <span class="nv">$a</span>
<span class="k">else
	</span><span class="nb">echo</span> <span class="nv">$b</span>
<span class="k">fi</span>


<span class="c"># 循环</span>
<span class="k">for </span>x <span class="k">in </span>1 2 3 4 5 6 7 8 9 10 
<span class="k">do
	</span><span class="nb">echo</span> <span class="nv">$x</span>
<span class="k">done</span>

<span class="c"># 或者</span>
<span class="nv">x</span><span class="o">=</span>1
<span class="k">while</span> <span class="o">[</span> <span class="nv">$x</span> <span class="nt">-le</span> 10 <span class="o">]</span>
<span class="k">do
	</span><span class="nb">echo</span> <span class="nv">$x</span>
	<span class="nv">x</span><span class="o">=</span><span class="sb">`</span><span class="nb">expr</span> <span class="nv">$x</span> + 1<span class="sb">`</span>
<span class="k">done</span>



</code></pre></div></div>]]></content><author><name></name></author><category term="Linux"/><summary type="html"><![CDATA[# 将当前文件目录的内容输出到1.txt ls &gt; 1.txt]]></summary></entry><entry><title type="html">LinuxDay2</title><link href="https://zhengstar94.github.io//blog/2022/LinuxDay2/" rel="alternate" type="text/html" title="LinuxDay2"/><published>2022-01-02T00:00:00+00:00</published><updated>2022-01-02T00:00:00+00:00</updated><id>https://zhengstar94.github.io//blog/2022/LinuxDay2</id><content type="html" xml:base="https://zhengstar94.github.io//blog/2022/LinuxDay2/"><![CDATA[<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># rm 文件名 删除文件（删除需要非常小心）</span>
<span class="nb">rm </span>file_target.txt

<span class="c"># mv 文件名1 文件名2  把文件名1 重命名为 文件名2</span>
<span class="nb">mv </span>file_target.txt hello.txt

<span class="c"># mv 文件名1 文件夹名字  将文件移动</span>
<span class="nb">mv </span>file_target.txt 文件名

<span class="c"># less 类似文件浏览的作用，可以方向键上下移动，退出的话使用'q'退出</span>
less 文件名


</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 权限</span>
<span class="nt">-rw-r--r--</span>
</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2022/02/1-480.webp 480w,/assets/img/2022/02/1-800.webp 800w,/assets/img/2022/02/1-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2022/02/1.png" class="img-fluid rounded z-depth-1" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h2 id="chmod">chmod</h2> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># chmod 修改权限</span>
<span class="c"># chmod u-r 文件名 去掉user读的权限</span>
<span class="nb">chmod </span>u-r file_target.txt

<span class="c"># chmod u+r 文件名 加上user读的权限</span>
<span class="nb">chmod </span>u-r file_target.txt

<span class="c"># chmod go-r 文件名 小组与其他人都去掉读权限</span>
<span class="nb">chmod </span>go-r file_target.txt

</code></pre></div></div> <h2 id="grep">grep</h2> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># grep 关键字 文件名 这个文件是否有关键字，如果有红色的结果，说明存在</span>
<span class="nb">grep </span>xx file_target.txt

<span class="c"># grep 关键字 文件名 这个文件是否有关键字，如果有红色的结果，说明存在;或者包含关键字的筛选出来</span>
<span class="nb">grep </span>xx file_target.txt

<span class="c"># 正则有关</span>
<span class="c"># grep l* 文件名 代表l字母在文件中出现多次，l* 至少出现0次</span>
<span class="nb">grep </span>l<span class="k">*</span> file_target.txt

<span class="c"># grep ll* 文件名 代表l字母在文件中出现多次，ll* 至少出现1次</span>
<span class="nb">grep </span>ll<span class="k">*</span> file_target.txt

<span class="c"># grep ^H 文件名 代表以H开头的</span>
<span class="nb">grep</span> ^H file_target.txt

<span class="c"># grep H.ll 文件名 .代表是任意的字母</span>
<span class="nb">grep </span>H.ll file_target.txt

<span class="c"># grep [Hh]ill 文件名 [Hh]可以代表左边或者右边，两个任意一个</span>
<span class="nb">grep</span> <span class="o">[</span>Hh]ill file_target.txt

<span class="c"># grep [A-Za-z]ill 文件名 [A-Za-z]ill可以代表任意一个字母带上ill</span>
<span class="nb">grep</span> <span class="o">[</span>A-Za-z]ill file_target.txt


<span class="c"># grep [A-Za-z]ill 文件名 | wc 统计这些信息内容</span>
<span class="nb">grep</span> <span class="o">[</span>A-Za-z]ill file_target.txt | <span class="nb">wc</span>


</code></pre></div></div>]]></content><author><name></name></author><category term="Linux"/><summary type="html"><![CDATA[```bash rm 文件名 删除文件（删除需要非常小心） rm file_target.txt]]></summary></entry></feed>